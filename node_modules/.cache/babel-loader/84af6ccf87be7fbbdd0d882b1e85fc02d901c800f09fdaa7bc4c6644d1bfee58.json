{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\components\\\\CommentsDrawer.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { IconButton } from '@mui/material';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { useEffect, useState } from 'react';\nimport { getCommentsByTrackId } from '../services/comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentsDrawer(props) {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [uploaded, setUploaded] = useState(false);\n  const [comments, setComments] = useState(null);\n  const [drawerContext, setDrawerContext] = useState(null);\n  const toggleDrawer = newOpen => () => {\n    setOpen(newOpen);\n  };\n  async function uploadComments() {\n    if (!uploaded) {\n      const commentsResponse = await getCommentsByTrackId(props.trackId);\n      console.log(commentsResponse);\n      setComments(commentsResponse);\n      if (commentsResponse) {\n        setUploaded(!uploaded);\n      }\n    }\n  }\n  useEffect(() => {\n    if (uploaded) {\n      const DrawerList = /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 250\n        },\n        role: \"presentation\",\n        onClick: toggleDrawer(false),\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: comments === null || comments === void 0 ? void 0 : comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Divider, {\n              textAlign: \"right\",\n              children: [\"posted on: \", comment.postDate.toISOString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true\n            }, comment.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 44\n                }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    }\n  }, [uploaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleDrawer(true),\n      \"aria-label\": \"edit\",\n      children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer\n    //   sx={{backgroundColor:'grey'}} \n    , {\n      anchor: 'right',\n      open: open,\n      onClose: toggleDrawer(false),\n      children: drawerContext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsDrawer, \"EgLFvKD7aASr58xDyO8AXj7NNyk=\");\n_c = CommentsDrawer;\nvar _c;\n$RefreshReg$(_c, \"CommentsDrawer\");","map":{"version":3,"names":["React","Box","Drawer","List","Divider","ListItem","ListItemButton","ListItemIcon","ListItemText","InboxIcon","MailIcon","IconButton","CommentIcon","useEffect","useState","getCommentsByTrackId","jsxDEV","_jsxDEV","CommentsDrawer","props","_s","open","setOpen","uploaded","setUploaded","comments","setComments","drawerContext","setDrawerContext","toggleDrawer","newOpen","uploadComments","commentsResponse","trackId","console","log","DrawerList","sx","width","role","onClick","children","map","comment","index","textAlign","postDate","toISOString","fileName","_jsxFileName","lineNumber","columnNumber","disablePadding","id","text","primary","anchor","onClose","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/components/CommentsDrawer.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport { IconButton } from '@mui/material';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport { useEffect, useState } from 'react';\r\nimport { getCommentsByTrackId } from '../services/comment';\r\nimport { Comment } from '../types/Comment';\r\nexport default function CommentsDrawer(props:{trackId:number}) {\r\n  const [open, setOpen] = React.useState(false);\r\n    const [uploaded,setUploaded]=useState(false)\r\n    const [comments, setComments]=useState<Comment[]|null>(null)\r\n    const[drawerContext, setDrawerContext]=useState(null)\r\n  const toggleDrawer = (newOpen: boolean) => () => {\r\n    setOpen(newOpen);\r\n  };\r\n  async function uploadComments(){\r\n    if(!uploaded){\r\n        const commentsResponse=await getCommentsByTrackId(props.trackId);\r\n        console.log(commentsResponse)\r\n        setComments(commentsResponse)\r\n        if(commentsResponse){\r\n            setUploaded(!uploaded)\r\n        }\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(uploaded){\r\n        const DrawerList = (\r\n            <Box sx={{ width: 250 }} role=\"presentation\" onClick={toggleDrawer(false)}>\r\n              <List>\r\n                {comments?.map((comment:Comment, index) => (\r\n                    <Box>\r\n                    <Divider textAlign='right' >posted on: {comment.postDate.toISOString()}</Divider>\r\n                  <ListItem key={comment.id} disablePadding>\r\n                    {}\r\n                  </ListItem>\r\n                  </Box>\r\n                ))}\r\n              </List>\r\n              \r\n              <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                  <ListItem key={text} disablePadding>\r\n                    <ListItemButton>\r\n                      <ListItemIcon>\r\n                        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={text} />\r\n                    </ListItemButton>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Box>\r\n          );\r\n    }\r\n  },[uploaded])\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={toggleDrawer(true)} aria-label=\"edit\">\r\n        <CommentIcon/>\r\n        </IconButton>\r\n      <Drawer\r\n    //   sx={{backgroundColor:'grey'}} \r\n      anchor={'right'} open={open} onClose={toggleDrawer(false)}>\r\n        {drawerContext}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}