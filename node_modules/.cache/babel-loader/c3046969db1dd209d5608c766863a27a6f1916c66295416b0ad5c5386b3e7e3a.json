{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport trackSlice from './track/track.slice';\nimport userSlice from './user/user.slice';\nimport viewSlice from './view/view.slice';\nimport categorySlice from './category/category.slice';\n// import { getDefaultMiddleware } from '@reduxjs/toolkit';\n\n// import thunkMiddleware from 'redux-thunk'; // Import Redux Thunk middleware\nimport dayPartSlice from './dayPart/dayPart.slice';\nimport statusSlice from './status/status.slice';\nimport levelSlice from './level/level.slice';\nimport companySlice from './company/company.slice';\nimport experienceSlice from './experience/experience.slice';\nimport alltracksSlice from './alltracks/alltracks.slice';\n// const middleware = [ thunkMiddleware];\nexport const store = configureStore({\n  reducer: {\n    user: userSlice,\n    track: trackSlice,\n    view: viewSlice,\n    category: categorySlice,\n    dayPart: dayPartSlice,\n    status: statusSlice,\n    level: levelSlice,\n    experience: experienceSlice,\n    company: companySlice,\n    alltracks: alltracksSlice\n  }\n});\nexport const useAppDispatch = useDispatch;\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["configureStore","useDispatch","useSelector","trackSlice","userSlice","viewSlice","categorySlice","dayPartSlice","statusSlice","levelSlice","companySlice","experienceSlice","alltracksSlice","store","reducer","user","track","view","category","dayPart","status","level","experience","company","alltracks","useAppDispatch","useAppSelector"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/redux/store.tsx"],"sourcesContent":["import {ThunkAction, UnknownAction, configureStore } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport trackSlice from './track/track.slice'\r\nimport userSlice from './user/user.slice'\r\nimport viewSlice from './view/view.slice'\r\nimport categorySlice from './category/category.slice'\r\n// import { getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\n// import thunkMiddleware from 'redux-thunk'; // Import Redux Thunk middleware\r\nimport dayPartSlice from './dayPart/dayPart.slice'\r\nimport statusSlice from './status/status.slice'\r\nimport levelSlice from './level/level.slice'\r\nimport companySlice from './company/company.slice'\r\nimport experienceSlice from './experience/experience.slice'\r\nimport alltracksSlice from './alltracks/alltracks.slice'\r\n// const middleware = [ thunkMiddleware];\r\nexport const store = configureStore({\r\n    reducer: {\r\n        user: userSlice,\r\n        track:trackSlice,\r\n        view:viewSlice,\r\n        category:categorySlice,\r\n        dayPart:dayPartSlice,\r\n        status:statusSlice,\r\n        level:levelSlice,\r\n        experience:experienceSlice,\r\n        company:companySlice,\r\n        alltracks:alltracksSlice\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    Promise<ReturnType> | ReturnType,\r\n    RootState,\r\n    unknown,\r\n    UnknownAction\r\n>"],"mappings":"AAAA,SAAoCA,cAAc,QAAQ,kBAAkB;AAC5E,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAC5E,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,aAAa,MAAM,2BAA2B;AACrD;;AAEA;AACA,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,cAAc,MAAM,6BAA6B;AACxD;AACA,OAAO,MAAMC,KAAK,GAAGb,cAAc,CAAC;EAChCc,OAAO,EAAE;IACLC,IAAI,EAAEX,SAAS;IACfY,KAAK,EAACb,UAAU;IAChBc,IAAI,EAACZ,SAAS;IACda,QAAQ,EAACZ,aAAa;IACtBa,OAAO,EAACZ,YAAY;IACpBa,MAAM,EAACZ,WAAW;IAClBa,KAAK,EAACZ,UAAU;IAChBa,UAAU,EAACX,eAAe;IAC1BY,OAAO,EAACb,YAAY;IACpBc,SAAS,EAACZ;EACd;AACJ,CAAC,CAAC;AAKF,OAAO,MAAMa,cAAiC,GAAGxB,WAAW;AAC5D,OAAO,MAAMyB,cAA+C,GAAGxB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}