{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\components\\\\Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { k as apikey } from '../utils/projectdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '500px'\n};\nconst center = {\n  lat: 32.073954,\n  lng: 34.836038\n};\nfunction MyComponent(prop) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: apikey,\n    language: 'he'\n  });\n  const [postion, setPosition] = useState({\n    lat: 1,\n    lng: 1\n  });\n  const [map, setMap] = React.useState(null);\n  const [geocoder, setGeocoder] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const onLoad = React.useCallback(map => {\n    setMap(map);\n    map.addListener('click', e => {\n      onClickHandler({\n        x: e.latLng.lat(),\n        y: e.latLng.lng()\n      });\n    });\n  }, []);\n  const onUnmount = React.useCallback(map => {\n    setMap(null);\n  }, []);\n  function onClickHandler({\n    x,\n    y\n  }) {\n    setPosition({\n      lat: x,\n      lng: y\n    });\n    prop.setX(x);\n    prop.setY(y);\n  }\n  useEffect(() => {\n    // console.log(geocoder)\n  }, [geocoder]);\n  useEffect(() => {\n    if (isLoaded) {\n      // Initialize the geocoder\n      setGeocoder(new window.google.maps.Geocoder());\n    }\n  }, [isLoaded]);\n  useEffect(() => {\n    console.log(map);\n  }, [map]);\n  useEffect(() => {\n    console.log(postion);\n    if (geocoder) {\n      geocoder.geocode({\n        location: {\n          lat: postion.lat,\n          lng: postion.lng\n        }\n      }, (results, status) => {\n        if (status === 'OK') {\n          console.log(results);\n          if (results[0]) {\n            prop.setAddress(results[0].formatted_address);\n            console.log(results[0].formatted_address);\n          } else {\n            prop.setAddress('Address not found');\n            console.log('Address not found');\n          }\n        } else {\n          prop.setAddress('Geocoder failed due to: ' + status);\n          console.log('Geocoder failed due to: ' + status);\n        }\n      });\n    }\n    // loadMarker();\n  }, [postion]);\n  async function loadMarker() {\n    const {\n      AdvancedMarkerElement\n    } = await google.maps.importLibrary(\"marker\");\n    setMarker(new AdvancedMarkerElement({\n      map: map,\n      position: {\n        lat: postion.lat,\n        lng: postion.lng\n      },\n      title: 'my Marker'\n    }));\n  }\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 17,\n    onLoad: onLoad,\n    onUnmount: onUnmount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading...\"\n  }, void 0, false);\n}\n_s(MyComponent, \"4zHiSrgb3Sa01pVCOG836POWXJ8=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MyComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useJsApiLoader","k","apikey","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","MyComponent","prop","_s","isLoaded","id","googleMapsApiKey","language","postion","setPosition","map","setMap","geocoder","setGeocoder","marker","setMarker","onLoad","useCallback","addListener","e","onClickHandler","x","latLng","y","onUnmount","setX","setY","window","google","maps","Geocoder","console","log","geocode","location","results","status","setAddress","formatted_address","loadMarker","AdvancedMarkerElement","importLibrary","position","title","mapContainerStyle","zoom","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/components/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport { k as apikey } from '../utils/projectdata';\r\nconst containerStyle = {\r\n  width: '400px',\r\n  height: '500px',\r\n};\r\n\r\nconst center = {\r\n  lat: 32.073954,\r\n  lng: 34.836038,\r\n};\r\n\r\ntype MapType = google.maps.Map;\r\ntype Pos={\r\n  lat:number,\r\n  lng:number\r\n}\r\nfunction MyComponent(prop:{setAddress:(address:string)=>void,setX:(x:number)=>void,setY:(y:number)=>void}) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: apikey,\r\n    language: 'he',\r\n  });\r\n  const [postion,setPosition]=useState<Pos>({lat:1,lng:1})\r\n\r\n  const [map, setMap] = React.useState<MapType | null>(null);\r\n  const [geocoder, setGeocoder] = useState<google.maps.Geocoder|null>(null);\r\n  const [marker, setMarker]=useState<any>(null);\r\n  const onLoad = React.useCallback((map: MapType) => {\r\n    setMap(map);\r\n    map.addListener('click',(e:any)=>{\r\n      onClickHandler({x:e.latLng.lat(),y:e.latLng.lng()})\r\n    })\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback((map: MapType) => {\r\n    setMap(null);\r\n  }, []);\r\nfunction onClickHandler({x,y}:any){\r\n  setPosition({lat:x,lng:y})\r\n  prop.setX(x)\r\n  prop.setY(y)\r\n}\r\nuseEffect(()=>{\r\n  // console.log(geocoder)\r\n},[geocoder])\r\n useEffect(() => {\r\n    if (isLoaded) {\r\n      // Initialize the geocoder\r\n      setGeocoder(new window.google.maps.Geocoder());\r\n    }\r\n  }, [isLoaded]);\r\nuseEffect(()=>{\r\n  console.log(map)\r\n},[map])\r\nuseEffect(()=>{\r\n  console.log(postion)\r\n  if (geocoder) {\r\n    geocoder.geocode({ location: {lat:postion.lat,lng:postion.lng} }, (results, status) => {\r\n      if (status === 'OK') {\r\n        console.log(results)\r\n        if (results![0]) {\r\n          prop.setAddress(results![0].formatted_address)\r\n          console.log(results![0].formatted_address);\r\n        } else {\r\n          prop.setAddress('Address not found')\r\n          console.log('Address not found');\r\n        }\r\n      } else {\r\n        prop.setAddress('Geocoder failed due to: ' + status)\r\n        console.log('Geocoder failed due to: ' + status);\r\n      }\r\n    });\r\n  }\r\n  // loadMarker();\r\n  \r\n    \r\n},[postion])\r\nasync function loadMarker(){\r\n  const {AdvancedMarkerElement} = await google.maps.importLibrary(\"marker\")as google.maps.MarkerLibrary;\r\n  setMarker(new AdvancedMarkerElement({\r\n    map:map,\r\n    position: {lat:postion.lat,lng:postion.lng},\r\n    title: 'my Marker',\r\n}));\r\n}\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={17}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      \r\n    >\r\n      {/* Child components, such as markers, info windows, etc. */}\r\n      {/* {postion&& */}\r\n      \r\n      {/* <Marker\r\n        position={postion}\r\n        icon={{\r\n          url: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\r\n          scaledSize: new window.google.maps.Size(50, 50) // Adjust size as needed\r\n        }}\r\n      /> */}\r\n    </GoogleMap>\r\n  ) : (\r\n    <>Loading...</>\r\n  );\r\n}\r\n\r\nexport default React.memo(MyComponent);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}