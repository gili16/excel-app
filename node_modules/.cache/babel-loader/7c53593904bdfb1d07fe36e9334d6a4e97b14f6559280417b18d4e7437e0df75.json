{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\sections\\\\auth\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport { Button, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { Login as LoginThunk } from \"../../redux/user/user.thunk\";\nimport { isValidEmail } from \"../../utils/validation.utils\";\nimport { useAppDispatch } from '../../redux/store';\nimport BasicModal from \"../../components/Modal.component\";\nimport { setSession } from \"../../auth/auth.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = useState(false);\n  const [text, setText] = useState(\"\");\n  const onChangeEndler = e => {\n    let value = e.target.value;\n    setEmail(value);\n  };\n  const onLoginHandler = async () => {\n    if (email === \"\") {\n      alert(\"please enter an email address\");\n    } else {\n      try {\n        if (isValidEmail(email)) {\n          setOpen(true);\n          setText(\"generating token\");\n          let user = await dispatch(LoginThunk(email));\n          setSession(user);\n          setText(\"Happy Serving!\");\n          setOpen(false);\n          setText(\"\");\n        }\n      } catch (error) {\n        alert(\"\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BasicModal, {\n      open: open,\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: email !== \"\" && !isValidEmail(email),\n      size: \"small\",\n      sx: {\n        backgroundColor: 'whitesmoke',\n        borderRadius: '5px'\n      },\n      id: \"outlined-basic\",\n      label: \"your email here\",\n      variant: \"outlined\",\n      onChange: onChangeEndler,\n      helperText: email === \"\" || isValidEmail(email) ? \"\" : \"please enter a valid email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"inherit\",\n      onClick: onLoginHandler,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginForm, \"mrTdceshE9qsBA6mMSbHfTH1wUI=\", false, function () {\n  return [useAppDispatch];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Button","TextField","useState","Login","LoginThunk","isValidEmail","useAppDispatch","BasicModal","setSession","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","email","setEmail","dispatch","open","setOpen","text","setText","onChangeEndler","e","value","target","onLoginHandler","alert","user","error","children","fileName","_jsxFileName","lineNumber","columnNumber","size","sx","backgroundColor","borderRadius","id","label","variant","onChange","helperText","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/sections/auth/LoginForm.tsx"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\r\nimport { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Login, getUserByToken } from \"../../services/user\";\r\nimport { Login as LoginThunk } from \"../../redux/user/user.thunk\";\r\nimport { addUser } from \"../../redux/user/user.slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { isValidEmail } from \"../../utils/validation.utils\";\r\nimport { useAppDispatch } from '../../redux/store';\r\nimport BasicModal from \"../../components/Modal.component\";\r\nimport { setSession } from \"../../auth/auth.utils\";\r\nexport default function LoginForm() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const dispatch = useAppDispatch()\r\n    const [open, setOpen] = useState(false)\r\n    const [text, setText] = useState(\"\")\r\n    const onChangeEndler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.target.value\r\n        setEmail(value)\r\n    }\r\n\r\n    const onLoginHandler = async () => {\r\n        if (email === \"\") {\r\n            alert(\"please enter an email address\")\r\n        } else {\r\n            try {\r\n                if (isValidEmail(email)) {\r\n                    setOpen(true)\r\n                    setText(\"generating token\")\r\n                    let user = await dispatch(LoginThunk(email))\r\n                    setSession(user!)\r\n                    setText(\"Happy Serving!\")\r\n                    setOpen(false)\r\n                    setText(\"\")\r\n                }\r\n            } catch (error) {\r\n                alert(\"\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <>\r\n        <BasicModal open={open} text={text} />\r\n        <TextField\r\n            error={email !== \"\" && !isValidEmail(email)}\r\n            size='small'\r\n            sx={{ backgroundColor: 'whitesmoke', borderRadius: '5px' }}\r\n            id=\"outlined-basic\"\r\n            label=\"your email here\"\r\n            variant='outlined'\r\n            onChange={onChangeEndler}\r\n            helperText={email === \"\" || isValidEmail(email) ? \"\" : \"please enter a valid email address\"}\r\n        />\r\n        <Button color=\"inherit\" onClick={onLoginHandler}>Login</Button>\r\n    </>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}