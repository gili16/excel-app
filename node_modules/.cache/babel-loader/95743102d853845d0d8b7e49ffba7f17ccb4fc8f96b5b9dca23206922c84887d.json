{"ast":null,"code":"import { addUser as addUserApi, deleteFavorite as deleteFavoriteApi, addFavorite as addFavoriteApi } from '../../services/user';\nimport { addUser as addUserAction, logoutUser as logoutUserAction, setUser } from './user.slice';\nimport { Login as LoginApi } from \"../../services/user\";\nimport { removeSession, setSession } from \"../../auth/auth.utils\";\nimport { updateTrack } from \"../track/track.slice\";\nimport { deleteFavorite as deleteFavoriteAction } from \"./user.slice\";\nexport const addUser = user => async (dispatch, getState) => {\n  // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\n  try {\n    const newUser = await addUserApi(user);\n    dispatch(addUserAction(newUser));\n    return newUser;\n  } catch (error) {\n    alert(\"please try another email address\");\n  }\n};\nexport const Login = mail => async (dispatch, getState) => {\n  try {\n    const response = await LoginApi(mail);\n    dispatch(setUser(response.user));\n    setSession(response);\n    return response;\n  } catch (error) {\n    alert(error);\n  }\n  return null;\n};\nexport const logoutUser = user => async (dispatch, getState) => {\n  dispatch(logoutUserAction());\n  removeSession();\n};\nexport const deleteFavourite = (userId, track, token) => async (dispatch, getState) => {\n  await deleteFavoriteApi(userId, track, token);\n  let newTrack = {\n    ...track\n  };\n  newTrack.favourites -= 1;\n  dispatch(updateTrack({\n    ...newTrack\n  }));\n  dispatch(deleteFavoriteAction(track.id));\n};\nexport const addFavorite = (userId, track, token) => async (dispatch, getState) => {\n  await addFavoriteApi(userId, track, token);\n  let newTrack = {\n    ...track\n  };\n  newTrack.favourites += 1;\n  dispatch(updateTrack({\n    ...newTrack\n  }));\n  dispatch(deleteFavoriteAction(track.id));\n};","map":{"version":3,"names":["addUser","addUserApi","deleteFavorite","deleteFavoriteApi","addFavorite","addFavoriteApi","addUserAction","logoutUser","logoutUserAction","setUser","Login","LoginApi","removeSession","setSession","updateTrack","deleteFavoriteAction","user","dispatch","getState","newUser","error","alert","mail","response","deleteFavourite","userId","track","token","newTrack","favourites","id"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/redux/user/user.thunk.ts"],"sourcesContent":["import { AuthUser, User } from \"../../types/user.types\";\r\nimport { addUser as addUserApi, deleteFavorite as deleteFavoriteApi, addFavorite as addFavoriteApi, getUser } from '../../services/user'\r\nimport { AppThunk } from \"../store\";\r\nimport { addUser as addUserAction, logoutUser as logoutUserAction, setUser } from './user.slice'\r\nimport { getUserByToken as getUserApi, Login as LoginApi } from \"../../services/user\";\r\nimport { removeSession, setSession } from \"../../auth/auth.utils\";\r\nimport { Track } from \"../../types/Track\";\r\nimport { updateTrack } from \"../track/track.slice\";\r\nimport { deleteFavorite as deleteFavoriteAction, addFavorite as addFaoriteAction, deleteTrack as deleteTrackAction, addTrack as addTrackAction } from \"./user.slice\";\r\nexport const addUser = (user: FormData): AppThunk<User> => async (dispatch, getState) => {\r\n\r\n    // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\r\n    try {\r\n        const newUser = await addUserApi(user)\r\n        dispatch(addUserAction(newUser))\r\n        return newUser\r\n    } catch (error) {\r\n\r\n        alert(\"please try another email address\")\r\n    }\r\n}\r\n\r\nexport const Login = (mail: string): AppThunk<AuthUser | null> => async (dispatch, getState) => {\r\n    try {\r\n        const response = await LoginApi(mail)\r\n        dispatch(setUser(response.user))\r\n        setSession(response)\r\n        return response;\r\n    } catch (error) {\r\n        alert(error)\r\n    }\r\n    return null;\r\n\r\n\r\n}\r\n\r\nexport const logoutUser = (user: User | null | undefined): AppThunk<User | void> => async (dispatch, getState) => {\r\n    dispatch(logoutUserAction())\r\n    removeSession();\r\n}\r\n\r\nexport const deleteFavourite = (userId: number, track: Track, token: string): AppThunk<void> => async (dispatch, getState) => {\r\n    await deleteFavoriteApi(userId, track, token)\r\n    let newTrack = { ...track }\r\n    newTrack.favourites -= 1;\r\n    dispatch(updateTrack({ ...newTrack }))\r\n    dispatch(deleteFavoriteAction(track.id))\r\n\r\n}\r\nexport const addFavorite = (userId: number, track: Track, token: string): AppThunk<void> => async (dispatch, getState) => {\r\n    await addFavoriteApi(userId, track, token)\r\n    let newTrack = { ...track }\r\n    newTrack.favourites += 1;\r\n    dispatch(updateTrack({ ...newTrack }))\r\n    dispatch(deleteFavoriteAction(track.id))\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,IAAIC,UAAU,EAAEC,cAAc,IAAIC,iBAAiB,EAAEC,WAAW,IAAIC,cAAc,QAAiB,qBAAqB;AAExI,SAASL,OAAO,IAAIM,aAAa,EAAEC,UAAU,IAAIC,gBAAgB,EAAEC,OAAO,QAAQ,cAAc;AAChG,SAAuCC,KAAK,IAAIC,QAAQ,QAAQ,qBAAqB;AACrF,SAASC,aAAa,EAAEC,UAAU,QAAQ,uBAAuB;AAEjE,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASZ,cAAc,IAAIa,oBAAoB,QAAuG,cAAc;AACpK,OAAO,MAAMf,OAAO,GAAIgB,IAAc,IAAqB,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAErF;EACA,IAAI;IACA,MAAMC,OAAO,GAAG,MAAMlB,UAAU,CAACe,IAAI,CAAC;IACtCC,QAAQ,CAACX,aAAa,CAACa,OAAO,CAAC,CAAC;IAChC,OAAOA,OAAO;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAEZC,KAAK,CAAC,kCAAkC,CAAC;EAC7C;AACJ,CAAC;AAED,OAAO,MAAMX,KAAK,GAAIY,IAAY,IAAgC,OAAOL,QAAQ,EAAEC,QAAQ,KAAK;EAC5F,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMZ,QAAQ,CAACW,IAAI,CAAC;IACrCL,QAAQ,CAACR,OAAO,CAACc,QAAQ,CAACP,IAAI,CAAC,CAAC;IAChCH,UAAU,CAACU,QAAQ,CAAC;IACpB,OAAOA,QAAQ;EACnB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZC,KAAK,CAACD,KAAK,CAAC;EAChB;EACA,OAAO,IAAI;AAGf,CAAC;AAED,OAAO,MAAMb,UAAU,GAAIS,IAA6B,IAA4B,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC9GD,QAAQ,CAACT,gBAAgB,CAAC,CAAC,CAAC;EAC5BI,aAAa,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMY,eAAe,GAAGA,CAACC,MAAc,EAAEC,KAAY,EAAEC,KAAa,KAAqB,OAAOV,QAAQ,EAAEC,QAAQ,KAAK;EAC1H,MAAMf,iBAAiB,CAACsB,MAAM,EAAEC,KAAK,EAAEC,KAAK,CAAC;EAC7C,IAAIC,QAAQ,GAAG;IAAE,GAAGF;EAAM,CAAC;EAC3BE,QAAQ,CAACC,UAAU,IAAI,CAAC;EACxBZ,QAAQ,CAACH,WAAW,CAAC;IAAE,GAAGc;EAAS,CAAC,CAAC,CAAC;EACtCX,QAAQ,CAACF,oBAAoB,CAACW,KAAK,CAACI,EAAE,CAAC,CAAC;AAE5C,CAAC;AACD,OAAO,MAAM1B,WAAW,GAAGA,CAACqB,MAAc,EAAEC,KAAY,EAAEC,KAAa,KAAqB,OAAOV,QAAQ,EAAEC,QAAQ,KAAK;EACtH,MAAMb,cAAc,CAACoB,MAAM,EAAEC,KAAK,EAAEC,KAAK,CAAC;EAC1C,IAAIC,QAAQ,GAAG;IAAE,GAAGF;EAAM,CAAC;EAC3BE,QAAQ,CAACC,UAAU,IAAI,CAAC;EACxBZ,QAAQ,CAACH,WAAW,CAAC;IAAE,GAAGc;EAAS,CAAC,CAAC,CAAC;EACtCX,QAAQ,CAACF,oBAAoB,CAACW,KAAK,CAACI,EAAE,CAAC,CAAC;AAE5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}