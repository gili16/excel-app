{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst trackSlice = createSlice({\n  name: 'track',\n  initialState: [],\n  reducers: {\n    addTrack: (state, action) => {\n      state.push(action.payload);\n    },\n    deleteTrack: (state, action) => {\n      let index = -1;\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].id === action.payload) {\n          index = i;\n          break;\n        }\n      }\n      if (index !== -1) {\n        state.splice(index, 1);\n      } else {\n        console.log(\"no such element to erase\");\n      }\n    },\n    getAllTracks: (state, action) => {\n      return action.payload;\n    },\n    updateTrack: (state, action) => {\n      let track = state.filter(value => {\n        return value.id === action.payload.id;\n      })[0];\n      console.log(track);\n      if (track) {\n        track.comments = action.payload.comments;\n        track.companyForTripId = action.payload.companyForTripId;\n        track.created = action.payload.created;\n        track.dayPartId = action.payload.dayPartId;\n        track.description = action.payload.description;\n        track.endX = action.payload.endX;\n        track.endY = action.payload.endY;\n        track.favourites = action.payload.favourites;\n        track.length = action.payload.length;\n        track.levelId = action.payload.levelId;\n        track.picture = action.payload.picture;\n        track.pictureForm = action.payload.pictureForm;\n        track.startX = action.payload.startX;\n        track.startY = action.payload.startY;\n        track.stops = action.payload.stops;\n        track.title = action.payload.title;\n        track.viewId = action.payload.viewId;\n      }\n    },\n    addStop: (state, action) => {\n      let track = state.find(value => {\n        return value.id === action.payload.trackId;\n      });\n      if (track !== undefined) {\n        track.stops.push(action.payload);\n      } else {\n        alert(\"stop not added\");\n      }\n    },\n    addComment: (state, action) => {\n      let track = state.find(value => {\n        return value.id === action.payload.trackId;\n      });\n      if (track !== undefined) {\n        if (track.comments.find(value => {\n          return value.id === action.payload.comment.id;\n        }) === undefined) {\n          track.comments.push(action.payload.comment);\n        }\n      } else {\n        alert(\"comment not added\");\n      }\n    }\n  }\n});\nexport const {\n  getAllTracks,\n  deleteTrack,\n  addTrack,\n  updateTrack,\n  addStop,\n  addComment\n} = trackSlice.actions;\nexport default trackSlice.reducer;","map":{"version":3,"names":["createSlice","trackSlice","name","initialState","reducers","addTrack","state","action","push","payload","deleteTrack","index","i","length","id","splice","console","log","getAllTracks","updateTrack","track","filter","value","comments","companyForTripId","created","dayPartId","description","endX","endY","favourites","levelId","picture","pictureForm","startX","startY","stops","title","viewId","addStop","find","trackId","undefined","alert","addComment","comment","actions","reducer"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/redux/track/track.slice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit'\r\nimport { getUsers } from '../../services/user'\r\nimport { Track } from '../../types/Track'\r\nimport { act } from 'react-dom/test-utils'\r\nimport { Comment } from '../../types/Comment'\r\nconst trackSlice = createSlice({\r\n    name: 'track',\r\n    initialState: [] as Track[],\r\n    reducers: {\r\n        addTrack: (state: Track[], action) => {\r\n            state.push(action.payload)\r\n        },\r\n        deleteTrack: (state: Track[], action) => {\r\n            let index = -1\r\n            for (let i = 0; i < state.length; i++) {\r\n                if (state[i].id === action.payload) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (index !== -1) {\r\n                state.splice(index, 1)\r\n            }\r\n            else {\r\n                console.log(\"no such element to erase\")\r\n            }\r\n        },\r\n        getAllTracks: (state: Track[], action) => {\r\n            return action.payload\r\n        },\r\n        updateTrack: (state: Track[], action) => {\r\n            let track = state.filter(value => {\r\n                return value.id === action.payload.id\r\n            })[0] as Track\r\n            console.log(track)\r\n            if (track) {\r\n                track.comments = action.payload.comments;\r\n                track.companyForTripId = action.payload.companyForTripId;\r\n                track.created = action.payload.created;\r\n                track.dayPartId = action.payload.dayPartId;\r\n                track.description = action.payload.description;\r\n                track.endX = action.payload.endX;\r\n                track.endY = action.payload.endY;\r\n                track.favourites = action.payload.favourites;\r\n                track.length = action.payload.length;\r\n                track.levelId = action.payload.levelId;\r\n                track.picture = action.payload.picture;\r\n                track.pictureForm = action.payload.pictureForm;\r\n                track.startX = action.payload.startX;\r\n                track.startY = action.payload.startY;\r\n                track.stops = action.payload.stops;\r\n                track.title = action.payload.title;\r\n                track.viewId = action.payload.viewId;\r\n            }\r\n        },\r\n        addStop: (state: Track[], action) => {\r\n            let track = state.find(value => {\r\n               return value.id === action.payload.trackId;\r\n            })\r\n            if (track !== undefined) {\r\n                track.stops.push(action.payload)\r\n            } else {\r\n                alert(\"stop not added\")\r\n            }\r\n        },\r\n        addComment: (state: Track[], action: PayloadAction<{ trackId: number, comment: Comment }>) => {\r\n            \r\n            let track = state.find(value => {\r\n                return value.id === action.payload.trackId;\r\n            })\r\n            if (track !== undefined) {\r\n                if (track.comments.find(value => {\r\n                  return  value.id === action.payload.comment.id\r\n                }) === undefined) {\r\n                    track.comments.push(action.payload.comment)\r\n                }\r\n            } else {\r\n                alert(\"comment not added\")\r\n            }\r\n        }\r\n    }\r\n})\r\nexport const { getAllTracks, deleteTrack, addTrack, updateTrack, addStop, addComment } = trackSlice.actions\r\nexport default trackSlice.reducer"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAK7D,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAa;EAC3BC,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAc,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,WAAW,EAAEA,CAACJ,KAAc,EAAEC,MAAM,KAAK;MACrC,IAAII,KAAK,GAAG,CAAC,CAAC;MACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;QACnC,IAAIN,KAAK,CAACM,CAAC,CAAC,CAACE,EAAE,KAAKP,MAAM,CAACE,OAAO,EAAE;UAChCE,KAAK,GAAGC,CAAC;UACT;QACJ;MACJ;MACA,IAAID,KAAK,KAAK,CAAC,CAAC,EAAE;QACdL,KAAK,CAACS,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MAC1B,CAAC,MACI;QACDK,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC3C;IACJ,CAAC;IACDC,YAAY,EAAEA,CAACZ,KAAc,EAAEC,MAAM,KAAK;MACtC,OAAOA,MAAM,CAACE,OAAO;IACzB,CAAC;IACDU,WAAW,EAAEA,CAACb,KAAc,EAAEC,MAAM,KAAK;MACrC,IAAIa,KAAK,GAAGd,KAAK,CAACe,MAAM,CAACC,KAAK,IAAI;QAC9B,OAAOA,KAAK,CAACR,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACK,EAAE;MACzC,CAAC,CAAC,CAAC,CAAC,CAAU;MACdE,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MAClB,IAAIA,KAAK,EAAE;QACPA,KAAK,CAACG,QAAQ,GAAGhB,MAAM,CAACE,OAAO,CAACc,QAAQ;QACxCH,KAAK,CAACI,gBAAgB,GAAGjB,MAAM,CAACE,OAAO,CAACe,gBAAgB;QACxDJ,KAAK,CAACK,OAAO,GAAGlB,MAAM,CAACE,OAAO,CAACgB,OAAO;QACtCL,KAAK,CAACM,SAAS,GAAGnB,MAAM,CAACE,OAAO,CAACiB,SAAS;QAC1CN,KAAK,CAACO,WAAW,GAAGpB,MAAM,CAACE,OAAO,CAACkB,WAAW;QAC9CP,KAAK,CAACQ,IAAI,GAAGrB,MAAM,CAACE,OAAO,CAACmB,IAAI;QAChCR,KAAK,CAACS,IAAI,GAAGtB,MAAM,CAACE,OAAO,CAACoB,IAAI;QAChCT,KAAK,CAACU,UAAU,GAAGvB,MAAM,CAACE,OAAO,CAACqB,UAAU;QAC5CV,KAAK,CAACP,MAAM,GAAGN,MAAM,CAACE,OAAO,CAACI,MAAM;QACpCO,KAAK,CAACW,OAAO,GAAGxB,MAAM,CAACE,OAAO,CAACsB,OAAO;QACtCX,KAAK,CAACY,OAAO,GAAGzB,MAAM,CAACE,OAAO,CAACuB,OAAO;QACtCZ,KAAK,CAACa,WAAW,GAAG1B,MAAM,CAACE,OAAO,CAACwB,WAAW;QAC9Cb,KAAK,CAACc,MAAM,GAAG3B,MAAM,CAACE,OAAO,CAACyB,MAAM;QACpCd,KAAK,CAACe,MAAM,GAAG5B,MAAM,CAACE,OAAO,CAAC0B,MAAM;QACpCf,KAAK,CAACgB,KAAK,GAAG7B,MAAM,CAACE,OAAO,CAAC2B,KAAK;QAClChB,KAAK,CAACiB,KAAK,GAAG9B,MAAM,CAACE,OAAO,CAAC4B,KAAK;QAClCjB,KAAK,CAACkB,MAAM,GAAG/B,MAAM,CAACE,OAAO,CAAC6B,MAAM;MACxC;IACJ,CAAC;IACDC,OAAO,EAAEA,CAACjC,KAAc,EAAEC,MAAM,KAAK;MACjC,IAAIa,KAAK,GAAGd,KAAK,CAACkC,IAAI,CAAClB,KAAK,IAAI;QAC7B,OAAOA,KAAK,CAACR,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACgC,OAAO;MAC7C,CAAC,CAAC;MACF,IAAIrB,KAAK,KAAKsB,SAAS,EAAE;QACrBtB,KAAK,CAACgB,KAAK,CAAC5B,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MACpC,CAAC,MAAM;QACHkC,KAAK,CAAC,gBAAgB,CAAC;MAC3B;IACJ,CAAC;IACDC,UAAU,EAAEA,CAACtC,KAAc,EAAEC,MAA4D,KAAK;MAE1F,IAAIa,KAAK,GAAGd,KAAK,CAACkC,IAAI,CAAClB,KAAK,IAAI;QAC5B,OAAOA,KAAK,CAACR,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACgC,OAAO;MAC9C,CAAC,CAAC;MACF,IAAIrB,KAAK,KAAKsB,SAAS,EAAE;QACrB,IAAItB,KAAK,CAACG,QAAQ,CAACiB,IAAI,CAAClB,KAAK,IAAI;UAC/B,OAAQA,KAAK,CAACR,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACoC,OAAO,CAAC/B,EAAE;QAChD,CAAC,CAAC,KAAK4B,SAAS,EAAE;UACdtB,KAAK,CAACG,QAAQ,CAACf,IAAI,CAACD,MAAM,CAACE,OAAO,CAACoC,OAAO,CAAC;QAC/C;MACJ,CAAC,MAAM;QACHF,KAAK,CAAC,mBAAmB,CAAC;MAC9B;IACJ;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEzB,YAAY;EAAER,WAAW;EAAEL,QAAQ;EAAEc,WAAW;EAAEoB,OAAO;EAAEK;AAAW,CAAC,GAAG3C,UAAU,CAAC6C,OAAO;AAC3G,eAAe7C,UAAU,CAAC8C,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}