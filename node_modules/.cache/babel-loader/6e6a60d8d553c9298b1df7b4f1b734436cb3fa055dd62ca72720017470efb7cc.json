{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\components\\\\CardTrack.tsx\",\n  _s = $RefreshSig$();\nimport { Badge, Card, CardActions, CardContent, CardHeader, CardMedia, IconButton, Typography } from \"@mui/material\";\nimport TrackImage from \"./TrackImage\";\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\nimport { getUser, getUserByToken, updateUser } from \"../services/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectTrack } from \"../redux/track/track.selector\";\nimport { updateTrack } from \"../redux/track/track.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CardTrack(props) {\n  _s();\n  const dispatch = useDispatch();\n  const tracks = useSelector(selectTrack);\n  // console.log(tracks.filter(value=>{return value.id===props.track.id}))\n  const handleFavoriteClick = async () => {\n    console.log(\"in put\");\n    let token = localStorage.getItem('user');\n    if (token !== null && token !== undefined && token !== '') {\n      try {\n        let userById = await (await getUserByToken(token)).json();\n        let user = await getUser(userById.id);\n        console.log(user);\n        if (user.favourites === undefined) {\n          user.favourites = [];\n        }\n        user.favourites.push(props.track);\n        // props.track.favourites+=1;\n\n        const formData = new FormData();\n        let date = new Date();\n        formData.append('pictureFile', user.pictureFile);\n        formData.append('experienceId', user.experienceId.toString());\n        formData.append('statusId', user.statusId.toString());\n        formData.append('favourites', JSON.stringify(user.favourites));\n        formData.append('adressX', user.adressX.toString());\n        formData.append('adressY', user.adressY.toString());\n        formData.append('birthDate', user.birthDate.toISOString());\n        formData.append('mail', user.mail);\n        formData.append('profilePicture', user.profilePicture);\n        formData.append('name', user.name);\n        formData.append('id', user.id);\n        formData.forEach((value, key) => {\n          console.log(`${key}: ${value}`);\n        });\n        await updateUser(user.id, formData, token);\n        dispatch(updateTrack(props.track));\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      alert('please login for more actions');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {},\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: props.track.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        children: /*#__PURE__*/_jsxDEV(TrackImage, {\n          id: props.track.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: props.track.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        disableSpacing: true,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"add to favorites\",\n          onClick: handleFavoriteClick,\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: props.track.favourites,\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"view\",\n          children: /*#__PURE__*/_jsxDEV(RemoveRedEyeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(CardTrack, \"jKtqwB4V7sEittEG+lfNX5k1sjc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CardTrack;\nvar _c;\n$RefreshReg$(_c, \"CardTrack\");","map":{"version":3,"names":["Badge","Card","CardActions","CardContent","CardHeader","CardMedia","IconButton","Typography","TrackImage","FavoriteIcon","RemoveRedEyeIcon","getUser","getUserByToken","updateUser","useDispatch","useSelector","selectTrack","updateTrack","jsxDEV","_jsxDEV","Fragment","_Fragment","CardTrack","props","_s","dispatch","tracks","handleFavoriteClick","console","log","token","localStorage","getItem","undefined","userById","json","user","id","favourites","push","track","formData","FormData","date","Date","append","pictureFile","experienceId","toString","statusId","JSON","stringify","adressX","adressY","birthDate","toISOString","mail","profilePicture","name","forEach","value","key","error","alert","children","sx","title","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","description","disableSpacing","onClick","badgeContent","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/components/CardTrack.tsx"],"sourcesContent":["import { Badge, Card, CardActions, CardContent, CardHeader, CardMedia, IconButton, Typography } from \"@mui/material\";\r\nimport { Track } from \"../types/Track\";\r\nimport TrackImage from \"./TrackImage\";\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { getUser, getUserByToken, updateUser } from \"../services/user\";\r\nimport { trackForMutations } from \"@reduxjs/toolkit/dist/immutableStateInvariantMiddleware\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectTrack } from \"../redux/track/track.selector\";\r\nimport { updateTrack } from \"../redux/track/track.slice\";\r\nimport { User } from \"../types/user.types\";\r\nexport default function CardTrack(props:{track:Track}){\r\n  const dispatch=useDispatch()\r\n  const tracks=useSelector(selectTrack)\r\n  // console.log(tracks.filter(value=>{return value.id===props.track.id}))\r\n  const handleFavoriteClick=async()=>{\r\n    \r\n    console.log(\"in put\")\r\n    let token=localStorage.getItem('user')\r\n    if(token!==null&&token!==undefined&&token!==''){\r\n      try{\r\n      let userById=await (await getUserByToken(token)).json() as User;\r\n      let user= (await getUser(userById.id)) ;\r\n      console.log(user)\r\n      if(user.favourites===undefined){\r\n        user.favourites=[] as Track[];\r\n      }\r\n\r\n      user.favourites!.push(props.track)\r\n      // props.track.favourites+=1;\r\n      \r\n      const formData=new FormData()\r\n      \r\n        let date=new Date()\r\n        formData.append('pictureFile', user.pictureFile);\r\n        formData.append('experienceId', user.experienceId.toString());\r\n        formData.append('statusId', user.statusId.toString());\r\n        formData.append('favourites', JSON.stringify(user.favourites));\r\n        formData.append('adressX', user.adressX.toString());\r\n        formData.append('adressY', user.adressY.toString());\r\n        formData.append('birthDate', user.birthDate.toISOString());\r\n        formData.append('mail', user.mail);\r\n        formData.append('profilePicture', user.profilePicture!);\r\n        \r\n        formData.append('name', user.name);\r\n        formData.append('id', user.id);\r\n        formData.forEach((value,key)=>{\r\n          console.log(`${key}: ${value}`)\r\n        })\r\n      await updateUser(user.id,formData,token)\r\n      dispatch(updateTrack(props.track))\r\n    }catch(error){\r\n      console.error(error)\r\n    }\r\n    }else{\r\n      alert('please login for more actions')\r\n    }\r\n  }\r\nreturn <>\r\n<Card sx={{ }}>\r\n      <CardHeader       \r\n        title={props.track.title}       \r\n      />\r\n      <CardMedia>\r\n        <TrackImage id={props.track.id}/>\r\n      </CardMedia>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {props.track.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        \r\n          <IconButton aria-label=\"add to favorites\" onClick={handleFavoriteClick}>\r\n            <Badge badgeContent={props.track.favourites} color=\"primary\"><FavoriteIcon /></Badge>\r\n          </IconButton>\r\n        \r\n        <IconButton aria-label=\"view\">\r\n          <RemoveRedEyeIcon/>\r\n        </IconButton>\r\n        \r\n      </CardActions>\r\n      </Card>\r\n</>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}