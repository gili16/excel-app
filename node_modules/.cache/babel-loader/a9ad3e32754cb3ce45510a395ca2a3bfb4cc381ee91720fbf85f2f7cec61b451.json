{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\components\\\\CommentsDrawer.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { IconButton } from '@mui/material';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { useEffect, useState } from 'react';\nimport { getCommentsByTrackId } from '../services/comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentsDrawer(props) {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [uploaded, setUploaded] = useState(true);\n  const [comments, setComments] = useState(null);\n  const [drawerContext, setDrawerContext] = useState( /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 53\n  }, this));\n  const toggleDrawer = newOpen => () => {\n    setOpen(newOpen);\n    newOpen && uploadComments();\n  };\n  //   uploadComments();\n  async function uploadComments() {\n    console.log(uploaded);\n    // if(!uploaded){\n    console.log(\"hi\");\n    const commentsResponse = await getCommentsByTrackId(props.trackId);\n    console.log(commentsResponse);\n    setComments(commentsResponse);\n    // if(commentsResponse){\n    //     setUploaded(!uploaded)\n    // }\n    // }\n  }\n  useEffect(() => {\n    if (comments) {\n      const DrawerList = /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 500\n        },\n        role: \"presentation\",\n        onClick: toggleDrawer(false),\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: comments === null || comments === void 0 ? void 0 : comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Divider, {\n              textAlign: \"right\",\n              children: [\"posted on: \", comment.postDate.toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              sx: {\n                direction: 'rtl'\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: comment.context\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 23\n              }, this)\n            }, comment.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n      setDrawerContext(DrawerList);\n    }\n  }, [comments]);\n  useEffect(() => {\n    console.log(comments);\n    console.log(drawerContext);\n  }, [drawerContext]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleDrawer(true),\n      \"aria-label\": \"edit\",\n      children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer\n    //   sx={{backgroundColor:'grey'}} \n    , {\n      anchor: 'right',\n      open: open,\n      onClose: toggleDrawer(false),\n      children: drawerContext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsDrawer, \"C71zsUP514NGlgxI80paiN+cz9s=\");\n_c = CommentsDrawer;\nvar _c;\n$RefreshReg$(_c, \"CommentsDrawer\");","map":{"version":3,"names":["React","Box","Drawer","List","Divider","ListItem","ListItemText","IconButton","CommentIcon","useEffect","useState","getCommentsByTrackId","jsxDEV","_jsxDEV","CommentsDrawer","props","_s","open","setOpen","uploaded","setUploaded","comments","setComments","drawerContext","setDrawerContext","fileName","_jsxFileName","lineNumber","columnNumber","toggleDrawer","newOpen","uploadComments","console","log","commentsResponse","trackId","DrawerList","sx","width","role","onClick","children","map","comment","index","textAlign","postDate","toString","disablePadding","direction","primary","context","id","anchor","onClose","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/components/CommentsDrawer.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport { IconButton } from '@mui/material';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport { useEffect, useState } from 'react';\r\nimport { getCommentsByTrackId } from '../services/comment';\r\nimport { Comment } from '../types/Comment';\r\nimport Picture from './UserProfileImage';\r\nexport default function CommentsDrawer(props:{trackId:number}) {\r\n  const [open, setOpen] = React.useState(false);\r\n    const [uploaded,setUploaded]=useState(true)\r\n    const [comments, setComments]=useState<Comment[]|null>(null)\r\n    const[drawerContext, setDrawerContext]=useState(<Box/>)\r\n  const toggleDrawer = (newOpen: boolean) => () => {\r\n    setOpen(newOpen);\r\n    newOpen&&uploadComments();\r\n  };\r\n//   uploadComments();\r\n  async function uploadComments(){\r\n    console.log(uploaded)\r\n    // if(!uploaded){\r\n        console.log(\"hi\")\r\n        const commentsResponse=await getCommentsByTrackId(props.trackId);\r\n        console.log(commentsResponse)\r\n        setComments(commentsResponse)\r\n        // if(commentsResponse){\r\n        //     setUploaded(!uploaded)\r\n        // }\r\n    // }\r\n  }\r\n  useEffect(()=>{\r\n    if(comments){\r\n        const DrawerList = (\r\n            <Box sx={{ width: 500 }} role=\"presentation\" onClick={toggleDrawer(false)}>\r\n              <List >\r\n                {comments?.map((comment:Comment, index) => (\r\n                    <Box>\r\n                    <Divider textAlign='right' >posted on: {comment.postDate.toString()}</Divider>\r\n                  <ListItem key={comment.id} disablePadding sx={{direction:'rtl' }}>\r\n                    \r\n                      {/* <ListItemIcon>\r\n                        {/* <Picture id={comment.userId}/> \r\n                      </ListItemIcon> */}\r\n                      <ListItemText primary={comment.context} />\r\n                    \r\n                  </ListItem>\r\n                  </Box>\r\n                ))}\r\n              </List>\r\n              \r\n              \r\n            </Box>\r\n          );\r\n          setDrawerContext(DrawerList);\r\n    }\r\n  },[comments])\r\n  \r\nuseEffect(()=>{\r\nconsole.log(comments)\r\nconsole.log(drawerContext)\r\n},[drawerContext])\r\n  return (\r\n    <div>\r\n      <IconButton onClick={toggleDrawer(true)} aria-label=\"edit\">\r\n        <CommentIcon/>\r\n        </IconButton>\r\n      <Drawer\r\n    //   sx={{backgroundColor:'grey'}} \r\n      anchor={'right'} open={open} onClose={toggleDrawer(false)}>\r\n        {drawerContext}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}