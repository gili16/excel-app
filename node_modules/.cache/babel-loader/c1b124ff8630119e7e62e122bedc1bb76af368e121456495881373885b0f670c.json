{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\sections\\\\UpdateTrack.tsx\",\n  _s = $RefreshSig$();\nimport { Autocomplete, Avatar, Box, Button, FormControl, FormControlLabel, Grid, RadioGroup, Slider, TextField } from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport { useEffect, useState } from \"react\";\nimport Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Map from \"../components/Map\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLevel } from \"../redux/level/level.selector\";\nimport { selectDayPart } from \"../redux/dayPart/dayPart.selector\";\nimport { selectCompany } from \"../redux/company/company.selector\";\nimport { selectView } from \"../redux/view/view.selector\";\nimport { getDayPartyById, getCompanyByDescription, getCompanyById, getDayPartByDescription, getLevelByDescription, getLevelById, getViewByDescription, getViewById } from \"../services/Mapper\";\nimport { selectTrack } from \"../redux/track/track.selector\";\nimport { updateTrack as updateTrackApi } from \"../services/track\";\nimport { updateTrack as updateTrackSlice } from \"../redux/track/track.slice\";\nimport { getUserByToken } from \"../services/user\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addStop, deleteStop } from \"../services/stop\";\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport { k as apikey } from '../utils/projectdata';\nimport getAddressByCoordinates from \"../services/GoogleMaps.services\";\nimport { useJsApiLoader } from \"@react-google-maps/api\";\nimport { isValidStopToAdd, isValidTrackToUpdate } from \"../utils/validation.utils\";\nimport { useAppSelector } from \"../redux/store\";\nimport { selectUser } from \"../redux/user/user.selector\";\nimport BasicModal from \"../components/Modal.component\";\nimport { isValidToken } from \"../auth/auth.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdateTrack() {\n  _s();\n  const params = useParams();\n  const data = useLoaderData();\n  const [geocoder, setGeocoder] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: apikey,\n    language: 'he'\n  });\n  const [isAnitialized, setIsAnitialized] = useState(false);\n  const [image, setImage] = useState();\n  const [imageToShow, setImageToShow] = useState(\"\");\n  const [selectedValue, setSelectedValue] = useState('start');\n  const token = localStorage.getItem('user');\n  const [addressStart, setAddressStart] = useState(\"\");\n  const [addressEnd, setAddressEnd] = useState(\"\");\n  const [addressStop, setAddressStop] = useState([]);\n  const [isAddingAddress, setIsAddingAddress] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [level, setLevel] = useState(\"\");\n  const [dayPart, setDayPart] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [view, setView] = useState(\"\");\n  const [stops, setStops] = useState([]);\n  const levels = useSelector(selectLevel);\n  const dayParts = useSelector(selectDayPart);\n  const companies = useSelector(selectCompany);\n  const views = useSelector(selectView);\n  const tracks = useSelector(selectTrack);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [originalStops, SetOriginalStops] = useState([]);\n  const [track, setTrack] = useState(data);\n  const user = useAppSelector(selectUser).user;\n  useEffect(() => {\n    const token = localStorage.getItem('user');\n    if (token === undefined || token === null || token === \"\" || user === null || user === undefined || user.id === 0) {\n      alert(\"please login\");\n      localStorage.clear();\n      navigate('/');\n    }\n  }, []);\n  useEffect(() => {\n    if (isLoaded) {\n      setGeocoder(new window.google.maps.Geocoder());\n    }\n  }, [isLoaded]);\n  useEffect(() => {\n    if (data) {\n      console.log(\"in data\");\n      console.log({\n        id: data.id,\n        companyForTripId: data.companyForTripId,\n        pictureForm: data.pictureForm,\n        viewId: data.viewId,\n        dayPartId: data.dayPartId,\n        levelId: data.levelId,\n        created: data.created,\n        title: data.title,\n        description: data.description,\n        startX: data.startX,\n        startY: data.startY,\n        stops: data.stops,\n        comments: data.comments,\n        endX: data.endX,\n        endY: data.endY,\n        length: data.length,\n        favourites: data.favourites,\n        userId: data.userId,\n        picture: data.picture\n      });\n      setTrack({\n        id: data.id,\n        companyForTripId: data.companyForTripId,\n        pictureForm: data.pictureForm,\n        viewId: data.viewId,\n        dayPartId: data.dayPartId,\n        levelId: data.levelId,\n        created: data.created,\n        title: data.title,\n        description: data.description,\n        startX: data.startX,\n        startY: data.startY,\n        stops: data.stops,\n        comments: data.comments,\n        endX: data.endX,\n        endY: data.endY,\n        length: data.length,\n        favourites: data.favourites,\n        userId: data.userId,\n        picture: data.picture\n      });\n    }\n  }, [data]);\n  useEffect(() => {\n    console.log(track);\n    console.log(isAnitialized);\n    console.log(geocoder);\n    if (!isAnitialized && geocoder && track) {\n      Initialize();\n    } else {}\n  }, [geocoder, track]);\n  async function Initialize() {\n    if (track) {\n      let start = \"\";\n      let end = \"\";\n      let tempStops = [];\n      let tempStopAddresses = [];\n      try {\n        start = await getAddressByCoordinates(geocoder, {\n          lat: data.startX,\n          lng: data.startY\n        });\n        console.log(start);\n      } catch {\n        start = \"start position\";\n      }\n      try {\n        end = await getAddressByCoordinates(geocoder, {\n          lat: data.endX,\n          lng: data.endY\n        });\n      } catch {}\n      data.stops.map(async value => {\n        try {\n          let tempAddress = await getAddressByCoordinates(geocoder, {\n            lat: value.x,\n            lng: value.y\n          });\n          tempStopAddresses.push(tempAddress);\n          let tempStop = {\n            trackId: track.id,\n            x: value.x,\n            y: value.y\n          };\n          tempStops.push(tempStop);\n          SetOriginalStops([...data.stops]);\n        } catch {}\n        // try{\n        //   await deleteStop(value.id,localStorage.getItem('user')!);\n        // }catch(e){\n        //   console.error(e)\n        // }\n      });\n      try {\n        console.log(\"hello3\");\n        let token = localStorage.getItem('user');\n        console.log(token);\n        const response = await fetch(`https://localhost:7090/api/Track/${data.id}/picture`, {\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        if (response) {\n          console.log(response);\n          const blob = await response.blob();\n          const url = URL.createObjectURL(blob);\n          setImageToShow(url);\n          setImage(blob);\n          setTrack({\n            ...track,\n            ['picture']: url,\n            ['pictureForm']: blob\n          });\n          console.log(url);\n        } else {\n          console.error('Failed to fetch picture');\n        }\n      } catch (error) {\n        console.error('Error fetching picture:', error);\n      }\n      setCompany(getCompanyById(data.companyForTripId));\n      setDayPart(getDayPartyById(data.dayPartId));\n      setLevel(getLevelById(data.levelId));\n      setView(getViewById(data.viewId));\n      setAddressStart(start);\n      setAddressEnd(end);\n      setStops(tempStops);\n      setAddressStop(tempStopAddresses);\n      setIsAnitialized(true);\n      setTrack({\n        id: data.id,\n        companyForTripId: data.companyForTripId,\n        // pictureForm:data.pictureForm,\n        viewId: data.viewId,\n        dayPartId: data.dayPartId,\n        levelId: data.levelId,\n        created: data.created,\n        title: data.title,\n        description: data.description,\n        startX: data.startX,\n        startY: data.startY,\n        stops: data.stops,\n        comments: data.comments,\n        endX: data.endX,\n        endY: data.endY,\n        length: data.length,\n        favourites: data.favourites,\n        userId: data.userId\n        // picture:data.picture\n      });\n    }\n  }\n  const marks = [{\n    value: 24,\n    label: '1 day'\n  }, {\n    value: 48,\n    label: '2 days'\n  }, {\n    value: 72,\n    label: '3 days'\n  }, {\n    value: 96,\n    label: '4 days'\n  }];\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  };\n  const handleFileChange = event => {\n    const selectedImage = event.target.files[0];\n    try {\n      setImageToShow(URL.createObjectURL(selectedImage));\n      setImage(selectedImage);\n    } catch {}\n  };\n  useEffect(() => {\n    console.log(selectedValue);\n  }, [selectedValue]);\n  useEffect(() => {\n    let tempTrack = {\n      ...track\n    };\n    if (selectedValue === \"start\") {\n      setAddressStart(address);\n      tempTrack.startX = x;\n      tempTrack.startY = y;\n    } else {\n      if (selectedValue === \"end\") {\n        setAddressEnd(address);\n        tempTrack.endX = x;\n        tempTrack.endY = y;\n      } else {\n        if (selectedValue === \"stop\") {\n          setAddressStop([...addressStop, address]);\n          setStops([...stops, {\n            x: x,\n            y: y,\n            trackId: track.id\n          }]);\n        }\n      }\n    }\n    setTrack({\n      ...tempTrack\n    });\n    // setSelectedValue(\"start\")\n    // setAddress(Add)\n    // setIsAddingAddress(!isAddingAddress)\n  }, [address]);\n  function handleMinusStop(index) {\n    console.log(addressStop);\n    console.log(index);\n    let newAddressesStop = addressStop.slice(0, index).concat(addressStop.slice(index + 1));\n    console.log(addressStop);\n    let newStops = stops.slice(0, index).concat(stops.slice(index + 1));\n    console.log(newAddressesStop);\n    setAddressStop(newAddressesStop);\n    setStops(newStops);\n  }\n  // async function handleLengthChange(value:number,index:any){\n  //   let tempTrack={...track}as Track\n  //   tempTrack.length=value\n  //   setTrack({...tempTrack})\n  //   return value.toString();\n  // }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (track) {\n      const token = localStorage.getItem('user');\n      if (!isValidToken(token)) {\n        alert(\"you are not logged in\");\n        navigate('/');\n      }\n      let dataToSend = {\n        id: track.id,\n        companyForTripId: getViewByDescription(company) !== 0 ? getCompanyByDescription(company) : track.companyForTripId,\n        pictureFile: image,\n        viewId: getViewByDescription(view) !== 0 ? getViewByDescription(view) : track.viewId,\n        dayPartId: getDayPartByDescription(dayPart) !== 0 ? getDayPartByDescription(dayPart) : track.dayPartId,\n        levelId: getLevelByDescription(level) !== 0 ? getLevelByDescription(level) : track.levelId,\n        created: track.created,\n        title: track.title,\n        description: track.description,\n        startX: track.startX,\n        startY: track.startY,\n        stops: [],\n        comments: track.comments,\n        endX: track.endX,\n        endY: track.endY,\n        length: track.length,\n        favourites: track.favourites,\n        userId: track.userId\n      };\n      if (isValidTrackToUpdate(dataToSend)) {\n        const formData = new FormData(event.currentTarget);\n        formData.append('pictureForm', image);\n        formData.append('companyForTripId', dataToSend.companyForTripId.toString());\n        formData.append('viewId', dataToSend.viewId.toString());\n        formData.append('dayPartId', dataToSend.dayPartId.toString());\n        formData.append('levelId', dataToSend.levelId.toString());\n        formData.append('length', dataToSend.length.toString());\n        formData.append('startX', dataToSend.startX.toString());\n        formData.append('startY', dataToSend.startY.toString());\n        formData.append('endX', dataToSend.endX.toString());\n        formData.append('endY', dataToSend.endY.toString());\n        formData.append('favourites', dataToSend.favourites.toString());\n        formData.append('id', dataToSend.id.toString());\n        formData.append('created', dataToSend.created.toString());\n        formData.append('length', dataToSend.length.toString());\n        try {\n          let mytoken = localStorage.getItem('user');\n          const response = await (await getUserByToken(mytoken)).json();\n          formData.append('userId', response.id);\n          try {\n            setOpen(true);\n            setText(\"מעדכן מסלול\");\n            let response = await updateTrackApi(track.id, formData, mytoken);\n            setText(\"מסלול עודכן\");\n            stops.forEach(async (value, index) => {\n              try {\n                if (isValidStopToAdd(value)) {\n                  setText(\"saving stop: \" + index.toString());\n                  value.trackId = dataToSend.id;\n                  let newStop = await addStop(value, mytoken);\n                  dataToSend.stops = [...dataToSend.stops, newStop.data];\n                  setText(\"העצירה נשמרה\");\n                } else {\n                  alert(\"העצירה לא התווספה\");\n                  console.error(value);\n                }\n              } catch (error) {\n                console.log(error);\n              }\n            });\n            originalStops.forEach(async value => {\n              await deleteStop(value.id, token);\n            });\n            setText(\"הכל נשמר בהצלחה\");\n            dispatch(updateTrackSlice(dataToSend));\n            setOpen(false);\n          } catch (error) {\n            console.error(error);\n            setOpen(false);\n          }\n        } catch (error) {\n          setOpen(false);\n          console.error('Error sending data:', error);\n        }\n      } else {\n        alert(\"חלק מנתונים לא תקינים,\\nאנא בדוק שוב את הפרטים\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: 'form',\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(BasicModal, {\n        open: open,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        gap: 2,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          alignItems: \"center\",\n          alignContent: \"center\",\n          marginTop: '100px',\n          gap: 3,\n          justifyContent: \"space-around\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: grey[500],\n              marginLeft: '35%',\n              marginRight: '50%',\n              marginBottom: '50px',\n              width: '400px',\n              height: '400px'\n            },\n            src: imageToShow,\n            variant: \"rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            id: \"contained-button-file\",\n            multiple: true,\n            type: \"file\",\n            onChange: handleFileChange,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              component: \"span\",\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sx: {\n            display: \"block\",\n            marginTop: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"title\",\n            name: \"title\",\n            required: true,\n            defaultValue: data === null || data === void 0 ? void 0 : data.title,\n            id: \"title\",\n            label: \"title\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          display: \"block\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"description\",\n            name: \"description\",\n            required: true,\n            multiline: true,\n            defaultValue: data === null || data === void 0 ? void 0 : data.description,\n            rows: 4,\n            id: \"description\",\n            label: \"description\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              paddingBottom: '15px'\n            },\n            required: true,\n            fullWidth: true,\n            name: \"addressStart\",\n            label: \"Address Start\",\n            type: \"address\",\n            id: \"addressStart\",\n            autoComplete: \"new-address\",\n            value: addressStart\n          }, `start`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 11\n          }, this), addressStop.length > 0 && addressStop.map((stop, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"inline\"\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"addressStop\",\n                  label: \"Address Stop\",\n                  type: \"address\",\n                  id: index.toString(),\n                  autoComplete: \"new-address\",\n                  value: stop,\n                  sx: {\n                    display: \"inline\",\n                    marginBottom: '5px'\n                  }\n                }, `stop${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"inline\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    handleMinusStop(index);\n                  },\n                  sx: {\n                    display: \"inline\"\n                  },\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          }), /*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              marginBottom: '5px'\n            },\n            required: true,\n            fullWidth: true,\n            name: \"addressEnd\",\n            label: \"Address End\",\n            type: \"address\",\n            id: \"addressEnd\",\n            autoComplete: \"new-address\",\n            value: addressEnd\n          }, `end`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              id: \"demo-radio-buttons-group-label\",\n              children: \"Choose track points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-labelledby\": \"demo-radio-buttons-group-label\",\n              defaultValue: \"start\",\n              name: \"radio-buttons-group\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"start\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 60\n                }, this),\n                label: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"stop\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 59\n                }, this),\n                label: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"end\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 58\n                }, this),\n                label: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            setAddress: setAddress,\n            setX: setX,\n            setY: setY\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"level\",\n            // inputValue={experiences}\n            defaultValue: getLevelById(track === null || track === void 0 ? void 0 : track.levelId),\n            inputValue: level,\n            onInputChange: (event, newInputValue) => {\n              console.log(\"level changed\");\n              setLevel(newInputValue);\n              // setTrack({...track,['levelId']:getLevelByDescription(newInputValue)})\n              console.log(newInputValue);\n            }\n            // onClick={onClick}\n            ,\n            options: levels,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 42\n            }, this)\n          }, 'level', false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"dayPart\",\n            inputValue: dayPart,\n            defaultValue: getDayPartyById(track === null || track === void 0 ? void 0 : track.dayPartId),\n            onInputChange: (event, newInputValue) => {\n              setDayPart(newInputValue);\n              // setTrack({...track,['dayPartId']:getDayPartByDescription(newInputValue)})\n              console.log(newInputValue);\n            }\n            // onClick={onClick}\n            ,\n            options: dayParts,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Day Part\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 42\n            }, this)\n          }, 'dayPart', false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"company\",\n            inputValue: company,\n            defaultValue: getCompanyById(track === null || track === void 0 ? void 0 : track.companyForTripId),\n            onInputChange: (event, newInputValue) => {\n              setCompany(newInputValue);\n              // setTrack({...track,['companyForTripId']:getCompanyByDescription(newInputValue)})\n              console.log(newInputValue);\n            }\n            // onClick={onClick}\n            ,\n            options: companies,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 42\n            }, this)\n          }, 'company', false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"view\",\n            inputValue: view,\n            defaultValue: getViewById(track === null || track === void 0 ? void 0 : track.viewId),\n            onInputChange: (event, newInputValue) => {\n              setView(newInputValue);\n              // setTrack({...track,['viewId']:getViewByDescription(newInputValue)})\n              console.log(newInputValue);\n            }\n            // onClick={onClick}\n            ,\n            options: views,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 42\n            }, this)\n          }, 'view', false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            \"aria-label\": \"length\",\n            defaultValue: track.length,\n            valueLabelDisplay: \"auto\"\n            // getAriaValueText={handleLengthChange}\n            ,\n            shiftStep: 1,\n            step: 1,\n            marks: marks,\n            min: 1,\n            max: 100,\n            value: track === null || track === void 0 ? void 0 : track.length,\n            onChange: (event, newInputValue) => {\n              let tempTrack = {\n                ...track\n              };\n              tempTrack.length = parseInt(newInputValue.toString());\n              setTrack({\n                ...tempTrack\n              });\n              console.log(tempTrack);\n            }\n          }, 'length', false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\"\n        // fullWidth\n        ,\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2,\n          width: '300px'\n        },\n        children: \"Update Track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(UpdateTrack, \"3wdbltA8EwDcJpKUlGePbdWBM8Y=\", false, function () {\n  return [useParams, useLoaderData, useJsApiLoader, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useNavigate, useAppSelector];\n});\n_c = UpdateTrack;\nvar _c;\n$RefreshReg$(_c, \"UpdateTrack\");","map":{"version":3,"names":["Autocomplete","Avatar","Box","Button","FormControl","FormControlLabel","Grid","RadioGroup","Slider","TextField","grey","useEffect","useState","Radio","FormLabel","Map","useDispatch","useSelector","selectLevel","selectDayPart","selectCompany","selectView","getDayPartyById","getCompanyByDescription","getCompanyById","getDayPartByDescription","getLevelByDescription","getLevelById","getViewByDescription","getViewById","selectTrack","updateTrack","updateTrackApi","updateTrackSlice","getUserByToken","useNavigate","addStop","deleteStop","useLoaderData","useParams","k","apikey","getAddressByCoordinates","useJsApiLoader","isValidStopToAdd","isValidTrackToUpdate","useAppSelector","selectUser","BasicModal","isValidToken","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateTrack","_s","params","data","geocoder","setGeocoder","isLoaded","id","googleMapsApiKey","language","isAnitialized","setIsAnitialized","image","setImage","imageToShow","setImageToShow","selectedValue","setSelectedValue","token","localStorage","getItem","addressStart","setAddressStart","addressEnd","setAddressEnd","addressStop","setAddressStop","isAddingAddress","setIsAddingAddress","text","setText","open","setOpen","address","setAddress","x","setX","y","setY","level","setLevel","dayPart","setDayPart","company","setCompany","view","setView","stops","setStops","levels","dayParts","companies","views","tracks","dispatch","navigate","originalStops","SetOriginalStops","track","setTrack","user","undefined","alert","clear","window","google","maps","Geocoder","console","log","companyForTripId","pictureForm","viewId","dayPartId","levelId","created","title","description","startX","startY","comments","endX","endY","length","favourites","userId","picture","Initialize","start","end","tempStops","tempStopAddresses","lat","lng","map","value","tempAddress","push","tempStop","trackId","response","fetch","headers","blob","url","URL","createObjectURL","error","marks","label","handleChange","event","target","handleFileChange","selectedImage","files","tempTrack","handleMinusStop","index","newAddressesStop","slice","concat","newStops","handleSubmit","preventDefault","dataToSend","pictureFile","formData","FormData","currentTarget","append","toString","mytoken","json","forEach","newStop","children","component","noValidate","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","container","gap","alignItems","justifyContent","xs","alignContent","marginTop","sx","bgcolor","marginLeft","marginRight","marginBottom","width","height","src","variant","accept","multiple","type","onChange","style","display","htmlFor","color","item","autoComplete","name","required","defaultValue","autoFocus","multiline","rows","paddingBottom","fullWidth","stop","onClick","control","disablePortal","inputValue","onInputChange","newInputValue","options","renderInput","valueLabelDisplay","shiftStep","step","min","max","parseInt","mt","mb","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/sections/UpdateTrack.tsx"],"sourcesContent":["import { Autocomplete, Avatar, Box, Button, FormControl, FormControlLabel, Grid, RadioGroup, Slider, TextField } from \"@mui/material\";\r\nimport { deepOrange,grey } from \"@mui/material/colors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Radio from '@mui/material/Radio';\r\n// import RadioGroup from '@mui/material/RadioGroup';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Map from \"../components/Map\";\r\nimport { Track } from \"../types/Track\";\r\nimport { Stop } from \"../types/Stop\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectLevel } from \"../redux/level/level.selector\";\r\nimport { selectDayPart } from \"../redux/dayPart/dayPart.selector\";\r\nimport { selectCompany } from \"../redux/company/company.selector\";\r\nimport { selectView } from \"../redux/view/view.selector\";\r\nimport {getDayPartyById, getCompanyByDescription, getCompanyById, getDayPartByDescription, getLevelByDescription, getLevelById, getViewByDescription, getViewById } from \"../services/Mapper\";\r\nimport { selectTrack } from \"../redux/track/track.selector\";\r\nimport { addTrack as addTrackApi , updateTrack as updateTrackApi} from \"../services/track\";\r\nimport { addTrack as addTrackSlice, updateTrack as updateTrackSlice } from \"../redux/track/track.slice\";\r\nimport { getUserByToken } from \"../services/user\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { addStop, deleteStop } from \"../services/stop\";\r\nimport { useLoaderData, useParams } from \"react-router-dom\"\r\nimport {k as apikey} from '../utils/projectdata'\r\nimport getAddressByCoordinates from \"../services/GoogleMaps.services\";\r\nimport { useJsApiLoader } from \"@react-google-maps/api\";\r\nimport { isValidStopToAdd, isValidTrackToAdd, isValidTrackToUpdate } from \"../utils/validation.utils\";\r\nimport { useAppSelector } from \"../redux/store\";\r\nimport { selectUser } from \"../redux/user/user.selector\";\r\nimport BasicModal from \"../components/Modal.component\";\r\nimport { isValidToken } from \"../auth/auth.utils\";\r\nexport default function UpdateTrack(){\r\n  const params = useParams()\r\n  const data: any = useLoaderData()\r\n  const [geocoder, setGeocoder] = useState<google.maps.Geocoder|null>(null);\r\n  const { isLoaded } = useJsApiLoader({\r\n      id: 'google-map-script',\r\n      googleMapsApiKey: apikey,\r\n      language: 'he',\r\n    });\r\n  const [isAnitialized, setIsAnitialized]=useState(false)\r\n  const [image, setImage]=useState<Blob>()\r\n  const[imageToShow, setImageToShow]=useState<string>(\"\")\r\n  const [selectedValue, setSelectedValue] = useState('start');\r\n  const token=localStorage.getItem('user')\r\n  const[addressStart, setAddressStart]=useState(\"\")\r\n  const[addressEnd, setAddressEnd]=useState(\"\")\r\n  const[addressStop, setAddressStop]=useState<string[]>([])\r\n  const[isAddingAddress, setIsAddingAddress]=useState(false)\r\n  const[text,setText]=useState(\"\")\r\n  const[open,setOpen]=useState(false)\r\n  const [address, setAddress]=useState<string>(\"\")\r\n  const[x,setX]=useState(0)\r\n  const[y,setY]=useState(0)\r\n  const[level, setLevel]=useState(\"\")\r\n  const[dayPart, setDayPart]=useState(\"\")\r\n  const[company, setCompany]=useState(\"\")\r\n  const[view, setView]=useState(\"\")\r\n  const[stops, setStops]=useState<Omit<Stop,'id'>[]>([])\r\n  const levels=useSelector(selectLevel)\r\n  const dayParts=useSelector(selectDayPart)\r\n  const companies =useSelector(selectCompany)\r\n  const views=useSelector(selectView)\r\n  const tracks=useSelector(selectTrack)\r\n  const dispatch=useDispatch()\r\n  const navigate=useNavigate()\r\n  const [originalStops,SetOriginalStops]=useState<Stop[]>([])\r\n  const[track, setTrack]=useState<any|null>(data)\r\n  const user=useAppSelector(selectUser).user\r\n  useEffect(()=>{\r\n    const token=localStorage.getItem('user')\r\n      if(token===undefined||token===null||token===\"\"||user===null||user===undefined||user.id===0){\r\n          alert(\"please login\")\r\n          localStorage.clear()\r\n          navigate('/')\r\n      }\r\n  },[])\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      setGeocoder(new window.google.maps.Geocoder());\r\n    }\r\n  }, [isLoaded]);\r\n  useEffect(()=>{\r\n    if(data)\r\n    {\r\n      console.log(\"in data\")\r\n      console.log({\r\n        id:data.id,\r\n        companyForTripId: data.companyForTripId,\r\n        pictureForm:data.pictureForm,\r\n        viewId:data.viewId,\r\n        dayPartId:data.dayPartId,\r\n        levelId:data.levelId,\r\n        created:data.created,\r\n        title:data.title,\r\n        description:data.description,\r\n        startX:data.startX,\r\n        startY:data.startY,\r\n        stops:data.stops,\r\n        comments:data.comments,\r\n        endX:data.endX,\r\n        endY:data.endY,\r\n        length:data.length,\r\n        favourites:data.favourites,\r\n        userId:data.userId,\r\n        picture:data.picture\r\n  })\r\n        setTrack({\r\n          id:data.id,\r\n          companyForTripId: data.companyForTripId,\r\n          pictureForm:data.pictureForm,\r\n          viewId:data.viewId,\r\n          dayPartId:data.dayPartId,\r\n          levelId:data.levelId,\r\n          created:data.created,\r\n          title:data.title,\r\n          description:data.description,\r\n          startX:data.startX,\r\n          startY:data.startY,\r\n          stops:data.stops,\r\n          comments:data.comments,\r\n          endX:data.endX,\r\n          endY:data.endY,\r\n          length:data.length,\r\n          favourites:data.favourites,\r\n          userId:data.userId,\r\n          picture:data.picture\r\n    }as Track);\r\n    }\r\n  },[data])\r\n  useEffect(()=>{\r\n    console.log(track)\r\n    console.log(isAnitialized)\r\n    console.log(geocoder)\r\n    if(!isAnitialized&&geocoder&&track){\r\n        Initialize();\r\n    }\r\n    else{\r\n    }\r\n  },[geocoder,track])\r\n  \r\n  async function Initialize(){\r\n    \r\n    if(track){\r\n        let start=\"\"\r\n        let end=\"\"\r\n        let tempStops=[]as Omit<Stop,\"id\">[]\r\n        let tempStopAddresses=[] as string[]\r\n        try{\r\n         start=await getAddressByCoordinates(geocoder,{lat:data.startX,lng:data.startY});\r\n         console.log(start)\r\n        }catch{\r\n          start=\"start position\"\r\n        }\r\n        try{\r\n         end=await getAddressByCoordinates(geocoder,{lat:data.endX,lng:data.endY})\r\n        }catch{}\r\n        data.stops.map(async(value:any)=>{\r\n          try{\r\n            let tempAddress=await getAddressByCoordinates(geocoder,{lat:value.x,lng:value.y})\r\n            tempStopAddresses.push(tempAddress)\r\n            let tempStop={\r\n                trackId:track.id,\r\n                x:value.x,\r\n                y:value.y\r\n            }as Omit<Stop,\"id\">\r\n            tempStops.push(tempStop)\r\n            SetOriginalStops([...data.stops])\r\n          }catch{\r\n\r\n          }\r\n          // try{\r\n          //   await deleteStop(value.id,localStorage.getItem('user')!);\r\n          // }catch(e){\r\n          //   console.error(e)\r\n          // }\r\n        })\r\n        try {\r\n            console.log(\"hello3\")\r\n            let token=localStorage.getItem('user');\r\n            console.log(token)\r\n            const response = await fetch(`https://localhost:7090/api/Track/${data.id}/picture`,{headers:{\"Authorization\": `Bearer ${token}`}});\r\n            if (response) {\r\n            console.log(response)\r\n            const blob = await response.blob();\r\n            const url = URL.createObjectURL(blob);\r\n            setImageToShow(url)\r\n                setImage(blob)\r\n              setTrack({...track,['picture']:url, ['pictureForm']:blob})\r\n                console.log(url)\r\n            } else {\r\n            console.error('Failed to fetch picture');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching picture:', error);\r\n        }\r\n        setCompany(getCompanyById(data.companyForTripId))\r\n        setDayPart(getDayPartyById(data.dayPartId))\r\n        setLevel(getLevelById(data.levelId))\r\n        setView(getViewById(data.viewId))\r\n        setAddressStart(start)\r\n        setAddressEnd(end)\r\n        setStops(tempStops)\r\n        setAddressStop(tempStopAddresses)\r\n        setIsAnitialized(true)\r\n        setTrack({\r\n          id:data.id,\r\n          companyForTripId: data.companyForTripId,\r\n          // pictureForm:data.pictureForm,\r\n          viewId:data.viewId,\r\n          dayPartId:data.dayPartId,\r\n          levelId:data.levelId,\r\n          created:data.created,\r\n          title:data.title,\r\n          description:data.description,\r\n          startX:data.startX,\r\n          startY:data.startY,\r\n          stops:data.stops,\r\n          comments:data.comments,\r\n          endX:data.endX,\r\n          endY:data.endY,\r\n          length:data.length,\r\n          favourites:data.favourites,\r\n          userId:data.userId,\r\n          // picture:data.picture\r\n    }as Track);\r\n    \r\n    }\r\n  }\r\n  const marks=[\r\n    {\r\n      value:24,\r\n      label:'1 day'\r\n    },\r\n    {\r\n      value:48,\r\n      label:'2 days'\r\n    },\r\n    {\r\n      value:72,\r\n      label:'3 days'\r\n    },\r\n    {\r\n      value:96,\r\n      label:'4 days'\r\n    }\r\n  ]\r\n  \r\n  \r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSelectedValue(event.target.value);\r\n    \r\n  };\r\n    const handleFileChange = (event:any) => {\r\n        const selectedImage = event.target.files[0];\r\n        try{\r\n          setImageToShow(URL.createObjectURL(selectedImage))\r\n          setImage(selectedImage);\r\n        \r\n        }catch{}\r\n        \r\n      };\r\n    useEffect(()=>{\r\n      console.log(selectedValue)\r\n    },[selectedValue])\r\n    useEffect(()=>{\r\n      \r\n        let tempTrack={...track}as Track\r\n        if(selectedValue===\"start\"){\r\n          setAddressStart(address)\r\n          tempTrack.startX=x;\r\n          tempTrack.startY=y;\r\n        }else{\r\n          if(selectedValue===\"end\"){\r\n            setAddressEnd(address)\r\n            tempTrack.endX=x;\r\n            tempTrack.endY=y;\r\n          }else{\r\n            if(selectedValue===\"stop\"){\r\n              \r\n              setAddressStop([...addressStop,address])\r\n              setStops([...stops,{x:x, y:y, trackId:track.id}])\r\n              \r\n            }\r\n          }\r\n        }\r\n        setTrack({...tempTrack})\r\n        // setSelectedValue(\"start\")\r\n        // setAddress(Add)\r\n        // setIsAddingAddress(!isAddingAddress)\r\n      \r\n    },[address])\r\n    function handleMinusStop(index:number){\r\n      console.log(addressStop)\r\n      console.log(index)\r\n      let newAddressesStop=addressStop.slice(0,index).concat(addressStop.slice(index+1))\r\n      console.log(addressStop)\r\n      let newStops=stops.slice(0,index).concat(stops.slice(index+1))\r\n      console.log(newAddressesStop)\r\n      setAddressStop(newAddressesStop)\r\n      setStops(newStops)\r\n    }\r\n    // async function handleLengthChange(value:number,index:any){\r\n    //   let tempTrack={...track}as Track\r\n    //   tempTrack.length=value\r\n    //   setTrack({...tempTrack})\r\n    //   return value.toString();\r\n    // }\r\n    const handleSubmit=async(event: React.FormEvent<HTMLFormElement>)=>{\r\n      event.preventDefault();\r\n      if(track){\r\n            const token=localStorage.getItem('user')\r\n            if(!isValidToken(token)){\r\n                alert(\"you are not logged in\")\r\n                navigate('/')\r\n            }\r\n            \r\n            let dataToSend={\r\n            id:track.id,\r\n            companyForTripId: (getViewByDescription(company)!==0)?getCompanyByDescription(company):track.companyForTripId,\r\n            pictureFile:image,\r\n            viewId:(getViewByDescription(view)!==0)?getViewByDescription(view):track.viewId,\r\n            dayPartId:(getDayPartByDescription(dayPart)!==0)?getDayPartByDescription(dayPart):track.dayPartId,\r\n            levelId:(getLevelByDescription(level)!==0)?getLevelByDescription(level):track.levelId,\r\n            created:track.created,\r\n            title:track.title,\r\n            description:track.description,\r\n            startX:track.startX,\r\n            startY:track.startY,\r\n            stops:[],\r\n            comments:track.comments,\r\n            endX:track.endX,\r\n            endY:track.endY,\r\n            length:track.length,\r\n            favourites:track.favourites,\r\n            userId:track.userId\r\n            }as Track;\r\n            if(isValidTrackToUpdate(dataToSend)){\r\n            const formData = new FormData(event.currentTarget);\r\n            formData.append('pictureForm', image!);\r\n            formData.append('companyForTripId', dataToSend.companyForTripId.toString());\r\n            formData.append('viewId', dataToSend.viewId.toString());\r\n            formData.append('dayPartId', dataToSend.dayPartId.toString());\r\n            formData.append('levelId', dataToSend.levelId.toString());\r\n            formData.append('length', dataToSend.length.toString());\r\n            formData.append('startX', dataToSend.startX.toString());\r\n            formData.append('startY', dataToSend.startY.toString());\r\n            formData.append('endX', dataToSend.endX.toString());\r\n            formData.append('endY', dataToSend.endY.toString());\r\n            formData.append('favourites', dataToSend.favourites.toString());\r\n            formData.append('id', dataToSend.id.toString());\r\n            formData.append('created', dataToSend.created.toString());\r\n            formData.append('length', dataToSend.length.toString());\r\n            try{\r\n            let mytoken=localStorage.getItem('user')\r\n            const response=await (await getUserByToken(mytoken!)).json()\r\n            formData.append('userId', response.id);\r\n            try{\r\n              setOpen(true)\r\n              setText(\"מעדכן מסלול\")\r\n                let response=await updateTrackApi(track.id,formData,mytoken!)\r\n                setText(\"מסלול עודכן\")\r\n                stops.forEach(async(value:Omit<Stop,'id'>,index)=>{\r\n                try{\r\n                  if(isValidStopToAdd(value)){\r\n                    setText(\"saving stop: \"+index.toString())\r\n                    value.trackId=dataToSend.id;\r\n                    let newStop=await addStop(value,mytoken!);\r\n                    dataToSend.stops=[...dataToSend.stops,newStop.data]\r\n                    setText(\"העצירה נשמרה\")\r\n                  }else{\r\n                    alert(\"העצירה לא התווספה\")\r\n                    console.error(value)\r\n                  }\r\n                  \r\n                }catch(error){\r\n                    console.log(error)\r\n                }\r\n                });\r\n                originalStops.forEach(async(value)=>{\r\n                  await deleteStop(value.id, token!)\r\n                });\r\n                  \r\n                setText(\"הכל נשמר בהצלחה\")\r\n\r\n                dispatch(updateTrackSlice(dataToSend))\r\n                setOpen(false)\r\n            }catch(error){\r\n                console.error(error)\r\n                setOpen(false)\r\n            }\r\n            } catch (error) {\r\n              setOpen(false)\r\n            console.error('Error sending data:', error);\r\n            }\r\n        }else{\r\n          alert(\"חלק מנתונים לא תקינים,\\nאנא בדוק שוב את הפרטים\")\r\n        }\r\n      }\r\n    }\r\n    \r\n    return<>\r\n    <Box component={'form'} noValidate onSubmit={handleSubmit}>\r\n      <BasicModal open={open} text={text}/>\r\n      <Grid container gap={2} alignItems={\"center\"} justifyContent={\"center\"}>\r\n          <Grid xs={12} alignItems={\"center\"} alignContent={\"center\"} marginTop={'100px'} gap={3} justifyContent={\"space-around\"}>\r\n              <Avatar  sx={{ bgcolor: grey[500],marginLeft:'35%',marginRight:'50%',marginBottom:'50px', width:'400px', height:'400px' }} src={imageToShow} variant=\"rounded\"/>\r\n              <input\r\n                    accept=\"image/*\"\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={handleFileChange}\r\n                    style={{ display: 'none' }}\r\n                  />\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                      Upload Image\r\n                    </Button>\r\n                  </label>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{display:\"block\", marginTop:'0px'}}>\r\n                <TextField\r\n                  autoComplete=\"title\"\r\n                  name=\"title\"\r\n                  required\r\n                  defaultValue={data?.title}\r\n                  id=\"title\"\r\n                  label=\"title\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} display={\"block\"}>\r\n                <TextField\r\n                  autoComplete=\"description\"\r\n                  name=\"description\"\r\n                  required\r\n                  multiline\r\n                  defaultValue={data?.description}\r\n                  rows={4}\r\n                  id=\"description\"\r\n                  label=\"description\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n          <Grid xs={3} >\r\n          <TextField\r\n          sx={{paddingBottom:'15px'}}\r\n                    required\r\n                    fullWidth\r\n                    key={`start`}\r\n                    name=\"addressStart\"\r\n                    label=\"Address Start\"\r\n                    type=\"address\"\r\n                    id=\"addressStart\"\r\n                    autoComplete=\"new-address\"\r\n                    value={addressStart}\r\n                  />\r\n                  \r\n          {addressStop.length>0&&addressStop.map((stop,index)=>{\r\n            return <><div style={{display:\"inline\"}}><TextField\r\n                      required\r\n                      fullWidth\r\n                      \r\n                      name=\"addressStop\"\r\n                      label=\"Address Stop\"\r\n                      type=\"address\"\r\n                      id={index.toString()}\r\n                      key={`stop${index}`}\r\n                      autoComplete=\"new-address\"\r\n                      value={stop}\r\n                      sx={{display:\"inline\",marginBottom:'5px'}}\r\n                    /></div>\r\n                    <div style={{display:\"inline\"}}><Button onClick={()=>{handleMinusStop(index)}} sx={{display:\"inline\"}}>-</Button></div>\r\n                    </>\r\n          })}\r\n          <TextField\r\n          sx={{marginBottom:'5px'}}\r\n                    required\r\n                    fullWidth\r\n                    name=\"addressEnd\"\r\n                    label=\"Address End\"\r\n                    type=\"address\"\r\n                    id=\"addressEnd\"\r\n                    key={`end`}\r\n                    autoComplete=\"new-address\"\r\n                    value={addressEnd}\r\n                  />\r\n          </Grid>\r\n          <Grid xs={3}>\r\n              <FormControl>\r\n                <FormLabel id=\"demo-radio-buttons-group-label\">Choose track points</FormLabel>\r\n                <RadioGroup\r\n                  aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                  defaultValue=\"start\"\r\n                  name=\"radio-buttons-group\"\r\n                  onChange={handleChange}\r\n                >\r\n                  <FormControlLabel value=\"start\" control={<Radio />} label=\"Start\" />\r\n                  <FormControlLabel value=\"stop\" control={<Radio />} label=\"Stop\" />\r\n                  <FormControlLabel value=\"end\" control={<Radio />} label=\"End\" />\r\n                </RadioGroup>\r\n              </FormControl>\r\n          </Grid>\r\n          <Grid xs={3}>\r\n              <Map setAddress={setAddress} setX={setX} setY={setY} />\r\n          </Grid>\r\n          <Grid item xs={12} >\r\n                <Autocomplete\r\n                disablePortal\r\n                id=\"level\"\r\n                key={'level'}\r\n                // inputValue={experiences}\r\n                defaultValue={getLevelById(track?.levelId)}\r\n                inputValue={level}\r\n                onInputChange={(event, newInputValue) => {\r\n                  console.log(\"level changed\")\r\n                  setLevel(newInputValue);\r\n                  // setTrack({...track,['levelId']:getLevelByDescription(newInputValue)})\r\n                  console.log(newInputValue)\r\n                }}\r\n                        // onClick={onClick}\r\n                options={levels}\r\n                sx={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Level\" />}\r\n                />\r\n           </Grid>\r\n           <Grid item xs={12} >\r\n                <Autocomplete\r\n                disablePortal\r\n                id=\"dayPart\"\r\n                key={'dayPart'}\r\n                inputValue={dayPart}\r\n                defaultValue={getDayPartyById(track?.dayPartId)}\r\n\r\n                onInputChange={(event, newInputValue) => {\r\n                  setDayPart(newInputValue);\r\n                  // setTrack({...track,['dayPartId']:getDayPartByDescription(newInputValue)})\r\n                  console.log(newInputValue)\r\n                }}\r\n                        // onClick={onClick}\r\n                options={dayParts}\r\n                sx={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Day Part\" />}\r\n                />\r\n           </Grid>\r\n           <Grid item xs={12} >\r\n                <Autocomplete\r\n                disablePortal\r\n                id=\"company\"\r\n                key={'company'}\r\n                inputValue={company}\r\n                defaultValue={getCompanyById(track?.companyForTripId)}\r\n                onInputChange={(event, newInputValue) => {\r\n                  setCompany(newInputValue);\r\n                  // setTrack({...track,['companyForTripId']:getCompanyByDescription(newInputValue)})\r\n                  console.log(newInputValue)\r\n                }}\r\n                        // onClick={onClick}\r\n                options={companies}\r\n                sx={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"Company\" />}\r\n                />\r\n           </Grid>\r\n           <Grid item xs={12} >\r\n                <Autocomplete\r\n                disablePortal\r\n                id=\"view\"\r\n                inputValue={view}\r\n                key={'view'}\r\n                defaultValue={getViewById(track?.viewId)}\r\n                onInputChange={(event, newInputValue) => {\r\n                  setView(newInputValue);\r\n                  // setTrack({...track,['viewId']:getViewByDescription(newInputValue)})\r\n                  console.log(newInputValue)\r\n                }}\r\n                        // onClick={onClick}\r\n                options={views}\r\n                sx={{ width: 300 }}\r\n                renderInput={(params) => <TextField {...params} label=\"View\" />}\r\n                />\r\n           </Grid>\r\n          <Grid xs={12}>\r\n            <Slider\r\n              aria-label=\"length\"\r\n              defaultValue={track.length}\r\n              key={'length'}\r\n              valueLabelDisplay=\"auto\"\r\n              // getAriaValueText={handleLengthChange}\r\n              shiftStep={1}\r\n              step={1}\r\n              marks={marks}\r\n              min={1}\r\n              max={100}\r\n              value={track?.length}\r\n              onChange={(event:any, newInputValue:any) => {\r\n                let tempTrack={...track}as Track\r\n                tempTrack.length=parseInt(newInputValue.toString());\r\n                setTrack({...tempTrack})\r\n                console.log(tempTrack)\r\n              }}\r\n            />\r\n          </Grid>\r\n          \r\n      </Grid>\r\n      <Button\r\n                type=\"submit\"\r\n                // fullWidth\r\n                variant=\"contained\"\r\n                \r\n                sx={{ mt: 3, mb: 2 , width:'300px'}}\r\n              >\r\n                Update Track\r\n              </Button>\r\n    </Box>\r\n    </>\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}