{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst trackSlice = createSlice({\n  name: 'track',\n  initialState: [],\n  reducers: {\n    addTrack: (state, action) => {\n      state.push(action.payload);\n    },\n    deleteTrack: (state, action) => {\n      state.splice(action.payload.index, 1);\n    },\n    getAllTracks: (state, action) => {\n      return action.payload;\n    },\n    updateTrack: (state, action) => {\n      let track = state.filter(value => {\n        value.id === action.payload.id;\n      })[0];\n      if (track) {\n        track.comments = action.payload.comments;\n        track.companyForTripId = action.payload.companyForTripId;\n        track.created = action.payload.created;\n        track.dayPartId = action.payload.dayPartId;\n        track.description = action.payload.description;\n        track.endX = action.payload.endX;\n        track.endY = action.payload.endY;\n        track.favourites = action.payload.favourites;\n        track.length = action.payload.length;\n        track.levelId = action.payload.levelId;\n        track.picture = action.payload.picture;\n        track.pictureForm = ac;\n      }\n    }\n  }\n});\n// async function InitialAllUsers(){\n//     userSlice.actions.getAllUsers();\n// }\nexport const {\n  getAllTracks,\n  deleteTrack,\n  addTrack\n} = trackSlice.actions;\nexport default trackSlice.reducer;","map":{"version":3,"names":["createSlice","trackSlice","name","initialState","reducers","addTrack","state","action","push","payload","deleteTrack","splice","index","getAllTracks","updateTrack","track","filter","value","id","comments","companyForTripId","created","dayPartId","description","endX","endY","favourites","length","levelId","picture","pictureForm","ac","actions","reducer"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/redux/track/track.slice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport {getUsers} from '../../services/user'\r\nimport { Track } from '../../types/Track'\r\nimport { act } from 'react-dom/test-utils'\r\n\r\nconst trackSlice = createSlice({\r\n    name: 'track',\r\n    initialState: [] as Track[],\r\n    reducers: {\r\n        addTrack: (state: Track[], action) => {\r\n            state.push(action.payload)\r\n        },\r\n        deleteTrack: (state: Track[], action) => {\r\n            state.splice(action.payload.index, 1)\r\n        },\r\n        getAllTracks: (state: Track[],action)=>{\r\n            return action.payload\r\n        },\r\n        updateTrack: (state: Track[],action)=>{\r\n            let track=state.filter(value=>{\r\n                value.id===action.payload.id\r\n            })[0] as Track\r\n            if(track){\r\n                track.comments=action.payload.comments;\r\n                track.companyForTripId=action.payload.companyForTripId;\r\n                track.created=action.payload.created;\r\n                track.dayPartId=action.payload.dayPartId;\r\n                track.description=action.payload.description;\r\n                track.endX=action.payload.endX;\r\n                track.endY=action.payload.endY;\r\n                track.favourites=action.payload.favourites;\r\n                track.length=action.payload.length;\r\n                track.levelId=action.payload.levelId;\r\n                track.picture=action.payload.picture;\r\n                track.pictureForm=ac\r\n            }\r\n        }\r\n    }\r\n})\r\n// async function InitialAllUsers(){\r\n//     userSlice.actions.getAllUsers();\r\n// }\r\nexport const {getAllTracks,deleteTrack,addTrack}=trackSlice.actions\r\nexport default trackSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAK9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAa;EAC3BC,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAc,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,WAAW,EAAEA,CAACJ,KAAc,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACK,MAAM,CAACJ,MAAM,CAACE,OAAO,CAACG,KAAK,EAAE,CAAC,CAAC;IACzC,CAAC;IACDC,YAAY,EAAEA,CAACP,KAAc,EAACC,MAAM,KAAG;MACnC,OAAOA,MAAM,CAACE,OAAO;IACzB,CAAC;IACDK,WAAW,EAAEA,CAACR,KAAc,EAACC,MAAM,KAAG;MAClC,IAAIQ,KAAK,GAACT,KAAK,CAACU,MAAM,CAACC,KAAK,IAAE;QAC1BA,KAAK,CAACC,EAAE,KAAGX,MAAM,CAACE,OAAO,CAACS,EAAE;MAChC,CAAC,CAAC,CAAC,CAAC,CAAU;MACd,IAAGH,KAAK,EAAC;QACLA,KAAK,CAACI,QAAQ,GAACZ,MAAM,CAACE,OAAO,CAACU,QAAQ;QACtCJ,KAAK,CAACK,gBAAgB,GAACb,MAAM,CAACE,OAAO,CAACW,gBAAgB;QACtDL,KAAK,CAACM,OAAO,GAACd,MAAM,CAACE,OAAO,CAACY,OAAO;QACpCN,KAAK,CAACO,SAAS,GAACf,MAAM,CAACE,OAAO,CAACa,SAAS;QACxCP,KAAK,CAACQ,WAAW,GAAChB,MAAM,CAACE,OAAO,CAACc,WAAW;QAC5CR,KAAK,CAACS,IAAI,GAACjB,MAAM,CAACE,OAAO,CAACe,IAAI;QAC9BT,KAAK,CAACU,IAAI,GAAClB,MAAM,CAACE,OAAO,CAACgB,IAAI;QAC9BV,KAAK,CAACW,UAAU,GAACnB,MAAM,CAACE,OAAO,CAACiB,UAAU;QAC1CX,KAAK,CAACY,MAAM,GAACpB,MAAM,CAACE,OAAO,CAACkB,MAAM;QAClCZ,KAAK,CAACa,OAAO,GAACrB,MAAM,CAACE,OAAO,CAACmB,OAAO;QACpCb,KAAK,CAACc,OAAO,GAACtB,MAAM,CAACE,OAAO,CAACoB,OAAO;QACpCd,KAAK,CAACe,WAAW,GAACC,EAAE;MACxB;IACJ;EACJ;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA,OAAO,MAAM;EAAClB,YAAY;EAACH,WAAW;EAACL;AAAQ,CAAC,GAACJ,UAAU,CAAC+B,OAAO;AACnE,eAAe/B,UAAU,CAACgC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}