{"ast":null,"code":"import { addTrack as addTrackApi, deleteTrack as deleteTrackApi } from \"../../services/track\";\nimport { addTrack as addTrackAction, addStop as addStopAction, addComment as addCommentAction, deleteTrack as deleteTrackActionForTrack } from \"./track.slice\";\nimport { Login } from \"../user/user.thunk\";\nimport { addStop as addStopApi } from \"../../services/stop\";\nimport { addComment as addCommentApi, getCommentsByTrackId } from \"../../services/comment\";\nexport const addTrack = (track, token) => async (dispatch, getState) => {\n  // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\n  try {\n    let response = await addTrackApi(track, token);\n    if (response.status === 401) {\n      const state = getState();\n      Login(state.user.user.mail);\n      response = await addTrackApi(track, localStorage.getItem('user'));\n    }\n    const newTrack = response.data;\n    dispatch(addTrackAction(newTrack));\n    return newTrack;\n  } catch (error) {\n    alert(\"failed to add\");\n    return null;\n  }\n};\nexport const addStop = (stop, token) => async (dispatch, getState) => {\n  // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\n  try {\n    let response = await addStopApi(stop, token);\n    if (response.status === 401) {\n      const state = getState();\n      Login(state.user.user.mail);\n      response = await addStopApi(stop, localStorage.getItem('user'));\n    }\n    const newStop = response.data;\n    dispatch(addStopAction(newStop));\n    return newStop;\n  } catch (error) {\n    alert(\"failed to add\");\n    return null;\n  }\n};\nexport const addComment = (comment, token) => async (dispatch, getState) => {\n  let response = await addCommentApi(comment, token);\n  dispatch(addCommentAction({\n    trackId: response.trackId,\n    comment: response\n  }));\n  return response;\n};\nexport const initComments = (trackId, token) => async (dispatch, getState) => {\n  let response = await getCommentsByTrackId(trackId, token);\n  response.forEach(value => {\n    dispatch(addCommentAction({\n      trackId: trackId,\n      comment: value\n    }));\n  });\n  return response;\n};\nexport const deleteTrack = (trackId, token) => async (dispatch, getState) => {\n  await deleteTrackApi(trackId, token);\n  alert(\"delete was successfull\");\n  dispatch(deleteTrackActionForTrack(indexToDelete));\n};","map":{"version":3,"names":["addTrack","addTrackApi","deleteTrack","deleteTrackApi","addTrackAction","addStop","addStopAction","addComment","addCommentAction","deleteTrackActionForTrack","Login","addStopApi","addCommentApi","getCommentsByTrackId","track","token","dispatch","getState","response","status","state","user","mail","localStorage","getItem","newTrack","data","error","alert","stop","newStop","comment","trackId","initComments","forEach","value","indexToDelete"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/redux/track/track.thunk.ts"],"sourcesContent":["import { User } from \"../../types/user.types\";\r\nimport { Track } from \"../../types/Track\";\r\nimport { AppThunk } from \"../store\";\r\nimport { addTrack as addTrackApi, deleteTrack as deleteTrackApi } from \"../../services/track\";\r\nimport { addTrack as addTrackAction, addStop as addStopAction, addComment as addCommentAction, deleteTrack as deleteTrackActionForTrack } from \"./track.slice\";\r\nimport { Login } from \"../user/user.thunk\";\r\nimport { Stop } from \"../../types/Stop\";\r\nimport { addStop as addStopApi } from \"../../services/stop\";\r\nimport { Comment } from \"../../types/Comment\";\r\nimport { deleteTrack as deleteTrackActionForUser } from \"../user/user.slice\";\r\nimport { addComment as addCommentApi, getCommentsByTrackId } from \"../../services/comment\";\r\nexport const addTrack = (track: FormData, token: string): AppThunk<Track> => async (dispatch, getState) => {\r\n\r\n    // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\r\n    try {\r\n        let response = await addTrackApi(track, token);\r\n        if (response.status === 401) {\r\n            const state = getState()\r\n            Login(state.user!.user!.mail)\r\n            response = await addTrackApi(track, localStorage.getItem('user')!);\r\n        }\r\n        const newTrack = response.data\r\n        dispatch(addTrackAction(newTrack))\r\n        return newTrack;\r\n    } catch (error) {\r\n\r\n        alert(\"failed to add\")\r\n        return null;\r\n    }\r\n}\r\nexport const addStop = (stop: Omit<Stop, 'id'>, token: string): AppThunk<Track> => async (dispatch, getState) => {\r\n\r\n    // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\r\n    try {\r\n        let response = await addStopApi(stop, token);\r\n        if (response.status === 401) {\r\n            const state = getState()\r\n            Login(state.user!.user!.mail)\r\n            response = await addStopApi(stop, localStorage.getItem('user')!);\r\n        }\r\n        const newStop = response.data\r\n        dispatch(addStopAction(newStop))\r\n        return newStop;\r\n    } catch (error) {\r\n\r\n        alert(\"failed to add\")\r\n        return null;\r\n    }\r\n}\r\nexport const addComment = (comment: Omit<Comment, 'id'>, token: string): AppThunk<Comment> => async (dispatch, getState) => {\r\n    let response = await addCommentApi(comment, token) as Comment\r\n    dispatch(addCommentAction({ trackId: response.trackId, comment: response }))\r\n    return response\r\n\r\n}\r\nexport const initComments = (trackId: number, token: string): AppThunk<Comment[]> => async (dispatch, getState) => {\r\n    let response = await getCommentsByTrackId(trackId, token) as Comment[]\r\n    response.forEach(value => {\r\n        dispatch(addCommentAction({ trackId: trackId, comment: value }))\r\n    })\r\n    return response\r\n\r\n}\r\n\r\nexport const deleteTrack = (trackId: number, token: string): AppThunk<Track> => async (dispatch, getState) => {\r\n    await deleteTrackApi(trackId, token!)\r\n    alert(\"delete was successfull\")\r\n    dispatch(deleteTrackActionForTrack(indexToDelete))\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}