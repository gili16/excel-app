{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\routes\\\\router.tsx\";\nimport React from 'react';\nimport { Navigate, createBrowserRouter } from \"react-router-dom\";\n// import Layout from \"./Layout/Layout\";\n// import Home from \"./component/General/home\";\n// import Login from \"./component/General/Login\";\n// import SignIn from './component/General/SignIn';\n// import MyProfile from \"./component/User/myProfile\";\n\nimport Layout from \"../layouts/Layout\";\n// import React from 'react';\nimport HomePage from \"../pages/HomePage\";\nimport SignUpPage from '../pages/SignUpPage';\nimport TrackPage from '../pages/TracksPage';\nimport AddTrackPage from '../pages/AddTrackPage';\nimport MyTracksPage from '../pages/MyTracksPage';\nimport UpdateTrack from '../sections/UpdateTrack';\nimport { getMyTracks, getTrackByArea, getTrackById, getTracks } from '../services/track';\nimport UpdateUser from '../sections/UpdateUser';\nimport { getUser, getUserByToken } from '../services/user';\nimport MyFavoritesPage from '../pages/MyFavoritesPage';\n// import { getViewById } from '../utils/Mapper';\nimport { getCompanyById, getViewById } from '../services/Mapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 18\n  }, this),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }, this)\n  }, {\n    path: 'user/',\n    // element: <h1>Products</h1>\n    children: [{\n      path: 'myTracks/',\n      children: [{\n        path: '',\n        element: /*#__PURE__*/_jsxDEV(MyTracksPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }, this),\n        loader: async () => {\n          let token = localStorage.getItem('user');\n          if (token !== undefined && token !== null && token !== \"\") {\n            try {\n              const response = await getUserByToken(token);\n              if (response) {\n                if (response.status === 401) {\n                  alert(\"you are not authorized\");\n                  return null;\n                } else {\n                  let id = (await response.json()).id;\n                  try {\n                    const response2 = await getMyTracks(id, token);\n                    if (response2) {\n                      let res = await response2.json();\n                      return res;\n                    } else {\n                      console.error('Failed to fetch picture');\n                    }\n                  } catch (error) {\n                    console.error('Error fetching picture:', error);\n                  }\n                }\n              } else {\n                console.error('Failed to fetch picture');\n              }\n            } catch (error) {\n              console.error('Error fetching picture:', error);\n            }\n          } else {\n            return null;\n          }\n        }\n      }, {\n        path: 'updateTrack/:id',\n        element: /*#__PURE__*/_jsxDEV(UpdateTrack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 42\n        }, this),\n        loader: async ({\n          params\n        }) => {\n          const track = await getTrackById(Number(params.id));\n          return track;\n        }\n      }, {\n        path: 'addTrack',\n        element: /*#__PURE__*/_jsxDEV(AddTrackPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 42\n        }, this)\n      }]\n    }, {\n      path: 'favorites',\n      element: /*#__PURE__*/_jsxDEV(MyFavoritesPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 34\n      }, this)\n    }, {\n      path: 'myProfile',\n      element: /*#__PURE__*/_jsxDEV(UpdateUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 34\n      }, this),\n      loader: async () => {\n        const token = localStorage.getItem('user');\n        const user = await (await getUserByToken(token)).json();\n        const u = await getUser(user.id, token);\n        return u;\n      }\n    }, {\n      path: 'updateProfile'\n    }]\n  }, {\n    path: '/SignIn',\n    element: /*#__PURE__*/_jsxDEV(SignUpPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 26\n    }, this)\n  }, {\n    path: '/findTrack',\n    element: /*#__PURE__*/_jsxDEV(TrackPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 26\n    }, this),\n    loader: async () => {\n      let tracks = await getTrackByArea(\"north\");\n      return tracks;\n    }\n  }, {\n    path: '/findTrack/:option',\n    element: /*#__PURE__*/_jsxDEV(TrackPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 26\n    }, this),\n    loader: async ({\n      params\n    }) => {\n      let tracks = [];\n      if (params.option !== \"\" && params.option !== undefined && params.option !== null) {\n        tracks = await getTracks();\n        tracks = tracks.filter(value => {\n          if (params.option == \"forest\" && getViewById(value.viewId) === \"forest\") {\n            return true;\n          }\n          if (params.option == \"sea\" && getViewById(value.viewId) === \"sea\") {\n            return true;\n          }\n          if (params.option == \"dessert\" && getViewById(value.viewId) === \"dessert\") {\n            return true;\n          }\n          if (params.option === \"market\" && getViewById(value.viewId) === \"market\") {\n            return true;\n          }\n          if (params.option == \"city\" && getViewById(value.viewId) === \"city\") {\n            return true;\n          }\n          if (params.option == \"family\" && getCompanyById(value.companyForTripId) === \"with family\") {\n            return true;\n          }\n          return false;\n        });\n      } else {\n        tracks = await getTrackByArea(\"north\");\n      }\n      return tracks;\n    }\n  }, {\n    path: '/viewTrack'\n  }]\n}, {\n  path: '*',\n  element: /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 18\n  }, this)\n}]);","map":{"version":3,"names":["React","Navigate","createBrowserRouter","Layout","HomePage","SignUpPage","TrackPage","AddTrackPage","MyTracksPage","UpdateTrack","getMyTracks","getTrackByArea","getTrackById","getTracks","UpdateUser","getUser","getUserByToken","MyFavoritesPage","getCompanyById","getViewById","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","loader","token","localStorage","getItem","undefined","response","status","alert","id","json","response2","res","console","error","params","track","Number","user","u","tracks","option","filter","value","viewId","companyForTripId","to"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/routes/router.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate as BigNav, Navigate, createBrowserRouter, useNavigate } from \"react-router-dom\";\r\n// import Layout from \"./Layout/Layout\";\r\n// import Home from \"./component/General/home\";\r\n// import Login from \"./component/General/Login\";\r\n// import SignIn from './component/General/SignIn';\r\n// import MyProfile from \"./component/User/myProfile\";\r\n\r\nimport Layout from \"../layouts/Layout\";\r\n// import React from 'react';\r\nimport HomePage from \"../pages/HomePage\";\r\nimport SignUpForm from '../sections/SignUpForm';\r\nimport SignUpPage from '../pages/SignUpPage';\r\nimport TrackPage from '../pages/TracksPage';\r\nimport MyTracks from '../sections/MyTracks';\r\nimport AddTrackPage from '../pages/AddTrackPage';\r\nimport MyTracksPage from '../pages/MyTracksPage';\r\nimport UpdateTrack from '../sections/UpdateTrack';\r\nimport { getMyTracks, getTrackByArea, getTrackById, getTracks } from '../services/track';\r\nimport UpdateUser from '../sections/UpdateUser';\r\nimport { getUser, getUserByToken } from '../services/user';\r\nimport MyFavoritesPage from '../pages/MyFavoritesPage';\r\nimport { Track } from '../types/Track';\r\n// import { getViewById } from '../utils/Mapper';\r\nimport { getCompanyById, getViewById } from '../services/Mapper';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../redux/user/user.selector';\r\nimport { backHome } from '../utils/backHome.util';\r\nexport const router = createBrowserRouter([\r\n    {\r\n        path: '/',\r\n        element: <Layout />,\r\n        children: [\r\n            {\r\n                path: '/',\r\n                element: <HomePage />,\r\n            },\r\n\r\n            {\r\n                path: 'user/',\r\n                // element: <h1>Products</h1>\r\n                children: [\r\n\r\n                    {\r\n                        path: 'myTracks/',\r\n                        children: [\r\n                            {\r\n                                path: '',\r\n                                element: <MyTracksPage />,\r\n                                loader: async () => {\r\n                                    let token = localStorage.getItem('user')\r\n                                    if (token !== undefined && token !== null && token !== \"\") {\r\n                                        try {\r\n                                            const response = await getUserByToken(token)\r\n                                            if (response) {\r\n                                                if (response.status === 401) {\r\n                                                    alert(\"you are not authorized\")\r\n                                                    return null;\r\n                                                } else {\r\n                                                    let id = (await response.json()).id\r\n                                                    try {\r\n                                                        const response2 = await getMyTracks(id,token);\r\n                                                        if (response2) {\r\n                                                            let res = await response2.json()\r\n                                                            return res;\r\n\r\n                                                        } else {\r\n                                                            console.error('Failed to fetch picture');\r\n                                                        }\r\n                                                    } catch (error) {\r\n                                                        console.error('Error fetching picture:', error);\r\n                                                    }\r\n                                                }\r\n                                            } else {\r\n                                                console.error('Failed to fetch picture');\r\n                                            }\r\n                                        } catch (error) {\r\n                                            console.error('Error fetching picture:', error);\r\n                                        }\r\n\r\n\r\n                                    } else {\r\n                                        return null;\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                path: 'updateTrack/:id',\r\n                                element: <UpdateTrack />,\r\n                                loader: async ({ params }) => {\r\n                                    const track = await getTrackById(Number(params.id!))\r\n                                    return track\r\n\r\n                                },\r\n                            },\r\n                            {\r\n                                path: 'addTrack',\r\n                                element: <AddTrackPage />\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        path: 'favorites',\r\n                        element: <MyFavoritesPage />,\r\n\r\n                    },\r\n                    {\r\n                        path: 'myProfile',\r\n                        element: <UpdateUser />,\r\n                        loader: async () => {\r\n                            const token = localStorage.getItem('user')\r\n                            const user = await (await getUserByToken(token!)).json()\r\n                            const u = await getUser(user.id, token!)\r\n                            return u;\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        path: 'updateProfile'\r\n                    }\r\n\r\n                ]\r\n            },\r\n            {\r\n                path: '/SignIn',\r\n                element: <SignUpPage />\r\n            },\r\n            {\r\n                path: '/findTrack',\r\n                element: <TrackPage />,\r\n                loader: async () => {\r\n                    let tracks = await getTrackByArea(\"north\");\r\n                    return tracks\r\n                }\r\n            },\r\n            {\r\n                path: '/findTrack/:option',\r\n                element: <TrackPage />,\r\n                loader: async ({ params }) => {\r\n                    let tracks = [] as Track[];\r\n\r\n                    if (params.option !== \"\" && params.option !== undefined && params.option !== null) {\r\n                        tracks = await getTracks();\r\n                        tracks = tracks.filter((value) => {\r\n                            if (params.option == \"forest\" && getViewById(value.viewId) === \"forest\") {\r\n                                return true;\r\n                            }\r\n                            if (params.option == \"sea\" && getViewById(value.viewId) === \"sea\") {\r\n                                return true;\r\n                            }\r\n                            if (params.option == \"dessert\" && getViewById(value.viewId) === \"dessert\") {\r\n                                return true;\r\n                            }\r\n                            if (params.option === \"market\" && getViewById(value.viewId) === \"market\") {\r\n                                return true;\r\n                            }\r\n                            if (params.option == \"city\" && getViewById(value.viewId) === \"city\") {\r\n                                return true;\r\n                            }\r\n                            if (params.option == \"family\" && getCompanyById(value.companyForTripId) === \"with family\") {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        });\r\n                    } else {\r\n                        tracks = await getTrackByArea(\"north\");\r\n                    }\r\n                    return tracks;\r\n                }\r\n            },\r\n            {\r\n                path: '/viewTrack',\r\n\r\n            }\r\n\r\n\r\n        ]\r\n    },\r\n\r\n    {\r\n        path: '*',\r\n        element: <Navigate to=\"/\" />,\r\n    },\r\n\r\n]);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}