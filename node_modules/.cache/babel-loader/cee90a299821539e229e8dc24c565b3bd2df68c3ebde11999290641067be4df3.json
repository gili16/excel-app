{"ast":null,"code":"var ClusterIcon = /** @class */function () {\n  function ClusterIcon(cluster, styles) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView);\n    this.cluster = cluster;\n    this.clusterClassName = this.cluster.getClusterer().getClusterClass();\n    this.className = this.clusterClassName;\n    this.styles = styles;\n    this.center = undefined;\n    this.div = null;\n    this.sums = null;\n    this.visible = false;\n    this.boundsChangedListener = null;\n    this.url = '';\n    this.height = 0;\n    this.width = 0;\n    this.anchorText = [0, 0];\n    this.anchorIcon = [0, 0];\n    this.textColor = 'black';\n    this.textSize = 11;\n    this.textDecoration = 'none';\n    this.fontWeight = 'bold';\n    this.fontStyle = 'normal';\n    this.fontFamily = 'Arial,sans-serif';\n    this.backgroundPosition = '0 0';\n    this.cMouseDownInCluster = null;\n    this.cDraggingMapByCluster = null;\n    this.timeOut = null;\n    this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n    this.onBoundsChanged = this.onBoundsChanged.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onMouseOver = this.onMouseOver.bind(this);\n    this.onMouseOut = this.onMouseOut.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n    this.draw = this.draw.bind(this);\n    this.hide = this.hide.bind(this);\n    this.show = this.show.bind(this);\n    this.useStyle = this.useStyle.bind(this);\n    this.setCenter = this.setCenter.bind(this);\n    this.getPosFromLatLng = this.getPosFromLatLng.bind(this);\n  }\n  ClusterIcon.prototype.onBoundsChanged = function () {\n    this.cDraggingMapByCluster = this.cMouseDownInCluster;\n  };\n  ClusterIcon.prototype.onMouseDown = function () {\n    this.cMouseDownInCluster = true;\n    this.cDraggingMapByCluster = false;\n  };\n  ClusterIcon.prototype.onClick = function (event) {\n    this.cMouseDownInCluster = false;\n    if (!this.cDraggingMapByCluster) {\n      var markerClusterer_1 = this.cluster.getClusterer();\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n      google.maps.event.trigger(markerClusterer_1, 'click', this.cluster);\n      google.maps.event.trigger(markerClusterer_1, 'clusterclick', this.cluster); // deprecated name\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n      if (markerClusterer_1.getZoomOnClick()) {\n        // Zoom into the cluster.\n        var maxZoom_1 = markerClusterer_1.getMaxZoom();\n        var bounds_1 = this.cluster.getBounds();\n        var map = markerClusterer_1.getMap();\n        if (map !== null && 'fitBounds' in map) {\n          map.fitBounds(bounds_1);\n        }\n        // There is a fix for Issue 170 here:\n        this.timeOut = window.setTimeout(function () {\n          var map = markerClusterer_1.getMap();\n          if (map !== null) {\n            if ('fitBounds' in map) {\n              map.fitBounds(bounds_1);\n            }\n            var zoom = map.getZoom() || 0;\n            // Don't zoom beyond the max zoom level\n            if (maxZoom_1 !== null && zoom > maxZoom_1) {\n              map.setZoom(maxZoom_1 + 1);\n            }\n          }\n        }, 100);\n      }\n      // Prevent event propagation to the map:\n      event.cancelBubble = true;\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n    }\n  };\n  ClusterIcon.prototype.onMouseOver = function () {\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n    google.maps.event.trigger(this.cluster.getClusterer(), 'mouseover', this.cluster);\n  };\n  ClusterIcon.prototype.onMouseOut = function () {\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n    google.maps.event.trigger(this.cluster.getClusterer(), 'mouseout', this.cluster);\n  };\n  ClusterIcon.prototype.onAdd = function () {\n    var _a;\n    this.div = document.createElement('div');\n    this.div.className = this.className;\n    if (this.visible) {\n      this.show();\n    }\n    (_a = this.getPanes()) === null || _a === void 0 ? void 0 : _a.overlayMouseTarget.appendChild(this.div);\n    var map = this.getMap();\n    if (map !== null) {\n      // Fix for Issue 157\n      this.boundsChangedListener = google.maps.event.addListener(map, 'bounds_changed', this.onBoundsChanged);\n      this.div.addEventListener('mousedown', this.onMouseDown);\n      this.div.addEventListener('click', this.onClick);\n      this.div.addEventListener('mouseover', this.onMouseOver);\n      this.div.addEventListener('mouseout', this.onMouseOut);\n    }\n  };\n  ClusterIcon.prototype.onRemove = function () {\n    if (this.div && this.div.parentNode) {\n      this.hide();\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener);\n      }\n      this.div.removeEventListener('mousedown', this.onMouseDown);\n      this.div.removeEventListener('click', this.onClick);\n      this.div.removeEventListener('mouseover', this.onMouseOver);\n      this.div.removeEventListener('mouseout', this.onMouseOut);\n      this.div.parentNode.removeChild(this.div);\n      if (this.timeOut !== null) {\n        window.clearTimeout(this.timeOut);\n        this.timeOut = null;\n      }\n      this.div = null;\n    }\n  };\n  ClusterIcon.prototype.draw = function () {\n    if (this.visible && this.div !== null && this.center) {\n      var pos = this.getPosFromLatLng(this.center);\n      this.div.style.top = pos !== null ? \"\".concat(pos.y, \"px\") : '0';\n      this.div.style.left = pos !== null ? \"\".concat(pos.x, \"px\") : '0';\n    }\n  };\n  ClusterIcon.prototype.hide = function () {\n    if (this.div) {\n      this.div.style.display = 'none';\n    }\n    this.visible = false;\n  };\n  ClusterIcon.prototype.show = function () {\n    var _a, _b, _c, _d, _e, _f;\n    if (this.div && this.center) {\n      var divTitle = this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '' ? this.cluster.getClusterer().getTitle() : this.sums.title;\n      // NOTE: values must be specified in px units\n      var bp = this.backgroundPosition.split(' ');\n      var spriteH = parseInt(((_a = bp[0]) === null || _a === void 0 ? void 0 : _a.replace(/^\\s+|\\s+$/g, '')) || '0', 10);\n      var spriteV = parseInt(((_b = bp[1]) === null || _b === void 0 ? void 0 : _b.replace(/^\\s+|\\s+$/g, '')) || '0', 10);\n      var pos = this.getPosFromLatLng(this.center);\n      this.div.className = this.className;\n      this.div.setAttribute('style', \"cursor: pointer; position: absolute; top: \".concat(pos !== null ? \"\".concat(pos.y, \"px\") : '0', \"; left: \").concat(pos !== null ? \"\".concat(pos.x, \"px\") : '0', \"; width: \").concat(this.width, \"px; height: \").concat(this.height, \"px; \"));\n      var img = document.createElement('img');\n      img.alt = divTitle;\n      img.src = this.url;\n      img.width = this.width;\n      img.height = this.height;\n      img.setAttribute('style', \"position: absolute; top: \".concat(spriteV, \"px; left: \").concat(spriteH, \"px\"));\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img.style.clip = \"rect(-\".concat(spriteV, \"px, -\").concat(spriteH + this.width, \"px, -\").concat(spriteV + this.height, \", -\").concat(spriteH, \")\");\n      }\n      var textElm = document.createElement('div');\n      textElm.setAttribute('style', \"position: absolute; top: \".concat(this.anchorText[0], \"px; left: \").concat(this.anchorText[1], \"px; color: \").concat(this.textColor, \"; font-size: \").concat(this.textSize, \"px; font-family: \").concat(this.fontFamily, \"; font-weight: \").concat(this.fontWeight, \"; fontStyle: \").concat(this.fontStyle, \"; text-decoration: \").concat(this.textDecoration, \"; text-align: center; width: \").concat(this.width, \"px; line-height: \").concat(this.height, \"px\"));\n      if ((_c = this.sums) === null || _c === void 0 ? void 0 : _c.text) textElm.innerText = \"\".concat((_d = this.sums) === null || _d === void 0 ? void 0 : _d.text);\n      if ((_e = this.sums) === null || _e === void 0 ? void 0 : _e.html) textElm.innerHTML = \"\".concat((_f = this.sums) === null || _f === void 0 ? void 0 : _f.html);\n      this.div.innerHTML = '';\n      this.div.appendChild(img);\n      this.div.appendChild(textElm);\n      this.div.title = divTitle;\n      this.div.style.display = '';\n    }\n    this.visible = true;\n  };\n  ClusterIcon.prototype.useStyle = function (sums) {\n    this.sums = sums;\n    var styles = this.cluster.getClusterer().getStyles();\n    var style = styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))];\n    if (style) {\n      this.url = style.url;\n      this.height = style.height;\n      this.width = style.width;\n      if (style.className) {\n        this.className = \"\".concat(this.clusterClassName, \" \").concat(style.className);\n      }\n      this.anchorText = style.anchorText || [0, 0];\n      this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2];\n      this.textColor = style.textColor || 'black';\n      this.textSize = style.textSize || 11;\n      this.textDecoration = style.textDecoration || 'none';\n      this.fontWeight = style.fontWeight || 'bold';\n      this.fontStyle = style.fontStyle || 'normal';\n      this.fontFamily = style.fontFamily || 'Arial,sans-serif';\n      this.backgroundPosition = style.backgroundPosition || '0 0';\n    }\n  };\n  ClusterIcon.prototype.setCenter = function (center) {\n    this.center = center;\n  };\n  ClusterIcon.prototype.getPosFromLatLng = function (latlng) {\n    var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n    if (pos !== null) {\n      pos.x -= this.anchorIcon[1];\n      pos.y -= this.anchorIcon[0];\n    }\n    return pos;\n  };\n  return ClusterIcon;\n}();\n\n/* global google */\nvar Cluster = /** @class */function () {\n  function Cluster(markerClusterer) {\n    this.markerClusterer = markerClusterer;\n    this.map = this.markerClusterer.getMap();\n    this.gridSize = this.markerClusterer.getGridSize();\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize();\n    this.averageCenter = this.markerClusterer.getAverageCenter();\n    this.markers = [];\n    this.center = undefined;\n    this.bounds = null;\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles());\n    this.getSize = this.getSize.bind(this);\n    this.getMarkers = this.getMarkers.bind(this);\n    this.getCenter = this.getCenter.bind(this);\n    this.getMap = this.getMap.bind(this);\n    this.getClusterer = this.getClusterer.bind(this);\n    this.getBounds = this.getBounds.bind(this);\n    this.remove = this.remove.bind(this);\n    this.addMarker = this.addMarker.bind(this);\n    this.isMarkerInClusterBounds = this.isMarkerInClusterBounds.bind(this);\n    this.calculateBounds = this.calculateBounds.bind(this);\n    this.updateIcon = this.updateIcon.bind(this);\n    this.isMarkerAlreadyAdded = this.isMarkerAlreadyAdded.bind(this);\n  }\n  Cluster.prototype.getSize = function () {\n    return this.markers.length;\n  };\n  Cluster.prototype.getMarkers = function () {\n    return this.markers;\n  };\n  Cluster.prototype.getCenter = function () {\n    return this.center;\n  };\n  Cluster.prototype.getMap = function () {\n    return this.map;\n  };\n  Cluster.prototype.getClusterer = function () {\n    return this.markerClusterer;\n  };\n  Cluster.prototype.getBounds = function () {\n    var bounds = new google.maps.LatLngBounds(this.center, this.center);\n    var markers = this.getMarkers();\n    for (var _i = 0, markers_1 = markers; _i < markers_1.length; _i++) {\n      var marker = markers_1[_i];\n      var position = marker.getPosition();\n      if (position) {\n        bounds.extend(position);\n      }\n    }\n    return bounds;\n  };\n  Cluster.prototype.remove = function () {\n    this.clusterIcon.setMap(null);\n    this.markers = [];\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    delete this.markers;\n  };\n  Cluster.prototype.addMarker = function (marker) {\n    var _a;\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false;\n    }\n    if (!this.center) {\n      var position = marker.getPosition();\n      if (position) {\n        this.center = position;\n        this.calculateBounds();\n      }\n    } else {\n      if (this.averageCenter) {\n        var position = marker.getPosition();\n        if (position) {\n          var length_1 = this.markers.length + 1;\n          this.center = new google.maps.LatLng((this.center.lat() * (length_1 - 1) + position.lat()) / length_1, (this.center.lng() * (length_1 - 1) + position.lng()) / length_1);\n          this.calculateBounds();\n        }\n      }\n    }\n    marker.isAdded = true;\n    this.markers.push(marker);\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n    var zoom = (_a = this.map) === null || _a === void 0 ? void 0 : _a.getZoom();\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (var _i = 0, _b = this.markers; _i < _b.length; _i++) {\n        var markerElement = _b[_i];\n        markerElement.setMap(null);\n      }\n    } else {\n      marker.setMap(null);\n    }\n    return true;\n  };\n  Cluster.prototype.isMarkerInClusterBounds = function (marker) {\n    if (this.bounds !== null) {\n      var position = marker.getPosition();\n      if (position) {\n        return this.bounds.contains(position);\n      }\n    }\n    return false;\n  };\n  Cluster.prototype.calculateBounds = function () {\n    this.bounds = this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center, this.center));\n  };\n  Cluster.prototype.updateIcon = function () {\n    var _a;\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n    var zoom = (_a = this.map) === null || _a === void 0 ? void 0 : _a.getZoom();\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      this.clusterIcon.hide();\n      return;\n    }\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide();\n      return;\n    }\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center);\n    }\n    this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length));\n    this.clusterIcon.show();\n  };\n  Cluster.prototype.isMarkerAlreadyAdded = function (marker) {\n    if (this.markers.includes) {\n      return this.markers.includes(marker);\n    }\n    for (var i = 0; i < this.markers.length; i++) {\n      if (marker === this.markers[i]) {\n        return true;\n      }\n    }\n    return false;\n  };\n  return Cluster;\n}();\n\n/* global google */\n/**\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\n * which is not a problem as max array length is 4294967296 (2**32)\n */\nfunction CALCULATOR(markers, numStyles) {\n  var count = markers.length;\n  var numberOfDigits = count.toString().length;\n  var index = Math.min(numberOfDigits, numStyles);\n  return {\n    text: count.toString(),\n    index: index,\n    title: ''\n  };\n}\nvar BATCH_SIZE = 2000;\nvar BATCH_SIZE_IE = 500;\nvar IMAGE_PATH = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m';\nvar IMAGE_EXTENSION = 'png';\nvar IMAGE_SIZES = [53, 56, 66, 78, 90];\nvar CLUSTERER_CLASS = 'cluster';\nvar Clusterer = /** @class */function () {\n  function Clusterer(map, optMarkers, optOptions) {\n    if (optMarkers === void 0) {\n      optMarkers = [];\n    }\n    if (optOptions === void 0) {\n      optOptions = {};\n    }\n    this.getMinimumClusterSize = this.getMinimumClusterSize.bind(this);\n    this.setMinimumClusterSize = this.setMinimumClusterSize.bind(this);\n    this.getEnableRetinaIcons = this.getEnableRetinaIcons.bind(this);\n    this.setEnableRetinaIcons = this.setEnableRetinaIcons.bind(this);\n    this.addToClosestCluster = this.addToClosestCluster.bind(this);\n    this.getImageExtension = this.getImageExtension.bind(this);\n    this.setImageExtension = this.setImageExtension.bind(this);\n    this.getExtendedBounds = this.getExtendedBounds.bind(this);\n    this.getAverageCenter = this.getAverageCenter.bind(this);\n    this.setAverageCenter = this.setAverageCenter.bind(this);\n    this.getTotalClusters = this.getTotalClusters.bind(this);\n    this.fitMapToMarkers = this.fitMapToMarkers.bind(this);\n    this.getIgnoreHidden = this.getIgnoreHidden.bind(this);\n    this.setIgnoreHidden = this.setIgnoreHidden.bind(this);\n    this.getClusterClass = this.getClusterClass.bind(this);\n    this.setClusterClass = this.setClusterClass.bind(this);\n    this.getTotalMarkers = this.getTotalMarkers.bind(this);\n    this.getZoomOnClick = this.getZoomOnClick.bind(this);\n    this.setZoomOnClick = this.setZoomOnClick.bind(this);\n    this.getBatchSizeIE = this.getBatchSizeIE.bind(this);\n    this.setBatchSizeIE = this.setBatchSizeIE.bind(this);\n    this.createClusters = this.createClusters.bind(this);\n    this.onZoomChanged = this.onZoomChanged.bind(this);\n    this.getImageSizes = this.getImageSizes.bind(this);\n    this.setImageSizes = this.setImageSizes.bind(this);\n    this.getCalculator = this.getCalculator.bind(this);\n    this.setCalculator = this.setCalculator.bind(this);\n    this.removeMarkers = this.removeMarkers.bind(this);\n    this.resetViewport = this.resetViewport.bind(this);\n    this.getImagePath = this.getImagePath.bind(this);\n    this.setImagePath = this.setImagePath.bind(this);\n    this.pushMarkerTo = this.pushMarkerTo.bind(this);\n    this.removeMarker = this.removeMarker.bind(this);\n    this.clearMarkers = this.clearMarkers.bind(this);\n    this.setupStyles = this.setupStyles.bind(this);\n    this.getGridSize = this.getGridSize.bind(this);\n    this.setGridSize = this.setGridSize.bind(this);\n    this.getClusters = this.getClusters.bind(this);\n    this.getMaxZoom = this.getMaxZoom.bind(this);\n    this.setMaxZoom = this.setMaxZoom.bind(this);\n    this.getMarkers = this.getMarkers.bind(this);\n    this.addMarkers = this.addMarkers.bind(this);\n    this.getStyles = this.getStyles.bind(this);\n    this.setStyles = this.setStyles.bind(this);\n    this.addMarker = this.addMarker.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n    this.getTitle = this.getTitle.bind(this);\n    this.setTitle = this.setTitle.bind(this);\n    this.repaint = this.repaint.bind(this);\n    this.onIdle = this.onIdle.bind(this);\n    this.redraw = this.redraw.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.draw = this.draw.bind(this);\n    this.extend = this.extend.bind(this);\n    this.extend(Clusterer, google.maps.OverlayView);\n    this.markers = [];\n    this.clusters = [];\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n    this.gridSize = optOptions.gridSize || 60;\n    this.minClusterSize = optOptions.minimumClusterSize || 2;\n    this.maxZoom = optOptions.maxZoom || null;\n    this.styles = optOptions.styles || [];\n    this.title = optOptions.title || '';\n    this.zoomOnClick = true;\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick;\n    }\n    this.averageCenter = false;\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter;\n    }\n    this.ignoreHidden = false;\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden;\n    }\n    this.enableRetinaIcons = false;\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons;\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH;\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION;\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES;\n    this.calculator = optOptions.calculator || CALCULATOR;\n    this.batchSize = optOptions.batchSize || BATCH_SIZE;\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE;\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS;\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE;\n    }\n    this.timerRefStatic = null;\n    this.setupStyles();\n    this.addMarkers(optMarkers, true);\n    this.setMap(map); // Note: this causes onAdd to be called\n  }\n  Clusterer.prototype.onZoomChanged = function () {\n    var _a, _b;\n    this.resetViewport(false);\n    // Workaround for this Google bug: when map is at level 0 and \"-\" of\n    // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n    // the map doesn't zoom out any further. In this situation, no \"idle\"\n    // event is triggered so the cluster markers that have been removed\n    // do not get redrawn. Same goes for a zoom in at maxZoom.\n    if (((_a = this.getMap()) === null || _a === void 0 ? void 0 : _a.getZoom()) === (this.get('minZoom') || 0) || ((_b = this.getMap()) === null || _b === void 0 ? void 0 : _b.getZoom()) === this.get('maxZoom')) {\n      google.maps.event.trigger(this, 'idle');\n    }\n  };\n  Clusterer.prototype.onIdle = function () {\n    this.redraw();\n  };\n  Clusterer.prototype.onAdd = function () {\n    var map = this.getMap();\n    this.activeMap = map;\n    this.ready = true;\n    this.repaint();\n    if (map !== null) {\n      // Add the map event listeners\n      this.listeners = [google.maps.event.addListener(map, 'zoom_changed', this.onZoomChanged), google.maps.event.addListener(map, 'idle', this.onIdle)];\n    }\n  };\n  Clusterer.prototype.onRemove = function () {\n    // Put all the managed markers back on the map:\n    for (var _i = 0, _a = this.markers; _i < _a.length; _i++) {\n      var marker = _a[_i];\n      if (marker.getMap() !== this.activeMap) {\n        marker.setMap(this.activeMap);\n      }\n    }\n    // Remove all clusters:\n    for (var _b = 0, _c = this.clusters; _b < _c.length; _b++) {\n      var cluster = _c[_b];\n      cluster.remove();\n    }\n    this.clusters = [];\n    // Remove map event listeners:\n    for (var _d = 0, _e = this.listeners; _d < _e.length; _d++) {\n      var listener = _e[_d];\n      google.maps.event.removeListener(listener);\n    }\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n  };\n  Clusterer.prototype.draw = function () {\n    return;\n  };\n  Clusterer.prototype.getMap = function () {\n    return null;\n  };\n  Clusterer.prototype.getPanes = function () {\n    return null;\n  };\n  Clusterer.prototype.getProjection = function () {\n    return {\n      fromContainerPixelToLatLng: function () {\n        return null;\n      },\n      fromDivPixelToLatLng: function () {\n        return null;\n      },\n      fromLatLngToContainerPixel: function () {\n        return null;\n      },\n      fromLatLngToDivPixel: function () {\n        return null;\n      },\n      getVisibleRegion: function () {\n        return null;\n      },\n      getWorldWidth: function () {\n        return 0;\n      }\n    };\n  };\n  Clusterer.prototype.setMap = function () {\n    return;\n  };\n  Clusterer.prototype.addListener = function () {\n    return {\n      remove: function () {\n        return;\n      }\n    };\n  };\n  Clusterer.prototype.bindTo = function () {\n    return;\n  };\n  Clusterer.prototype.get = function () {\n    return;\n  };\n  Clusterer.prototype.notify = function () {\n    return;\n  };\n  Clusterer.prototype.set = function () {\n    return;\n  };\n  Clusterer.prototype.setValues = function () {\n    return;\n  };\n  Clusterer.prototype.unbind = function () {\n    return;\n  };\n  Clusterer.prototype.unbindAll = function () {\n    return;\n  };\n  Clusterer.prototype.setupStyles = function () {\n    if (this.styles.length > 0) {\n      return;\n    }\n    for (var i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: \"\".concat(this.imagePath + (i + 1), \".\").concat(this.imageExtension),\n        height: this.imageSizes[i] || 0,\n        width: this.imageSizes[i] || 0\n      });\n    }\n  };\n  Clusterer.prototype.fitMapToMarkers = function () {\n    var markers = this.getMarkers();\n    var bounds = new google.maps.LatLngBounds();\n    for (var _i = 0, markers_1 = markers; _i < markers_1.length; _i++) {\n      var marker = markers_1[_i];\n      var position = marker.getPosition();\n      if (position) {\n        bounds.extend(position);\n      }\n    }\n    var map = this.getMap();\n    if (map !== null && 'fitBounds' in map) {\n      map.fitBounds(bounds);\n    }\n  };\n  Clusterer.prototype.getGridSize = function () {\n    return this.gridSize;\n  };\n  Clusterer.prototype.setGridSize = function (gridSize) {\n    this.gridSize = gridSize;\n  };\n  Clusterer.prototype.getMinimumClusterSize = function () {\n    return this.minClusterSize;\n  };\n  Clusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n    this.minClusterSize = minimumClusterSize;\n  };\n  Clusterer.prototype.getMaxZoom = function () {\n    return this.maxZoom;\n  };\n  Clusterer.prototype.setMaxZoom = function (maxZoom) {\n    this.maxZoom = maxZoom;\n  };\n  Clusterer.prototype.getStyles = function () {\n    return this.styles;\n  };\n  Clusterer.prototype.setStyles = function (styles) {\n    this.styles = styles;\n  };\n  Clusterer.prototype.getTitle = function () {\n    return this.title;\n  };\n  Clusterer.prototype.setTitle = function (title) {\n    this.title = title;\n  };\n  Clusterer.prototype.getZoomOnClick = function () {\n    return this.zoomOnClick;\n  };\n  Clusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n    this.zoomOnClick = zoomOnClick;\n  };\n  Clusterer.prototype.getAverageCenter = function () {\n    return this.averageCenter;\n  };\n  Clusterer.prototype.setAverageCenter = function (averageCenter) {\n    this.averageCenter = averageCenter;\n  };\n  Clusterer.prototype.getIgnoreHidden = function () {\n    return this.ignoreHidden;\n  };\n  Clusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n    this.ignoreHidden = ignoreHidden;\n  };\n  Clusterer.prototype.getEnableRetinaIcons = function () {\n    return this.enableRetinaIcons;\n  };\n  Clusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n    this.enableRetinaIcons = enableRetinaIcons;\n  };\n  Clusterer.prototype.getImageExtension = function () {\n    return this.imageExtension;\n  };\n  Clusterer.prototype.setImageExtension = function (imageExtension) {\n    this.imageExtension = imageExtension;\n  };\n  Clusterer.prototype.getImagePath = function () {\n    return this.imagePath;\n  };\n  Clusterer.prototype.setImagePath = function (imagePath) {\n    this.imagePath = imagePath;\n  };\n  Clusterer.prototype.getImageSizes = function () {\n    return this.imageSizes;\n  };\n  Clusterer.prototype.setImageSizes = function (imageSizes) {\n    this.imageSizes = imageSizes;\n  };\n  Clusterer.prototype.getCalculator = function () {\n    return this.calculator;\n  };\n  Clusterer.prototype.setCalculator = function (calculator) {\n    this.calculator = calculator;\n  };\n  Clusterer.prototype.getBatchSizeIE = function () {\n    return this.batchSizeIE;\n  };\n  Clusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n    this.batchSizeIE = batchSizeIE;\n  };\n  Clusterer.prototype.getClusterClass = function () {\n    return this.clusterClass;\n  };\n  Clusterer.prototype.setClusterClass = function (clusterClass) {\n    this.clusterClass = clusterClass;\n  };\n  Clusterer.prototype.getMarkers = function () {\n    return this.markers;\n  };\n  Clusterer.prototype.getTotalMarkers = function () {\n    return this.markers.length;\n  };\n  Clusterer.prototype.getClusters = function () {\n    return this.clusters;\n  };\n  Clusterer.prototype.getTotalClusters = function () {\n    return this.clusters.length;\n  };\n  Clusterer.prototype.addMarker = function (marker, optNoDraw) {\n    this.pushMarkerTo(marker);\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n  Clusterer.prototype.addMarkers = function (markers, optNoDraw) {\n    for (var key in markers) {\n      if (Object.prototype.hasOwnProperty.call(markers, key)) {\n        var marker = markers[key];\n        if (marker) {\n          this.pushMarkerTo(marker);\n        }\n      }\n    }\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n  Clusterer.prototype.pushMarkerTo = function (marker) {\n    var _this = this;\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      google.maps.event.addListener(marker, 'dragend', function () {\n        if (_this.ready) {\n          marker.isAdded = false;\n          _this.repaint();\n        }\n      });\n    }\n    marker.isAdded = false;\n    this.markers.push(marker);\n  };\n  Clusterer.prototype.removeMarker_ = function (marker) {\n    var index = -1;\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i;\n          break;\n        }\n      }\n    }\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false;\n    }\n    marker.setMap(null);\n    this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n    return true;\n  };\n  Clusterer.prototype.removeMarker = function (marker, optNoDraw) {\n    var removed = this.removeMarker_(marker);\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n    return removed;\n  };\n  Clusterer.prototype.removeMarkers = function (markers, optNoDraw) {\n    var removed = false;\n    for (var _i = 0, markers_2 = markers; _i < markers_2.length; _i++) {\n      var marker = markers_2[_i];\n      removed = removed || this.removeMarker_(marker);\n    }\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n    return removed;\n  };\n  Clusterer.prototype.clearMarkers = function () {\n    this.resetViewport(true);\n    this.markers = [];\n  };\n  Clusterer.prototype.repaint = function () {\n    var oldClusters = this.clusters.slice();\n    this.clusters = [];\n    this.resetViewport(false);\n    this.redraw();\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(function timeout() {\n      for (var _i = 0, oldClusters_1 = oldClusters; _i < oldClusters_1.length; _i++) {\n        var oldCluster = oldClusters_1[_i];\n        oldCluster.remove();\n      }\n    }, 0);\n  };\n  Clusterer.prototype.getExtendedBounds = function (bounds) {\n    var projection = this.getProjection();\n    // Convert the points to pixels and the extend out by the grid size.\n    var trPix = projection.fromLatLngToDivPixel(\n    // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng()));\n    if (trPix !== null) {\n      trPix.x += this.gridSize;\n      trPix.y -= this.gridSize;\n    }\n    var blPix = projection.fromLatLngToDivPixel(\n    // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng()));\n    if (blPix !== null) {\n      blPix.x -= this.gridSize;\n      blPix.y += this.gridSize;\n    }\n    // Extend the bounds to contain the new bounds.\n    if (trPix !== null) {\n      // Convert the pixel points back to LatLng nw\n      var point1 = projection.fromDivPixelToLatLng(trPix);\n      if (point1 !== null) {\n        bounds.extend(point1);\n      }\n    }\n    if (blPix !== null) {\n      // Convert the pixel points back to LatLng sw\n      var point2 = projection.fromDivPixelToLatLng(blPix);\n      if (point2 !== null) {\n        bounds.extend(point2);\n      }\n    }\n    return bounds;\n  };\n  Clusterer.prototype.redraw = function () {\n    // Redraws all the clusters.\n    this.createClusters(0);\n  };\n  Clusterer.prototype.resetViewport = function (optHide) {\n    // Remove all the clusters\n    for (var _i = 0, _a = this.clusters; _i < _a.length; _i++) {\n      var cluster = _a[_i];\n      cluster.remove();\n    }\n    this.clusters = [];\n    // Reset the markers to not be added and to be removed from the map.\n    for (var _b = 0, _c = this.markers; _b < _c.length; _b++) {\n      var marker = _c[_b];\n      marker.isAdded = false;\n      if (optHide) {\n        marker.setMap(null);\n      }\n    }\n  };\n  Clusterer.prototype.distanceBetweenPoints = function (p1, p2) {\n    var R = 6371; // Radius of the Earth in km\n    var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n    var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n  };\n  Clusterer.prototype.isMarkerInBounds = function (marker, bounds) {\n    var position = marker.getPosition();\n    if (position) {\n      return bounds.contains(position);\n    }\n    return false;\n  };\n  Clusterer.prototype.addToClosestCluster = function (marker) {\n    var cluster;\n    var distance = 40000; // Some large number\n    var clusterToAddTo = null;\n    for (var _i = 0, _a = this.clusters; _i < _a.length; _i++) {\n      var clusterElement = _a[_i];\n      cluster = clusterElement;\n      var center = cluster.getCenter();\n      var position = marker.getPosition();\n      if (center && position) {\n        var d = this.distanceBetweenPoints(center, position);\n        if (d < distance) {\n          distance = d;\n          clusterToAddTo = cluster;\n        }\n      }\n    }\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker);\n    } else {\n      cluster = new Cluster(this);\n      cluster.addMarker(marker);\n      this.clusters.push(cluster);\n    }\n  };\n  Clusterer.prototype.createClusters = function (iFirst) {\n    var _this = this;\n    if (!this.ready) {\n      return;\n    }\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this);\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        delete this.timerRefStatic;\n      }\n    }\n    var map = this.getMap();\n    var bounds = map !== null && 'getBounds' in map ? map.getBounds() : null;\n    var zoom = (map === null || map === void 0 ? void 0 : map.getZoom()) || 0;\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    var mapBounds = zoom > 3 ? new google.maps.LatLngBounds(bounds === null || bounds === void 0 ? void 0 : bounds.getSouthWest(), bounds === null || bounds === void 0 ? void 0 : bounds.getNorthEast()) : new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n    var extendedMapBounds = this.getExtendedBounds(mapBounds);\n    var iLast = Math.min(iFirst + this.batchSize, this.markers.length);\n    for (var i = iFirst; i < iLast; i++) {\n      var marker = this.markers[i];\n      if (marker && !marker.isAdded && this.isMarkerInBounds(marker, extendedMapBounds) && (!this.ignoreHidden || this.ignoreHidden && marker.getVisible())) {\n        this.addToClosestCluster(marker);\n      }\n    }\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(function () {\n        _this.createClusters(iLast);\n      }, 0);\n    } else {\n      this.timerRefStatic = null;\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringend', this);\n      for (var _i = 0, _a = this.clusters; _i < _a.length; _i++) {\n        var cluster = _a[_i];\n        cluster.updateIcon();\n      }\n    }\n  };\n  Clusterer.prototype.extend = function (obj1, obj2) {\n    return function applyExtend(object) {\n      for (var property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        var prop = property;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.prototype[prop] = object.prototype[prop];\n      }\n      return this;\n    }.apply(obj1, [obj2]);\n  };\n  return Clusterer;\n}();\nexport { Cluster, ClusterIcon, Clusterer };","map":{"version":3,"names":["ClusterIcon","cluster","styles","getClusterer","extend","google","maps","OverlayView","clusterClassName","getClusterClass","className","center","undefined","div","sums","visible","boundsChangedListener","url","height","width","anchorText","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","cMouseDownInCluster","cDraggingMapByCluster","timeOut","setMap","getMap","onBoundsChanged","bind","onMouseDown","onClick","onMouseOver","onMouseOut","onAdd","onRemove","draw","hide","show","useStyle","setCenter","getPosFromLatLng","prototype","event","markerClusterer_1","trigger","getZoomOnClick","maxZoom_1","getMaxZoom","bounds_1","getBounds","map","fitBounds","window","setTimeout","zoom","getZoom","setZoom","cancelBubble","stopPropagation","document","createElement","_a","getPanes","overlayMouseTarget","appendChild","addListener","addEventListener","parentNode","removeListener","removeEventListener","removeChild","clearTimeout","pos","style","top","concat","y","left","x","display","divTitle","title","getTitle","bp","split","spriteH","parseInt","replace","spriteV","_b","setAttribute","img","alt","src","enableRetinaIcons","clip","textElm","_c","text","innerText","_d","_e","html","innerHTML","_f","getStyles","Math","min","length","max","index","latlng","getProjection","fromLatLngToDivPixel","Cluster","markerClusterer","gridSize","getGridSize","minClusterSize","getMinimumClusterSize","averageCenter","getAverageCenter","markers","bounds","clusterIcon","getSize","getMarkers","getCenter","remove","addMarker","isMarkerInClusterBounds","calculateBounds","updateIcon","isMarkerAlreadyAdded","LatLngBounds","_i","markers_1","marker","position","getPosition","length_1","LatLng","lat","lng","isAdded","push","mCount","maxZoom","markerElement","contains","getExtendedBounds","getCalculator","includes","i","CALCULATOR","numStyles","count","numberOfDigits","toString","BATCH_SIZE","BATCH_SIZE_IE","IMAGE_PATH","IMAGE_EXTENSION","IMAGE_SIZES","CLUSTERER_CLASS","Clusterer","optMarkers","optOptions","setMinimumClusterSize","getEnableRetinaIcons","setEnableRetinaIcons","addToClosestCluster","getImageExtension","setImageExtension","setAverageCenter","getTotalClusters","fitMapToMarkers","getIgnoreHidden","setIgnoreHidden","setClusterClass","getTotalMarkers","setZoomOnClick","getBatchSizeIE","setBatchSizeIE","createClusters","onZoomChanged","getImageSizes","setImageSizes","setCalculator","removeMarkers","resetViewport","getImagePath","setImagePath","pushMarkerTo","removeMarker","clearMarkers","setupStyles","setGridSize","getClusters","setMaxZoom","addMarkers","setStyles","setTitle","repaint","onIdle","redraw","clusters","listeners","activeMap","ready","minimumClusterSize","zoomOnClick","ignoreHidden","imagePath","imageExtension","imageSizes","calculator","batchSize","batchSizeIE","clusterClass","navigator","userAgent","toLowerCase","indexOf","timerRefStatic","get","listener","fromContainerPixelToLatLng","fromDivPixelToLatLng","fromLatLngToContainerPixel","getVisibleRegion","getWorldWidth","bindTo","notify","set","setValues","unbind","unbindAll","optNoDraw","key","Object","hasOwnProperty","call","_this","getDraggable","removeMarker_","splice","removed","markers_2","oldClusters","slice","timeout","oldClusters_1","oldCluster","projection","trPix","getNorthEast","blPix","getSouthWest","point1","point2","optHide","distanceBetweenPoints","p1","p2","R","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds","distance","clusterToAddTo","clusterElement","d","iFirst","mapBounds","extendedMapBounds","iLast","getVisible","obj1","obj2","applyExtend","object","property","prop","apply"],"sources":["C:\\Users\\landa\\Documents\\לימודים\\תכנות יד\\react\\my-final-project\\node_modules\\@react-google-maps\\marker-clusterer\\src\\ClusterIcon.tsx","C:\\Users\\landa\\Documents\\לימודים\\תכנות יד\\react\\my-final-project\\node_modules\\@react-google-maps\\marker-clusterer\\src\\Cluster.tsx","C:\\Users\\landa\\Documents\\לימודים\\תכנות יד\\react\\my-final-project\\node_modules\\@react-google-maps\\marker-clusterer\\src\\Clusterer.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport type { Cluster } from './Cluster'\n\nimport type { ClusterIconStyle, ClusterIconInfo } from './types'\n\nexport class ClusterIcon {\n  cluster: Cluster\n  className: string\n  clusterClassName: string\n  styles: ClusterIconStyle[]\n  center: google.maps.LatLng | undefined\n  div: HTMLDivElement | null\n  sums: ClusterIconInfo | null\n  visible: boolean\n  url: string\n  height: number\n  width: number\n  anchorText: [number, number]\n  anchorIcon: [number, number]\n  textColor: string\n  textSize: number\n  textDecoration: string\n  fontWeight: string\n  fontStyle: string\n  fontFamily: string\n  backgroundPosition: string\n  cMouseDownInCluster: boolean | null\n  cDraggingMapByCluster: boolean | null\n  timeOut: number | null\n\n  boundsChangedListener: google.maps.MapsEventListener | null\n\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\n\n    this.cluster = cluster\n\n    this.clusterClassName = this.cluster.getClusterer().getClusterClass()\n\n    this.className = this.clusterClassName\n\n    this.styles = styles\n\n    this.center = undefined\n\n    this.div = null\n\n    this.sums = null\n\n    this.visible = false\n\n    this.boundsChangedListener = null\n\n    this.url = ''\n\n    this.height = 0\n    this.width = 0\n\n    this.anchorText = [0, 0]\n    this.anchorIcon = [0, 0]\n\n    this.textColor = 'black'\n    this.textSize = 11\n    this.textDecoration = 'none'\n    this.fontWeight = 'bold'\n    this.fontStyle = 'normal'\n    this.fontFamily = 'Arial,sans-serif'\n\n    this.backgroundPosition = '0 0'\n\n    this.cMouseDownInCluster = null\n    this.cDraggingMapByCluster = null\n    this.timeOut = null;\n\n    (this as unknown as google.maps.OverlayView).setMap(cluster.getMap()) // Note: this causes onAdd to be called\n\n    this.onBoundsChanged = this.onBoundsChanged.bind(this)\n    this.onMouseDown = this.onMouseDown.bind(this)\n    this.onClick = this.onClick.bind(this)\n    this.onMouseOver = this.onMouseOver.bind(this)\n    this.onMouseOut = this.onMouseOut.bind(this)\n    this.onAdd = this.onAdd.bind(this)\n    this.onRemove = this.onRemove.bind(this)\n    this.draw = this.draw.bind(this)\n    this.hide = this.hide.bind(this)\n    this.show = this.show.bind(this)\n    this.useStyle = this.useStyle.bind(this)\n    this.setCenter = this.setCenter.bind(this)\n    this.getPosFromLatLng = this.getPosFromLatLng.bind(this)\n  }\n\n  onBoundsChanged() {\n    this.cDraggingMapByCluster = this.cMouseDownInCluster\n  }\n\n  onMouseDown() {\n    this.cMouseDownInCluster = true\n\n    this.cDraggingMapByCluster = false\n  }\n\n  onClick(event: Event) {\n    this.cMouseDownInCluster = false\n\n    if (!this.cDraggingMapByCluster) {\n      const markerClusterer = this.cluster.getClusterer()\n\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n      google.maps.event.trigger(markerClusterer, 'click', this.cluster)\n      google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\n\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n      if (markerClusterer.getZoomOnClick()) {\n        // Zoom into the cluster.\n        const maxZoom = markerClusterer.getMaxZoom()\n\n        const bounds = this.cluster.getBounds()\n\n        const map = (markerClusterer as unknown as google.maps.OverlayView).getMap()\n\n        if (map !== null && 'fitBounds' in map) {\n          map.fitBounds(bounds)\n        }\n\n\n        // There is a fix for Issue 170 here:\n        this.timeOut = window.setTimeout(() => {\n          const map = (markerClusterer as unknown as google.maps.OverlayView).getMap()\n\n          if (map !== null) {\n            if ('fitBounds' in map) {\n              map.fitBounds(bounds)\n            }\n\n            const zoom = map.getZoom() || 0\n\n            // Don't zoom beyond the max zoom level\n            if (\n              maxZoom !== null &&\n              zoom > maxZoom\n            ) {\n              map.setZoom(maxZoom + 1)\n            }\n          }\n        }, 100)\n      }\n\n      // Prevent event propagation to the map:\n      event.cancelBubble = true\n\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n    }\n  }\n\n  onMouseOver() {\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n    google.maps.event.trigger(\n      this.cluster.getClusterer(),\n      'mouseover',\n      this.cluster\n    )\n  }\n\n  onMouseOut() {\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n    google.maps.event.trigger(\n      this.cluster.getClusterer(),\n      'mouseout',\n      this.cluster\n    )\n  }\n\n  onAdd() {\n    this.div = document.createElement('div')\n\n    this.div.className = this.className\n\n    if (this.visible) {\n      this.show()\n    }\n\n    ;(this as unknown as google.maps.OverlayView).getPanes()?.overlayMouseTarget.appendChild(this.div)\n\n    const map = (this as unknown as google.maps.OverlayView).getMap()\n\n    if (map !== null) {\n      // Fix for Issue 157\n      this.boundsChangedListener = google.maps.event.addListener(\n        map,\n        'bounds_changed',\n        this.onBoundsChanged\n      )\n\n      this.div.addEventListener('mousedown', this.onMouseDown)\n\n      this.div.addEventListener('click', this.onClick)\n\n      this.div.addEventListener('mouseover', this.onMouseOver)\n\n      this.div.addEventListener('mouseout', this.onMouseOut)\n    }\n  }\n\n  onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide()\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener)\n      }\n\n      this.div.removeEventListener('mousedown', this.onMouseDown)\n\n      this.div.removeEventListener('click', this.onClick)\n\n      this.div.removeEventListener('mouseover', this.onMouseOver)\n\n      this.div.removeEventListener('mouseout', this.onMouseOut)\n\n      this.div.parentNode.removeChild(this.div)\n\n      if (this.timeOut !== null) {\n        window.clearTimeout(this.timeOut)\n\n        this.timeOut = null\n      }\n\n      this.div = null\n    }\n  }\n\n  draw() {\n    if (this.visible && this.div !== null && this.center) {\n      const pos = this.getPosFromLatLng(this.center)\n\n      this.div.style.top = pos !== null ? `${pos.y}px` : '0'\n      this.div.style.left = pos !== null ? `${pos.x}px` : '0'\n    }\n  }\n\n  hide() {\n    if (this.div) {\n      this.div.style.display = 'none'\n    }\n\n    this.visible = false\n  }\n\n  show() {\n    if (this.div && this.center) {\n      const divTitle = this.sums === null ||\n      typeof this.sums.title === 'undefined' ||\n      this.sums.title === '' ? this.cluster.getClusterer().getTitle() :  this.sums.title\n\n      // NOTE: values must be specified in px units\n      const bp = this.backgroundPosition.split(' ')\n\n      const spriteH = parseInt(bp[0]?.replace(/^\\s+|\\s+$/g, '') || '0', 10)\n      const spriteV = parseInt(bp[1]?.replace(/^\\s+|\\s+$/g, '') || '0', 10)\n\n      const pos = this.getPosFromLatLng(this.center)\n\n      this.div.className = this.className\n      this.div .setAttribute('style', `cursor: pointer; position: absolute; top: ${pos !== null ? `${pos.y}px` : '0'}; left: ${pos !== null ? `${pos.x}px` : '0'}; width: ${this.width}px; height: ${this.height}px; `)\n\n      const img = document.createElement('img')\n\n      img.alt = divTitle\n      img.src = this.url\n      img.width = this.width\n      img.height = this.height\n      img.setAttribute('style', `position: absolute; top: ${spriteV}px; left: ${spriteH}px`)\n\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img.style.clip = `rect(-${spriteV}px, -${spriteH + this.width}px, -${\n          spriteV + this.height\n        }, -${spriteH})`\n      }\n\n      const textElm = document.createElement('div')\n\n      textElm .setAttribute('style', `position: absolute; top: ${this.anchorText[0]}px; left: ${this.anchorText[1]}px; color: ${this.textColor}; font-size: ${this.textSize}px; font-family: ${this.fontFamily}; font-weight: ${this.fontWeight}; fontStyle: ${this.fontStyle}; text-decoration: ${this.textDecoration}; text-align: center; width: ${this.width}px; line-height: ${this.height}px`)\n\n      if (this.sums?.text) textElm.innerText = `${this.sums?.text}`\n      if (this.sums?.html) textElm.innerHTML = `${this.sums?.html}`\n\n      this.div.innerHTML = ''\n\n      this.div.appendChild(img)\n      this.div.appendChild(textElm)\n\n      this.div.title = divTitle\n\n      this.div.style.display = ''\n    }\n\n    this.visible = true\n  }\n\n  useStyle(sums: ClusterIconInfo) {\n    this.sums = sums\n\n    const styles = this.cluster.getClusterer().getStyles()\n\n    const style =\n      styles[Math.min(styles.length - 1, Math.max(0, sums.index - 1))]\n\n    if (style) {\n      this.url = style.url\n      this.height = style.height\n      this.width = style.width\n\n      if (style.className) {\n        this.className = `${this.clusterClassName} ${style.className}`\n      }\n\n      this.anchorText = style.anchorText || [0, 0]\n      this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\n\n      this.textColor = style.textColor || 'black'\n\n      this.textSize = style.textSize || 11\n\n      this.textDecoration = style.textDecoration || 'none'\n\n      this.fontWeight = style.fontWeight || 'bold'\n\n      this.fontStyle = style.fontStyle || 'normal'\n\n      this.fontFamily = style.fontFamily || 'Arial,sans-serif'\n\n      this.backgroundPosition = style.backgroundPosition || '0 0'\n    }\n  }\n\n  setCenter(center: google.maps.LatLng) {\n    this.center = center\n  }\n\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point | null {\n    const pos = (this as unknown as google.maps.OverlayView).getProjection().fromLatLngToDivPixel(latlng)\n\n    if (pos !== null) {\n      pos.x -= this.anchorIcon[1]\n\n      pos.y -= this.anchorIcon[0]\n    }\n\n    return pos\n  }\n}\n","/* global google */\n\nimport type { Clusterer } from './Clusterer'\n\nimport { ClusterIcon } from './ClusterIcon'\n\nimport type { MarkerExtended } from './types'\n\nexport class Cluster {\n  markerClusterer: Clusterer\n  map: google.maps.Map | google.maps.StreetViewPanorama | null\n  gridSize: number\n  minClusterSize: number\n  averageCenter: boolean\n  markers: MarkerExtended[]\n  center: google.maps.LatLng | undefined\n  bounds: google.maps.LatLngBounds | null\n  clusterIcon: ClusterIcon\n\n  constructor(markerClusterer: Clusterer) {\n    this.markerClusterer = markerClusterer\n\n    this.map = (this.markerClusterer as unknown as google.maps.OverlayView).getMap()\n\n    this.gridSize = this.markerClusterer.getGridSize()\n\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\n\n    this.averageCenter = this.markerClusterer.getAverageCenter()\n\n    this.markers = []\n\n    this.center = undefined\n\n    this.bounds = null\n\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\n\n    this.getSize = this.getSize.bind(this)\n    this.getMarkers = this.getMarkers.bind(this)\n    this.getCenter = this.getCenter.bind(this)\n    this.getMap = this.getMap.bind(this)\n    this.getClusterer = this.getClusterer.bind(this)\n    this.getBounds = this.getBounds.bind(this)\n    this.remove = this.remove.bind(this)\n    this.addMarker = this.addMarker.bind(this)\n    this.isMarkerInClusterBounds = this.isMarkerInClusterBounds.bind(this)\n    this.calculateBounds = this.calculateBounds.bind(this)\n    this.updateIcon = this.updateIcon.bind(this)\n    this.isMarkerAlreadyAdded = this.isMarkerAlreadyAdded.bind(this)\n  }\n\n  getSize(): number {\n    return this.markers.length\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getCenter(): google.maps.LatLng | undefined {\n    return this.center\n  }\n\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama | null {\n    return this.map\n  }\n\n  getClusterer(): Clusterer {\n    return this.markerClusterer\n  }\n\n  getBounds(): google.maps.LatLngBounds {\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\n\n    const markers = this.getMarkers()\n\n    for (const marker of markers) {\n      const position = marker.getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    return bounds\n  }\n\n  remove() {\n    (this.clusterIcon as unknown as google.maps.OverlayView).setMap(null)\n\n    this.markers = []\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    delete this.markers\n  }\n\n  addMarker(marker: MarkerExtended): boolean {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false\n    }\n\n    if (!this.center) {\n      const position = marker.getPosition()\n\n      if (position) {\n        this.center = position\n\n        this.calculateBounds()\n      }\n    } else {\n      if (this.averageCenter) {\n        const position = marker.getPosition()\n\n        if (position) {\n          const length = this.markers.length + 1\n\n          this.center = new google.maps.LatLng(\n            (this.center.lat() * (length - 1) + position.lat()) / length,\n            (this.center.lng() * (length - 1) + position.lng()) / length\n          )\n\n          this.calculateBounds()\n        }\n      }\n    }\n\n    marker.isAdded = true\n\n    this.markers.push(marker)\n\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    const zoom = this.map?.getZoom()\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (const markerElement of this.markers) {\n        markerElement.setMap(null)\n      }\n    } else {\n      marker.setMap(null)\n    }\n\n    return true\n  }\n\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\n    if (this.bounds !== null) {\n      const position = marker.getPosition()\n\n      if (position) {\n        return this.bounds.contains(position)\n      }\n    }\n\n    return false\n  }\n\n  calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(\n      new google.maps.LatLngBounds(this.center, this.center)\n    )\n  }\n\n  updateIcon() {\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    const zoom = this.map?.getZoom()\n\n    if (maxZoom !== null && typeof zoom !== 'undefined' && zoom > maxZoom) {\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center)\n    }\n\n    this.clusterIcon.useStyle(\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\n    )\n\n    this.clusterIcon.show()\n  }\n\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\n    if (this.markers.includes) {\n      return this.markers.includes(marker)\n    }\n\n    for (let i = 0; i < this.markers.length; i++) {\n      if (marker === this.markers[i]) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\nimport type { ClusterIcon } from './ClusterIcon'\n\nimport type {\n  MarkerExtended,\n  ClustererOptions,\n  ClusterIconStyle,\n  TCalculator,\n  ClusterIconInfo,\n} from './types'\n\n/**\n * Supports up to 9007199254740991 (Number.MAX_SAFE_INTEGER) markers\n * which is not a problem as max array length is 4294967296 (2**32)\n */\nfunction CALCULATOR(\n  markers: MarkerExtended[],\n  numStyles: number\n): ClusterIconInfo {\n  const count = markers.length\n\n  const numberOfDigits = count.toString().length\n\n  const index = Math.min(numberOfDigits, numStyles)\n\n  return {\n    text: count.toString(),\n    index,\n    title: '',\n  }\n}\n\nconst BATCH_SIZE = 2000\n\nconst BATCH_SIZE_IE = 500\n\nconst IMAGE_PATH =\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n\nconst IMAGE_EXTENSION = 'png'\n\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\n\nconst CLUSTERER_CLASS = 'cluster'\n\nexport class Clusterer implements google.maps.OverlayView {\n  markers: MarkerExtended[]\n  clusters: Cluster[]\n  listeners: google.maps.MapsEventListener[]\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\n  ready: boolean\n  gridSize: number\n  minClusterSize: number\n  maxZoom: number | null\n  styles: ClusterIconStyle[]\n  title: string\n  zoomOnClick: boolean\n  averageCenter: boolean\n  ignoreHidden: boolean\n  enableRetinaIcons: boolean\n  imagePath: string\n  imageExtension: string\n  imageSizes: number[]\n  calculator: TCalculator\n  batchSize: number\n  batchSizeIE: number\n  clusterClass: string\n  timerRefStatic: number | null\n\n  constructor(\n    map: google.maps.Map,\n    optMarkers: MarkerExtended[] = [],\n    optOptions: ClustererOptions = {}\n  ) {\n    this.getMinimumClusterSize = this.getMinimumClusterSize.bind(this)\n    this.setMinimumClusterSize = this.setMinimumClusterSize.bind(this)\n    this.getEnableRetinaIcons = this.getEnableRetinaIcons.bind(this)\n    this.setEnableRetinaIcons = this.setEnableRetinaIcons.bind(this)\n    this.addToClosestCluster = this.addToClosestCluster.bind(this)\n    this.getImageExtension = this.getImageExtension.bind(this)\n    this.setImageExtension = this.setImageExtension.bind(this)\n    this.getExtendedBounds = this.getExtendedBounds.bind(this)\n    this.getAverageCenter = this.getAverageCenter.bind(this)\n    this.setAverageCenter = this.setAverageCenter.bind(this)\n    this.getTotalClusters = this.getTotalClusters.bind(this)\n    this.fitMapToMarkers = this.fitMapToMarkers.bind(this)\n    this.getIgnoreHidden = this.getIgnoreHidden.bind(this)\n    this.setIgnoreHidden = this.setIgnoreHidden.bind(this)\n    this.getClusterClass = this.getClusterClass.bind(this)\n    this.setClusterClass = this.setClusterClass.bind(this)\n    this.getTotalMarkers = this.getTotalMarkers.bind(this)\n    this.getZoomOnClick = this.getZoomOnClick.bind(this)\n    this.setZoomOnClick = this.setZoomOnClick.bind(this)\n    this.getBatchSizeIE = this.getBatchSizeIE.bind(this)\n    this.setBatchSizeIE = this.setBatchSizeIE.bind(this)\n    this.createClusters = this.createClusters.bind(this)\n    this.onZoomChanged = this.onZoomChanged.bind(this)\n    this.getImageSizes = this.getImageSizes.bind(this)\n    this.setImageSizes = this.setImageSizes.bind(this)\n    this.getCalculator = this.getCalculator.bind(this)\n    this.setCalculator = this.setCalculator.bind(this)\n    this.removeMarkers = this.removeMarkers.bind(this)\n    this.resetViewport = this.resetViewport.bind(this)\n    this.getImagePath = this.getImagePath.bind(this)\n    this.setImagePath = this.setImagePath.bind(this)\n    this.pushMarkerTo = this.pushMarkerTo.bind(this)\n    this.removeMarker = this.removeMarker.bind(this)\n    this.clearMarkers = this.clearMarkers.bind(this)\n    this.setupStyles = this.setupStyles.bind(this)\n    this.getGridSize = this.getGridSize.bind(this)\n    this.setGridSize = this.setGridSize.bind(this)\n    this.getClusters = this.getClusters.bind(this)\n    this.getMaxZoom = this.getMaxZoom.bind(this)\n    this.setMaxZoom = this.setMaxZoom.bind(this)\n    this.getMarkers = this.getMarkers.bind(this)\n    this.addMarkers = this.addMarkers.bind(this)\n    this.getStyles = this.getStyles.bind(this)\n    this.setStyles = this.setStyles.bind(this)\n    this.addMarker = this.addMarker.bind(this)\n    this.onRemove = this.onRemove.bind(this)\n    this.getTitle = this.getTitle.bind(this)\n    this.setTitle = this.setTitle.bind(this)\n    this.repaint = this.repaint.bind(this)\n    this.onIdle = this.onIdle.bind(this)\n    this.redraw = this.redraw.bind(this)\n    this.onAdd = this.onAdd.bind(this)\n    this.draw = this.draw.bind(this)\n\n    this.extend = this.extend.bind(this)\n    this.extend(Clusterer, google.maps.OverlayView)\n\n    this.markers = []\n    this.clusters = []\n    this.listeners = []\n    this.activeMap = null\n    this.ready = false\n    this.gridSize = optOptions.gridSize || 60\n    this.minClusterSize = optOptions.minimumClusterSize || 2\n    this.maxZoom = optOptions.maxZoom || null\n    this.styles = optOptions.styles || []\n\n    this.title = optOptions.title || ''\n\n    this.zoomOnClick = true\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick\n    }\n\n    this.averageCenter = false\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter\n    }\n\n    this.ignoreHidden = false\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden\n    }\n\n    this.enableRetinaIcons = false\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\n\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\n\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\n\n    this.calculator = optOptions.calculator || CALCULATOR\n\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\n\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\n\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE\n    }\n\n    this.timerRefStatic = null\n\n    this.setupStyles()\n\n    this.addMarkers(optMarkers, true);\n\n    (this as unknown as google.maps.OverlayView).setMap(map) // Note: this causes onAdd to be called\n  }\n\n  onZoomChanged(): void {\n    this.resetViewport(false)\n\n    // Workaround for this Google bug: when map is at level 0 and \"-\" of\n    // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n    // the map doesn't zoom out any further. In this situation, no \"idle\"\n    // event is triggered so the cluster markers that have been removed\n    // do not get redrawn. Same goes for a zoom in at maxZoom.\n    if (\n      (this as unknown as google.maps.OverlayView).getMap()?.getZoom() === ((this as unknown as google.maps.OverlayView).get('minZoom') || 0) ||\n      (this as unknown as google.maps.OverlayView).getMap()?.getZoom() === (this as unknown as google.maps.OverlayView).get('maxZoom')\n    ) {\n      google.maps.event.trigger(this, 'idle')\n    }\n  }\n\n  onIdle(): void {\n    this.redraw()\n  }\n\n  onAdd(): void {\n    const map = (this as unknown as google.maps.OverlayView).getMap()\n\n    this.activeMap = map\n\n    this.ready = true\n\n    this.repaint()\n\n    if (map !== null) {\n      // Add the map event listeners\n      this.listeners = [\n        google.maps.event.addListener(\n          map,\n          'zoom_changed',\n          this.onZoomChanged\n        ),\n        google.maps.event.addListener(\n          map,\n          'idle',\n          this.onIdle\n        ),\n      ]\n    }\n  }\n\n  onRemove(): void {\n    // Put all the managed markers back on the map:\n    for (const marker of this.markers) {\n      if (marker.getMap() !== this.activeMap) {\n        marker.setMap(this.activeMap)\n      }\n    }\n\n    // Remove all clusters:\n    for (const cluster of this.clusters) {\n      cluster.remove()\n    }\n\n    this.clusters = []\n\n    // Remove map event listeners:\n    for (const listener of this.listeners) {\n      google.maps.event.removeListener(listener)\n    }\n\n    this.listeners = []\n\n    this.activeMap = null\n\n    this.ready = false\n  }\n\n  draw(): void { return }\n\n  getMap(): null { return null }\n\n  getPanes(): null { return null }\n\n  getProjection()  {\n    return {\n      fromContainerPixelToLatLng(): null { return null },\n      fromDivPixelToLatLng(): null { return null},\n      fromLatLngToContainerPixel(): null { return null},\n      fromLatLngToDivPixel(): null { return null},\n      getVisibleRegion(): null { return null },\n      getWorldWidth(): number { return 0 }\n    }\n  }\n\n  setMap(): void { return }\n\n  addListener() {\n    return {\n      remove() { return }\n    }\n  }\n\n  bindTo(): void { return }\n\n  get(): void { return }\n\n  notify(): void { return }\n\n  set(): void { return }\n  setValues(): void { return }\n  unbind(): void { return }\n  unbindAll(): void { return }\n\n  setupStyles(): void {\n    if (this.styles.length > 0) {\n      return\n    }\n\n    for (let i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: `${this.imagePath + (i + 1)}.${this.imageExtension}`,\n        height: this.imageSizes[i] || 0,\n        width: this.imageSizes[i] || 0,\n      })\n    }\n  }\n\n  fitMapToMarkers(): void {\n    const markers = this.getMarkers()\n\n    const bounds = new google.maps.LatLngBounds()\n\n    for (const marker of markers) {\n      const position = marker.getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    const map = (this as unknown as google.maps.OverlayView).getMap()\n\n    if (map !== null && 'fitBounds' in map) {\n      map.fitBounds(bounds)\n    }\n\n  }\n\n  getGridSize(): number {\n    return this.gridSize\n  }\n\n  setGridSize(gridSize: number) {\n    this.gridSize = gridSize\n  }\n\n  getMinimumClusterSize(): number {\n    return this.minClusterSize\n  }\n\n  setMinimumClusterSize(minimumClusterSize: number) {\n    this.minClusterSize = minimumClusterSize\n  }\n\n  getMaxZoom(): number | null {\n    return this.maxZoom\n  }\n\n  setMaxZoom(maxZoom: number) {\n    this.maxZoom = maxZoom\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    return this.styles\n  }\n\n  setStyles(styles: ClusterIconStyle[]) {\n    this.styles = styles\n  }\n\n  getTitle(): string {\n    return this.title\n  }\n\n  setTitle(title: string) {\n    this.title = title\n  }\n\n  getZoomOnClick(): boolean {\n    return this.zoomOnClick\n  }\n\n  setZoomOnClick(zoomOnClick: boolean) {\n    this.zoomOnClick = zoomOnClick\n  }\n\n  getAverageCenter(): boolean {\n    return this.averageCenter\n  }\n\n  setAverageCenter(averageCenter: boolean) {\n    this.averageCenter = averageCenter\n  }\n\n  getIgnoreHidden(): boolean {\n    return this.ignoreHidden\n  }\n\n  setIgnoreHidden(ignoreHidden: boolean) {\n    this.ignoreHidden = ignoreHidden\n  }\n\n  getEnableRetinaIcons(): boolean {\n    return this.enableRetinaIcons\n  }\n\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\n    this.enableRetinaIcons = enableRetinaIcons\n  }\n\n  getImageExtension(): string {\n    return this.imageExtension\n  }\n\n  setImageExtension(imageExtension: string) {\n    this.imageExtension = imageExtension\n  }\n\n  getImagePath(): string {\n    return this.imagePath\n  }\n\n  setImagePath(imagePath: string) {\n    this.imagePath = imagePath\n  }\n\n  getImageSizes(): number[] {\n    return this.imageSizes\n  }\n\n  setImageSizes(imageSizes: number[]) {\n    this.imageSizes = imageSizes\n  }\n\n  getCalculator(): TCalculator {\n    return this.calculator\n  }\n\n  setCalculator(calculator: TCalculator) {\n    this.calculator = calculator\n  }\n\n  getBatchSizeIE(): number {\n    return this.batchSizeIE\n  }\n\n  setBatchSizeIE(batchSizeIE: number) {\n    this.batchSizeIE = batchSizeIE\n  }\n\n  getClusterClass(): string {\n    return this.clusterClass\n  }\n\n  setClusterClass(clusterClass: string) {\n    this.clusterClass = clusterClass\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getTotalMarkers(): number {\n    return this.markers.length\n  }\n\n  getClusters(): Cluster[] {\n    return this.clusters\n  }\n\n  getTotalClusters(): number {\n    return this.clusters.length\n  }\n\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\n    this.pushMarkerTo(marker)\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\n    for (const key in markers) {\n      if (Object.prototype.hasOwnProperty.call(markers, key)) {\n        const marker = markers[key]\n\n        if (marker) {\n          this.pushMarkerTo(marker)\n        }\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  pushMarkerTo(marker: MarkerExtended) {\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      google.maps.event.addListener(marker, 'dragend', () => {\n        if (this.ready) {\n          marker.isAdded = false\n\n          this.repaint()\n        }\n      })\n    }\n\n    marker.isAdded = false\n\n    this.markers.push(marker)\n  }\n\n  removeMarker_(marker: MarkerExtended): boolean {\n    let index = -1\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i\n\n          break\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false\n    }\n\n    marker.setMap(null)\n\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\n\n    return true\n  }\n\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\n    const removed = this.removeMarker_(marker)\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\n    let removed = false\n\n    for (const marker of markers) {\n      removed = removed || this.removeMarker_(marker)\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  clearMarkers() {\n    this.resetViewport(true)\n\n    this.markers = []\n  }\n\n  repaint() {\n    const oldClusters = this.clusters.slice()\n\n    this.clusters = []\n\n    this.resetViewport(false)\n\n    this.redraw()\n\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(function timeout() {\n      for (const oldCluster of oldClusters) {\n        oldCluster.remove()\n      }\n    }, 0)\n  }\n\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\n    const projection = (this as unknown as google.maps.OverlayView).getProjection()\n\n    // Convert the points to pixels and the extend out by the grid size.\n    const trPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\n    )\n\n    if (trPix !== null) {\n      trPix.x += this.gridSize\n      trPix.y -= this.gridSize\n    }\n\n    const blPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\n    )\n\n    if (blPix !== null) {\n      blPix.x -= this.gridSize\n      blPix.y += this.gridSize\n    }\n\n\n    // Extend the bounds to contain the new bounds.\n    if (trPix !== null) {\n      // Convert the pixel points back to LatLng nw\n      const point1 = projection.fromDivPixelToLatLng(trPix)\n\n      if (point1 !== null) {\n        bounds.extend(point1)\n      }\n    }\n\n    if (blPix !== null) {\n      // Convert the pixel points back to LatLng sw\n      const point2 =  projection.fromDivPixelToLatLng(blPix)\n\n      if (point2 !== null) {\n        bounds.extend(\n          point2\n        )\n      }\n    }\n\n\n    return bounds\n  }\n\n  redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0)\n  }\n\n  resetViewport(optHide: boolean) {\n    // Remove all the clusters\n    for (const cluster of this.clusters) {\n      cluster.remove()\n    }\n\n    this.clusters = []\n\n    // Reset the markers to not be added and to be removed from the map.\n    for (const marker of this.markers) {\n      marker.isAdded = false\n\n      if (optHide) {\n        marker.setMap(null)\n      }\n    }\n  }\n\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\n    const R = 6371 // Radius of the Earth in km\n\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((p1.lat() * Math.PI) / 180) *\n        Math.cos((p2.lat() * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2)\n\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n  }\n\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\n    const position = marker.getPosition()\n\n    if (position) {\n      return bounds.contains(position)\n    }\n\n    return false\n  }\n\n  addToClosestCluster(marker: MarkerExtended) {\n    let cluster\n\n    let distance = 40000 // Some large number\n\n    let clusterToAddTo = null\n\n    for (const clusterElement of this.clusters) {\n      cluster = clusterElement\n\n      const center = cluster.getCenter()\n\n      const position = marker.getPosition()\n\n      if (center && position) {\n        const d = this.distanceBetweenPoints(center, position)\n\n        if (d < distance) {\n          distance = d\n\n          clusterToAddTo = cluster\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker)\n    } else {\n      cluster = new Cluster(this)\n\n      cluster.addMarker(marker)\n\n      this.clusters.push(cluster)\n    }\n  }\n\n  createClusters(iFirst: number) {\n    if (!this.ready) {\n      return\n    }\n\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this)\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic)\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        delete this.timerRefStatic\n      }\n    }\n\n    const map = (this as unknown as google.maps.OverlayView).getMap()\n\n    const bounds = map !== null && 'getBounds' in map ? map.getBounds() : null\n\n    const zoom =  map?.getZoom() || 0\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    const mapBounds = zoom > 3\n        ? new google.maps.LatLngBounds(\n            bounds?.getSouthWest(),\n            bounds?.getNorthEast()\n          )\n        : new google.maps.LatLngBounds(\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\n          )\n\n    const extendedMapBounds = this.getExtendedBounds(mapBounds)\n\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\n\n    for (let i = iFirst; i < iLast; i++) {\n      const marker = this.markers[i]\n\n      if (marker && !marker.isAdded && this.isMarkerInBounds(marker, extendedMapBounds) && (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible()))) {\n        this.addToClosestCluster(marker)\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n        () => {\n          this.createClusters(iLast)\n        },\n        0\n      )\n    } else {\n      this.timerRefStatic = null\n\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringend', this)\n\n      for (const cluster of this.clusters) {\n        cluster.updateIcon()\n      }\n    }\n  }\n\n  extend<A extends typeof Clusterer | typeof ClusterIcon>(obj1: A, obj2: typeof google.maps.OverlayView): A {\n    return function applyExtend(this: A, object: typeof google.maps.OverlayView): A {\n      for (const property in object.prototype) {\n\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const prop = property as keyof google.maps.OverlayView & (string & {})\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.prototype[prop] = object.prototype[prop]\n      }\n\n      return this\n    }.apply<A, [typeof google.maps.OverlayView], A>(obj1, [obj2])\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}