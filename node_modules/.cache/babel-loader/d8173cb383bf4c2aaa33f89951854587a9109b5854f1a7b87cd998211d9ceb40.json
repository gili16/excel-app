{"ast":null,"code":"import axios from '../utils/axios.util';\nimport originalAxios from 'axios';\nexport const getUsers = async () => {\n  const response = await fetch('https://localhost:7090/api/User');\n  console.log(response);\n  // לקריאת get & delete אין body\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\n  const users = await response.json();\n  return users;\n};\nexport const getUserByToken = async token => {\n  const myHeaders = new Headers();\n  myHeaders.append(\"\", \"\");\n  myHeaders.append(\"Authorization\", `Bearer ${token}`);\n  const raw = \"\";\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    body: raw\n    // redirect: \"follow\"\n  };\n  fetch(\"https://localhost:7090/api/User/UserByToken\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.error(error));\n  //     console.log(response.status);\n  // // console.log(await response.text());\n  //     console.log(response)\n  // לקריאת get & delete אין body\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\n  // const users = await response.json()\n\n  // return response\n};\nexport const getUser = async id => {\n  const response = await fetch(`https://localhost:7090/api/User/${id}`);\n  // לקריאת get & delete אין body\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\n  const user = await response.json();\n  return user;\n};\nexport const addUser = async user => {\n  // console.log(user)\n  const response = await axios.post('/User', user, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  const newUser = response.data;\n  return newUser;\n};\nexport const updateUser = async user => {\n  const response = await axios.put(`/User/${user.id}`, user);\n  const updatedUser = response.data;\n  return updatedUser;\n};\nexport const deleteUser = async id => {\n  const response = await axios.delete(`/User/${id}`);\n  return response;\n};\nexport const Login = async mail => {\n  const response = await originalAxios.post(`https://localhost:7090/Login/${mail}`);\n  return response;\n};\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","originalAxios","getUsers","response","fetch","console","log","users","json","getUserByToken","token","myHeaders","Headers","append","raw","requestOptions","method","headers","body","then","text","result","catch","error","getUser","id","user","addUser","post","newUser","data","updateUser","put","updatedUser","deleteUser","delete","Login","mail","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/services/user.tsx"],"sourcesContent":["import axios from '../utils/axios.util'\r\nimport { User} from \"../types/user.types\"\r\nimport originalAxios from 'axios'\r\n\r\nexport const getUsers = async () => {\r\n    const response = await fetch('https://localhost:7090/api/User')\r\n    console.log(response)\r\n    // לקריאת get & delete אין body\r\n    // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\r\n    const users = await response.json()\r\n    \r\n    return users\r\n}\r\nexport const getUserByToken = async (token:string) => {\r\n    \r\n    const myHeaders = new Headers();\r\n        myHeaders.append(\"\", \"\");\r\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\r\n\r\n        const raw = \"\";\r\n\r\n        const requestOptions = {\r\n        method: \"GET\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        // redirect: \"follow\"\r\n        };\r\n\r\n        fetch(\"https://localhost:7090/api/User/UserByToken\", requestOptions)\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.error(error));\r\n        //     console.log(response.status);\r\n        // // console.log(await response.text());\r\n        //     console.log(response)\r\n            // לקריאת get & delete אין body\r\n    // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\r\n    // const users = await response.json()\r\n    \r\n    // return response\r\n}\r\n\r\nexport const getUser = async (id:number) => {\r\n    \r\n    const response = await fetch(`https://localhost:7090/api/User/${id}`)\r\n    // לקריאת get & delete אין body\r\n    // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\r\n    const user = await response.json()\r\n    \r\n    return user\r\n}\r\n\r\nexport const addUser= async (user:FormData) => {\r\n    // console.log(user)\r\n    const response = await axios.post('/User', user, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n    const newUser = response.data\r\n    return newUser\r\n}\r\n\r\nexport const updateUser = async (user: User) => {\r\n    const response = await axios.put(`/User/${user.id}`, user)\r\n    const updatedUser = response.data\r\n    return updatedUser\r\n}\r\n\r\nexport const deleteUser = async (id: number) => {\r\n    const response = await axios.delete(`/User/${id}`)\r\n    return response\r\n}\r\n\r\nexport const Login = async (mail:string) => {\r\n    const response = await originalAxios.post(`https://localhost:7090/Login/${mail}`)\r\n    return response\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,qBAAqB;AAEvC,OAAOC,aAAa,MAAM,OAAO;AAEjC,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAC/DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB;EACA;EACA,MAAMI,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAEnC,OAAOD,KAAK;AAChB,CAAC;AACD,OAAO,MAAME,cAAc,GAAG,MAAOC,KAAY,IAAK;EAElD,MAAMC,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC3BD,SAAS,CAACE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;EACxBF,SAAS,CAACE,MAAM,CAAC,eAAe,EAAG,UAASH,KAAM,EAAC,CAAC;EAEpD,MAAMI,GAAG,GAAG,EAAE;EAEd,MAAMC,cAAc,GAAG;IACvBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAEN,SAAS;IAClBO,IAAI,EAAEJ;IACN;EACA,CAAC;EAEDV,KAAK,CAAC,6CAA6C,EAAEW,cAAc,CAAC,CACnEI,IAAI,CAAEhB,QAAQ,IAAKA,QAAQ,CAACiB,IAAI,CAAC,CAAC,CAAC,CACnCD,IAAI,CAAEE,MAAM,IAAKhB,OAAO,CAACC,GAAG,CAACe,MAAM,CAAC,CAAC,CACrCC,KAAK,CAAEC,KAAK,IAAKlB,OAAO,CAACkB,KAAK,CAACA,KAAK,CAAC,CAAC;EACvC;EACA;EACA;EACI;EACR;EACA;;EAEA;AACJ,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,EAAS,IAAK;EAExC,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCqB,EAAG,EAAC,CAAC;EACrE;EACA;EACA,MAAMC,IAAI,GAAG,MAAMvB,QAAQ,CAACK,IAAI,CAAC,CAAC;EAElC,OAAOkB,IAAI;AACf,CAAC;AAED,OAAO,MAAMC,OAAO,GAAE,MAAOD,IAAa,IAAK;EAC3C;EACA,MAAMvB,QAAQ,GAAG,MAAMH,KAAK,CAAC4B,IAAI,CAAC,OAAO,EAAEF,IAAI,EAAE;IAC7CT,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACJ,MAAMY,OAAO,GAAG1B,QAAQ,CAAC2B,IAAI;EAC7B,OAAOD,OAAO;AAClB,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOL,IAAU,IAAK;EAC5C,MAAMvB,QAAQ,GAAG,MAAMH,KAAK,CAACgC,GAAG,CAAE,SAAQN,IAAI,CAACD,EAAG,EAAC,EAAEC,IAAI,CAAC;EAC1D,MAAMO,WAAW,GAAG9B,QAAQ,CAAC2B,IAAI;EACjC,OAAOG,WAAW;AACtB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOT,EAAU,IAAK;EAC5C,MAAMtB,QAAQ,GAAG,MAAMH,KAAK,CAACmC,MAAM,CAAE,SAAQV,EAAG,EAAC,CAAC;EAClD,OAAOtB,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMiC,KAAK,GAAG,MAAOC,IAAW,IAAK;EACxC,MAAMlC,QAAQ,GAAG,MAAMF,aAAa,CAAC2B,IAAI,CAAE,gCAA+BS,IAAK,EAAC,CAAC;EACjF,OAAOlC,QAAQ;AACnB,CAAC;AAAAmC,EAAA,GAHYF,KAAK;AAAA,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}