{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\sections\\\\UpdateTrack.tsx\",\n  _s = $RefreshSig$();\nimport { Autocomplete, Avatar, Box, Button, FormControl, FormControlLabel, Grid, RadioGroup, Slider, TextField } from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport { useEffect, useState } from \"react\";\nimport Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Map from \"../components/Map\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLevel } from \"../redux/level/level.selector\";\nimport { selectDayPart } from \"../redux/dayPart/dayPart.selector\";\nimport { selectCompany } from \"../redux/company/company.selector\";\nimport { selectView } from \"../redux/view/view.selector\";\nimport { getDayPartyById, getCompanyByDescription, getCompanyById, getDayPartByDescription, getLevelByDescription, getLevelById, getViewByDescription, getViewById } from \"../services/Mapper\";\nimport { selectTrack } from \"../redux/track/track.selector\";\nimport { updateTrack as updateTrackApi } from \"../services/track\";\nimport { updateTrack as updateTrackSlice } from \"../redux/track/track.slice\";\nimport { getUserByToken } from \"../services/user\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addStop, deleteStop } from \"../services/stop\";\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport { k as apikey } from '../utils/projectdata';\nimport getAddressByCoordinates from \"../services/GoogleMaps.services\";\nimport { useJsApiLoader } from \"@react-google-maps/api\";\nimport { isValidStopToAdd, isValidTrackToUpdate } from \"../utils/validation.utils\";\nimport { useAppSelector } from \"../redux/store\";\nimport { selectUser } from \"../redux/user/user.selector\";\nimport BasicModal from \"../components/Modal.component\";\nimport { isValidToken } from \"../auth/auth.utils\";\nimport { stringToBlob } from \"../utils/stringToBlob.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst marks = [{\n  value: 24,\n  label: '1 day'\n}, {\n  value: 48,\n  label: '2 days'\n}, {\n  value: 72,\n  label: '3 days'\n}, {\n  value: 96,\n  label: '4 days'\n}];\nexport default function UpdateTrack() {\n  _s();\n  const params = useParams();\n  const data = useLoaderData();\n  const [geocoder, setGeocoder] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: apikey,\n    language: 'he'\n  });\n  const [isAnitialized, setIsAnitialized] = useState(false);\n  const [image, setImage] = useState();\n  const [imageToShow, setImageToShow] = useState(\"\");\n  const [selectedValue, setSelectedValue] = useState('start');\n  const token = localStorage.getItem('user');\n  const [addressStart, setAddressStart] = useState(\"\");\n  const [addressEnd, setAddressEnd] = useState(\"\");\n  const [addressStop, setAddressStop] = useState([]);\n  const [isAddingAddress, setIsAddingAddress] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [level, setLevel] = useState(\"\");\n  const [dayPart, setDayPart] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [view, setView] = useState(\"\");\n  const [stops, setStops] = useState([]);\n  const levels = useSelector(selectLevel);\n  const dayParts = useSelector(selectDayPart);\n  const companies = useSelector(selectCompany);\n  const views = useSelector(selectView);\n  const tracks = useSelector(selectTrack);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [originalStops, SetOriginalStops] = useState([]);\n  const [track, setTrack] = useState(data);\n  const user = useAppSelector(selectUser).user;\n  useEffect(() => {\n    const token = localStorage.getItem('user');\n    if (token === undefined || token === null || token === \"\" || user === null || user === undefined || user.id === 0) {\n      alert(\"please login\");\n      localStorage.clear();\n      navigate('/');\n    }\n  }, []);\n  useEffect(() => {\n    if (isLoaded) {\n      setGeocoder(new window.google.maps.Geocoder());\n    }\n  }, [isLoaded]);\n  useEffect(() => {\n    if (data) {\n      console.log(\"in data\");\n      console.log({\n        id: data.id,\n        companyForTripId: data.companyForTripId,\n        pictureForm: data.pictureForm,\n        viewId: data.viewId,\n        dayPartId: data.dayPartId,\n        levelId: data.levelId,\n        created: data.created,\n        title: data.title,\n        description: data.description,\n        startX: data.startX,\n        startY: data.startY,\n        stops: data.stops,\n        comments: data.comments,\n        endX: data.endX,\n        endY: data.endY,\n        length: data.length,\n        favourites: data.favourites,\n        userId: data.userId,\n        picture: data.picture\n      });\n      setTrack({\n        id: data.id,\n        companyForTripId: data.companyForTripId,\n        pictureForm: data.pictureForm,\n        viewId: data.viewId,\n        dayPartId: data.dayPartId,\n        levelId: data.levelId,\n        created: data.created,\n        title: data.title,\n        description: data.description,\n        startX: data.startX,\n        startY: data.startY,\n        stops: data.stops,\n        comments: data.comments,\n        endX: data.endX,\n        endY: data.endY,\n        length: data.length,\n        favourites: data.favourites,\n        userId: data.userId,\n        picture: data.picture\n      });\n    }\n  }, [data]);\n  useEffect(() => {\n    console.log(track);\n    console.log(isAnitialized);\n    console.log(geocoder);\n    if (!isAnitialized && geocoder && track) {\n      Initialize();\n    } else {}\n  }, [geocoder, track]);\n  async function Initialize() {\n    if (track) {\n      let start = \"\";\n      let end = \"\";\n      let tempStops = [];\n      let tempStopAddresses = [];\n      try {\n        start = await getAddressByCoordinates(geocoder, {\n          lat: data.startX,\n          lng: data.startY\n        });\n        console.log(start);\n      } catch {\n        start = \"start position\";\n      }\n      try {\n        end = await getAddressByCoordinates(geocoder, {\n          lat: data.endX,\n          lng: data.endY\n        });\n      } catch {}\n      data.stops.map(async value => {\n        try {\n          let tempAddress = await getAddressByCoordinates(geocoder, {\n            lat: value.x,\n            lng: value.y\n          });\n          tempStopAddresses.push(tempAddress);\n          let tempStop = {\n            trackId: track.id,\n            x: value.x,\n            y: value.y\n          };\n          tempStops.push(tempStop);\n          SetOriginalStops([...data.stops]);\n        } catch {}\n      });\n      try {\n        if (data) {\n          const blob = stringToBlob(data.pictureData, null, null);\n          const url = URL.createObjectURL(blob);\n          setImageToShow(url);\n          setImage(blob);\n          setTrack({\n            ...track,\n            ['picture']: url,\n            ['pictureForm']: blob\n          });\n        } else {\n          console.error('Failed to fetch picture');\n        }\n      } catch (error) {\n        console.error('Error fetching picture:', error);\n      }\n      setCompany(getCompanyById(data.companyForTripId));\n      setDayPart(getDayPartyById(data.dayPartId));\n      setLevel(getLevelById(data.levelId));\n      setView(getViewById(data.viewId));\n      setAddressStart(start);\n      setAddressEnd(end);\n      setStops(tempStops);\n      setAddressStop(tempStopAddresses);\n      setIsAnitialized(true);\n      setTrack({\n        id: data.id,\n        companyForTripId: data.companyForTripId,\n        viewId: data.viewId,\n        dayPartId: data.dayPartId,\n        levelId: data.levelId,\n        created: data.created,\n        title: data.title,\n        description: data.description,\n        startX: data.startX,\n        startY: data.startY,\n        stops: data.stops,\n        comments: data.comments,\n        endX: data.endX,\n        endY: data.endY,\n        length: data.length,\n        favourites: data.favourites,\n        userId: data.userId\n      });\n    }\n  }\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  };\n  const handleFileChange = event => {\n    const selectedImage = event.target.files[0];\n    try {\n      setImageToShow(URL.createObjectURL(selectedImage));\n      setImage(selectedImage);\n    } catch {}\n  };\n  useEffect(() => {\n    let tempTrack = {\n      ...track\n    };\n    if (selectedValue === \"start\") {\n      setAddressStart(address);\n      tempTrack.startX = x;\n      tempTrack.startY = y;\n    } else {\n      if (selectedValue === \"end\") {\n        setAddressEnd(address);\n        tempTrack.endX = x;\n        tempTrack.endY = y;\n      } else {\n        if (selectedValue === \"stop\") {\n          setAddressStop([...addressStop, address]);\n          setStops([...stops, {\n            x: x,\n            y: y,\n            trackId: track.id\n          }]);\n        }\n      }\n    }\n    setTrack({\n      ...tempTrack\n    });\n  }, [address]);\n  function handleMinusStop(index) {\n    let newAddressesStop = addressStop.slice(0, index).concat(addressStop.slice(index + 1));\n    let newStops = stops.slice(0, index).concat(stops.slice(index + 1));\n    setAddressStop(newAddressesStop);\n    setStops(newStops);\n  }\n  // async function handleLengthChange(value:number,index:any){\n  //   let tempTrack={...track}as Track\n  //   tempTrack.length=value\n  //   setTrack({...tempTrack})\n  //   return value.toString();\n  // }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (track) {\n      const token = localStorage.getItem('user');\n      if (!isValidToken(token)) {\n        alert(\"you are not logged in\");\n        navigate('/');\n      }\n      let dataToSend = {\n        id: track.id,\n        companyForTripId: getViewByDescription(company) !== 0 ? getCompanyByDescription(company) : track.companyForTripId,\n        pictureFile: image,\n        viewId: getViewByDescription(view) !== 0 ? getViewByDescription(view) : track.viewId,\n        dayPartId: getDayPartByDescription(dayPart) !== 0 ? getDayPartByDescription(dayPart) : track.dayPartId,\n        levelId: getLevelByDescription(level) !== 0 ? getLevelByDescription(level) : track.levelId,\n        created: track.created,\n        title: track.title,\n        description: track.description,\n        startX: track.startX,\n        startY: track.startY,\n        stops: [],\n        comments: track.comments,\n        endX: track.endX,\n        endY: track.endY,\n        length: track.length,\n        favourites: track.favourites,\n        userId: track.userId\n      };\n      if (isValidTrackToUpdate(dataToSend)) {\n        const formData = new FormData(event.currentTarget);\n        formData.append('pictureForm', image);\n        formData.append('companyForTripId', dataToSend.companyForTripId.toString());\n        formData.append('viewId', dataToSend.viewId.toString());\n        formData.append('dayPartId', dataToSend.dayPartId.toString());\n        formData.append('levelId', dataToSend.levelId.toString());\n        formData.append('length', dataToSend.length.toString());\n        formData.append('startX', dataToSend.startX.toString());\n        formData.append('startY', dataToSend.startY.toString());\n        formData.append('endX', dataToSend.endX.toString());\n        formData.append('endY', dataToSend.endY.toString());\n        formData.append('favourites', dataToSend.favourites.toString());\n        formData.append('id', dataToSend.id.toString());\n        formData.append('created', dataToSend.created.toString());\n        formData.append('length', dataToSend.length.toString());\n        try {\n          let mytoken = localStorage.getItem('user');\n          const response = await (await getUserByToken(mytoken)).json();\n          formData.append('userId', response.id);\n          try {\n            setOpen(true);\n            setText(\"מעדכן מסלול\");\n            let response = await updateTrackApi(track.id, formData, mytoken);\n            setText(\"מסלול עודכן\");\n            stops.forEach(async (value, index) => {\n              try {\n                if (isValidStopToAdd(value)) {\n                  setText(\"saving stop: \" + index.toString());\n                  value.trackId = dataToSend.id;\n                  let newStop = await addStop(value, mytoken);\n                  dataToSend.stops = [...dataToSend.stops, newStop.data];\n                  setText(\"העצירה נשמרה\");\n                } else {\n                  alert(\"העצירה לא התווספה\");\n                  console.error(value);\n                }\n              } catch (error) {\n                console.log(error);\n              }\n            });\n            originalStops.forEach(async value => {\n              await deleteStop(value.id, token);\n            });\n            setText(\"הכל נשמר בהצלחה\");\n            dispatch(updateTrackSlice(dataToSend));\n            setOpen(false);\n          } catch (error) {\n            console.error(error);\n            setOpen(false);\n          }\n        } catch (error) {\n          setOpen(false);\n          console.error('Error sending data:', error);\n        }\n      } else {\n        alert(\"חלק מנתונים לא תקינים,\\nאנא בדוק שוב את הפרטים\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: 'form',\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(BasicModal, {\n        open: open,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        gap: 2,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          alignItems: \"center\",\n          alignContent: \"center\",\n          marginTop: '100px',\n          gap: 3,\n          justifyContent: \"space-around\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: grey[500],\n              marginLeft: '35%',\n              marginRight: '50%',\n              marginBottom: '50px',\n              width: '400px',\n              height: '400px'\n            },\n            src: imageToShow,\n            variant: \"rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            id: \"contained-button-file\",\n            multiple: true,\n            type: \"file\",\n            onChange: handleFileChange,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              component: \"span\",\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sx: {\n            display: \"block\",\n            marginTop: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"title\",\n            name: \"title\",\n            required: true,\n            defaultValue: data === null || data === void 0 ? void 0 : data.title,\n            id: \"title\",\n            label: \"title\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          display: \"block\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"description\",\n            name: \"description\",\n            required: true,\n            multiline: true,\n            defaultValue: data === null || data === void 0 ? void 0 : data.description,\n            rows: 4,\n            id: \"description\",\n            label: \"description\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              paddingBottom: '15px'\n            },\n            required: true,\n            fullWidth: true,\n            name: \"addressStart\",\n            label: \"Address Start\",\n            type: \"address\",\n            id: \"addressStart\",\n            autoComplete: \"new-address\",\n            value: addressStart\n          }, `start`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 11\n          }, this), addressStop.length > 0 && addressStop.map((stop, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"inline\"\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  name: \"addressStop\",\n                  label: \"Address Stop\",\n                  type: \"address\",\n                  id: index.toString(),\n                  autoComplete: \"new-address\",\n                  value: stop,\n                  sx: {\n                    display: \"inline\",\n                    marginBottom: '5px'\n                  }\n                }, `stop${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"inline\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    handleMinusStop(index);\n                  },\n                  sx: {\n                    display: \"inline\"\n                  },\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true);\n          }), /*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              marginBottom: '5px'\n            },\n            required: true,\n            fullWidth: true,\n            name: \"addressEnd\",\n            label: \"Address End\",\n            type: \"address\",\n            id: \"addressEnd\",\n            autoComplete: \"new-address\",\n            value: addressEnd\n          }, `end`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              id: \"demo-radio-buttons-group-label\",\n              children: \"Choose track points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-labelledby\": \"demo-radio-buttons-group-label\",\n              defaultValue: \"start\",\n              name: \"radio-buttons-group\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"start\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 56\n                }, this),\n                label: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"stop\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 55\n                }, this),\n                label: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"end\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 54\n                }, this),\n                label: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            setAddress: setAddress,\n            setX: setX,\n            setY: setY\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"level\",\n            // inputValue={experiences}\n            defaultValue: getLevelById(track === null || track === void 0 ? void 0 : track.levelId),\n            inputValue: level,\n            onInputChange: (event, newInputValue) => {\n              console.log(\"level changed\");\n              setLevel(newInputValue);\n              // setTrack({...track,['levelId']:getLevelByDescription(newInputValue)})\n              console.log(newInputValue);\n            }\n            // onClick={onClick}\n            ,\n            options: levels,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 38\n            }, this)\n          }, 'level', false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"dayPart\",\n            inputValue: dayPart,\n            defaultValue: getDayPartyById(track === null || track === void 0 ? void 0 : track.dayPartId),\n            onInputChange: (event, newInputValue) => {\n              setDayPart(newInputValue);\n              // setTrack({...track,['dayPartId']:getDayPartByDescription(newInputValue)})\n              console.log(newInputValue);\n            }\n            // onClick={onClick}\n            ,\n            options: dayParts,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Day Part\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 38\n            }, this)\n          }, 'dayPart', false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"company\",\n            inputValue: company,\n            defaultValue: getCompanyById(track === null || track === void 0 ? void 0 : track.companyForTripId),\n            onInputChange: (event, newInputValue) => {\n              setCompany(newInputValue);\n              // setTrack({...track,['companyForTripId']:getCompanyByDescription(newInputValue)})\n              console.log(newInputValue);\n            }\n            // onClick={onClick}\n            ,\n            options: companies,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 38\n            }, this)\n          }, 'company', false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"view\",\n            inputValue: view,\n            defaultValue: getViewById(track === null || track === void 0 ? void 0 : track.viewId),\n            onInputChange: (event, newInputValue) => {\n              setView(newInputValue);\n              // setTrack({...track,['viewId']:getViewByDescription(newInputValue)})\n              console.log(newInputValue);\n            }\n            // onClick={onClick}\n            ,\n            options: views,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 38\n            }, this)\n          }, 'view', false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            \"aria-label\": \"length\",\n            defaultValue: track.length,\n            valueLabelDisplay: \"auto\"\n            // getAriaValueText={handleLengthChange}\n            ,\n            shiftStep: 1,\n            step: 1,\n            marks: marks,\n            min: 1,\n            max: 100,\n            value: track === null || track === void 0 ? void 0 : track.length,\n            onChange: (event, newInputValue) => {\n              let tempTrack = {\n                ...track\n              };\n              tempTrack.length = parseInt(newInputValue.toString());\n              setTrack({\n                ...tempTrack\n              });\n              console.log(tempTrack);\n            }\n          }, 'length', false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\"\n        // fullWidth\n        ,\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2,\n          width: '300px'\n        },\n        children: \"Update Track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(UpdateTrack, \"lhdtyzsbUyU71hmZmEhJdKerQSg=\", false, function () {\n  return [useParams, useLoaderData, useJsApiLoader, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useNavigate, useAppSelector];\n});\n_c = UpdateTrack;\nvar _c;\n$RefreshReg$(_c, \"UpdateTrack\");","map":{"version":3,"names":["Autocomplete","Avatar","Box","Button","FormControl","FormControlLabel","Grid","RadioGroup","Slider","TextField","grey","useEffect","useState","Radio","FormLabel","Map","useDispatch","useSelector","selectLevel","selectDayPart","selectCompany","selectView","getDayPartyById","getCompanyByDescription","getCompanyById","getDayPartByDescription","getLevelByDescription","getLevelById","getViewByDescription","getViewById","selectTrack","updateTrack","updateTrackApi","updateTrackSlice","getUserByToken","useNavigate","addStop","deleteStop","useLoaderData","useParams","k","apikey","getAddressByCoordinates","useJsApiLoader","isValidStopToAdd","isValidTrackToUpdate","useAppSelector","selectUser","BasicModal","isValidToken","stringToBlob","jsxDEV","_jsxDEV","Fragment","_Fragment","marks","value","label","UpdateTrack","_s","params","data","geocoder","setGeocoder","isLoaded","id","googleMapsApiKey","language","isAnitialized","setIsAnitialized","image","setImage","imageToShow","setImageToShow","selectedValue","setSelectedValue","token","localStorage","getItem","addressStart","setAddressStart","addressEnd","setAddressEnd","addressStop","setAddressStop","isAddingAddress","setIsAddingAddress","text","setText","open","setOpen","address","setAddress","x","setX","y","setY","level","setLevel","dayPart","setDayPart","company","setCompany","view","setView","stops","setStops","levels","dayParts","companies","views","tracks","dispatch","navigate","originalStops","SetOriginalStops","track","setTrack","user","undefined","alert","clear","window","google","maps","Geocoder","console","log","companyForTripId","pictureForm","viewId","dayPartId","levelId","created","title","description","startX","startY","comments","endX","endY","length","favourites","userId","picture","Initialize","start","end","tempStops","tempStopAddresses","lat","lng","map","tempAddress","push","tempStop","trackId","blob","pictureData","url","URL","createObjectURL","error","handleChange","event","target","handleFileChange","selectedImage","files","tempTrack","handleMinusStop","index","newAddressesStop","slice","concat","newStops","handleSubmit","preventDefault","dataToSend","pictureFile","formData","FormData","currentTarget","append","toString","mytoken","response","json","forEach","newStop","children","component","noValidate","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","container","gap","alignItems","justifyContent","xs","alignContent","marginTop","sx","bgcolor","marginLeft","marginRight","marginBottom","width","height","src","variant","accept","multiple","type","onChange","style","display","htmlFor","color","item","autoComplete","name","required","defaultValue","autoFocus","multiline","rows","paddingBottom","fullWidth","stop","onClick","control","disablePortal","inputValue","onInputChange","newInputValue","options","renderInput","valueLabelDisplay","shiftStep","step","min","max","parseInt","mt","mb","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/sections/UpdateTrack.tsx"],"sourcesContent":["import { Autocomplete, Avatar, Box, Button, FormControl, FormControlLabel, Grid, RadioGroup, Slider, TextField } from \"@mui/material\";\r\nimport { deepOrange, grey } from \"@mui/material/colors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Radio from '@mui/material/Radio';\r\n// import RadioGroup from '@mui/material/RadioGroup';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Map from \"../components/Map\";\r\nimport { Track } from \"../types/Track\";\r\nimport { Stop } from \"../types/Stop\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectLevel } from \"../redux/level/level.selector\";\r\nimport { selectDayPart } from \"../redux/dayPart/dayPart.selector\";\r\nimport { selectCompany } from \"../redux/company/company.selector\";\r\nimport { selectView } from \"../redux/view/view.selector\";\r\nimport { getDayPartyById, getCompanyByDescription, getCompanyById, getDayPartByDescription, getLevelByDescription, getLevelById, getViewByDescription, getViewById } from \"../services/Mapper\";\r\nimport { selectTrack } from \"../redux/track/track.selector\";\r\nimport { addTrack as addTrackApi, updateTrack as updateTrackApi } from \"../services/track\";\r\nimport { addTrack as addTrackSlice, updateTrack as updateTrackSlice } from \"../redux/track/track.slice\";\r\nimport { getUserByToken } from \"../services/user\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { addStop, deleteStop } from \"../services/stop\";\r\nimport { useLoaderData, useParams } from \"react-router-dom\"\r\nimport { k as apikey } from '../utils/projectdata'\r\nimport getAddressByCoordinates from \"../services/GoogleMaps.services\";\r\nimport { useJsApiLoader } from \"@react-google-maps/api\";\r\nimport { isValidStopToAdd, isValidTrackToAdd, isValidTrackToUpdate } from \"../utils/validation.utils\";\r\nimport { useAppSelector } from \"../redux/store\";\r\nimport { selectUser } from \"../redux/user/user.selector\";\r\nimport BasicModal from \"../components/Modal.component\";\r\nimport { isValidToken } from \"../auth/auth.utils\";\r\nimport { stringToBlob } from \"../utils/stringToBlob.utils\";\r\n\r\nconst marks = [\r\n  {\r\n    value: 24,\r\n    label: '1 day'\r\n  },\r\n  {\r\n    value: 48,\r\n    label: '2 days'\r\n  },\r\n  {\r\n    value: 72,\r\n    label: '3 days'\r\n  },\r\n  {\r\n    value: 96,\r\n    label: '4 days'\r\n  }\r\n]\r\n\r\nexport default function UpdateTrack() {\r\n  const params = useParams()\r\n  const data: any = useLoaderData()\r\n  const [geocoder, setGeocoder] = useState<google.maps.Geocoder | null>(null);\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: apikey,\r\n    language: 'he',\r\n  });\r\n  const [isAnitialized, setIsAnitialized] = useState(false)\r\n  const [image, setImage] = useState<Blob>()\r\n  const [imageToShow, setImageToShow] = useState<string>(\"\")\r\n  const [selectedValue, setSelectedValue] = useState('start');\r\n  const token = localStorage.getItem('user')\r\n  const [addressStart, setAddressStart] = useState(\"\")\r\n  const [addressEnd, setAddressEnd] = useState(\"\")\r\n  const [addressStop, setAddressStop] = useState<string[]>([])\r\n  const [isAddingAddress, setIsAddingAddress] = useState(false)\r\n  const [text, setText] = useState(\"\")\r\n  const [open, setOpen] = useState(false)\r\n  const [address, setAddress] = useState<string>(\"\")\r\n  const [x, setX] = useState(0)\r\n  const [y, setY] = useState(0)\r\n  const [level, setLevel] = useState(\"\")\r\n  const [dayPart, setDayPart] = useState(\"\")\r\n  const [company, setCompany] = useState(\"\")\r\n  const [view, setView] = useState(\"\")\r\n  const [stops, setStops] = useState<Omit<Stop, 'id'>[]>([])\r\n  const levels = useSelector(selectLevel)\r\n  const dayParts = useSelector(selectDayPart)\r\n  const companies = useSelector(selectCompany)\r\n  const views = useSelector(selectView)\r\n  const tracks = useSelector(selectTrack)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const [originalStops, SetOriginalStops] = useState<Stop[]>([])\r\n  const [track, setTrack] = useState<any | null>(data)\r\n  const user = useAppSelector(selectUser).user\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('user')\r\n    if (token === undefined || token === null || token === \"\" || user === null || user === undefined || user.id === 0) {\r\n      alert(\"please login\")\r\n      localStorage.clear()\r\n      navigate('/')\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      setGeocoder(new window.google.maps.Geocoder());\r\n    }\r\n  }, [isLoaded]);\r\n  useEffect(() => {\r\n    if (data) {\r\n      console.log(\"in data\")\r\n      console.log({\r\n        id: data.id,\r\n        companyForTripId: data.companyForTripId,\r\n        pictureForm: data.pictureForm,\r\n        viewId: data.viewId,\r\n        dayPartId: data.dayPartId,\r\n        levelId: data.levelId,\r\n        created: data.created,\r\n        title: data.title,\r\n        description: data.description,\r\n        startX: data.startX,\r\n        startY: data.startY,\r\n        stops: data.stops,\r\n        comments: data.comments,\r\n        endX: data.endX,\r\n        endY: data.endY,\r\n        length: data.length,\r\n        favourites: data.favourites,\r\n        userId: data.userId,\r\n        picture: data.picture\r\n      })\r\n      setTrack({\r\n        id: data.id,\r\n        companyForTripId: data.companyForTripId,\r\n        pictureForm: data.pictureForm,\r\n        viewId: data.viewId,\r\n        dayPartId: data.dayPartId,\r\n        levelId: data.levelId,\r\n        created: data.created,\r\n        title: data.title,\r\n        description: data.description,\r\n        startX: data.startX,\r\n        startY: data.startY,\r\n        stops: data.stops,\r\n        comments: data.comments,\r\n        endX: data.endX,\r\n        endY: data.endY,\r\n        length: data.length,\r\n        favourites: data.favourites,\r\n        userId: data.userId,\r\n        picture: data.picture\r\n      } as Track);\r\n    }\r\n  }, [data])\r\n  useEffect(() => {\r\n    console.log(track)\r\n    console.log(isAnitialized)\r\n    console.log(geocoder)\r\n    if (!isAnitialized && geocoder && track) {\r\n      Initialize();\r\n    }\r\n    else {\r\n    }\r\n  }, [geocoder, track])\r\n\r\n  async function Initialize() {\r\n\r\n    if (track) {\r\n      let start = \"\"\r\n      let end = \"\"\r\n      let tempStops = [] as Omit<Stop, \"id\">[]\r\n      let tempStopAddresses = [] as string[]\r\n      try {\r\n        start = await getAddressByCoordinates(geocoder, { lat: data.startX, lng: data.startY });\r\n        console.log(start)\r\n      } catch {\r\n        start = \"start position\"\r\n      }\r\n      try {\r\n        end = await getAddressByCoordinates(geocoder, { lat: data.endX, lng: data.endY })\r\n      } catch { }\r\n      data.stops.map(async (value: any) => {\r\n        try {\r\n          let tempAddress = await getAddressByCoordinates(geocoder, { lat: value.x, lng: value.y })\r\n          tempStopAddresses.push(tempAddress)\r\n          let tempStop = {\r\n            trackId: track.id,\r\n            x: value.x,\r\n            y: value.y\r\n          } as Omit<Stop, \"id\">\r\n          tempStops.push(tempStop)\r\n          SetOriginalStops([...data.stops])\r\n        } catch {\r\n\r\n        }\r\n      })\r\n      try {\r\n        if (data) {\r\n          const blob = stringToBlob(data.pictureData!, null, null);\r\n          const url = URL.createObjectURL(blob);\r\n          setImageToShow(url)\r\n          setImage(blob)\r\n          setTrack({ ...track, ['picture']: url, ['pictureForm']: blob })\r\n        } else {\r\n          console.error('Failed to fetch picture');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching picture:', error);\r\n      }\r\n      setCompany(getCompanyById(data.companyForTripId))\r\n      setDayPart(getDayPartyById(data.dayPartId))\r\n      setLevel(getLevelById(data.levelId))\r\n      setView(getViewById(data.viewId))\r\n      setAddressStart(start)\r\n      setAddressEnd(end)\r\n      setStops(tempStops)\r\n      setAddressStop(tempStopAddresses)\r\n      setIsAnitialized(true)\r\n      setTrack({\r\n        id: data.id,\r\n        companyForTripId: data.companyForTripId,\r\n        viewId: data.viewId,\r\n        dayPartId: data.dayPartId,\r\n        levelId: data.levelId,\r\n        created: data.created,\r\n        title: data.title,\r\n        description: data.description,\r\n        startX: data.startX,\r\n        startY: data.startY,\r\n        stops: data.stops,\r\n        comments: data.comments,\r\n        endX: data.endX,\r\n        endY: data.endY,\r\n        length: data.length,\r\n        favourites: data.favourites,\r\n        userId: data.userId,\r\n      } as Track);\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSelectedValue(event.target.value);\r\n\r\n  };\r\n  const handleFileChange = (event: any) => {\r\n    const selectedImage = event.target.files[0];\r\n    try {\r\n      setImageToShow(URL.createObjectURL(selectedImage))\r\n      setImage(selectedImage);\r\n\r\n    } catch { }\r\n\r\n  };\r\n  useEffect(() => {\r\n\r\n    let tempTrack = { ...track } as Track\r\n    if (selectedValue === \"start\") {\r\n      setAddressStart(address)\r\n      tempTrack.startX = x;\r\n      tempTrack.startY = y;\r\n    } else {\r\n      if (selectedValue === \"end\") {\r\n        setAddressEnd(address)\r\n        tempTrack.endX = x;\r\n        tempTrack.endY = y;\r\n      } else {\r\n        if (selectedValue === \"stop\") {\r\n\r\n          setAddressStop([...addressStop, address])\r\n          setStops([...stops, { x: x, y: y, trackId: track.id }])\r\n\r\n        }\r\n      }\r\n    }\r\n    setTrack({ ...tempTrack })\r\n\r\n  }, [address])\r\n  function handleMinusStop(index: number) {\r\n    let newAddressesStop = addressStop.slice(0, index).concat(addressStop.slice(index + 1))\r\n    let newStops = stops.slice(0, index).concat(stops.slice(index + 1))\r\n    setAddressStop(newAddressesStop)\r\n    setStops(newStops)\r\n  }\r\n  // async function handleLengthChange(value:number,index:any){\r\n  //   let tempTrack={...track}as Track\r\n  //   tempTrack.length=value\r\n  //   setTrack({...tempTrack})\r\n  //   return value.toString();\r\n  // }\r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (track) {\r\n      const token = localStorage.getItem('user')\r\n      if (!isValidToken(token)) {\r\n        alert(\"you are not logged in\")\r\n        navigate('/')\r\n      }\r\n\r\n      let dataToSend = {\r\n        id: track.id,\r\n        companyForTripId: (getViewByDescription(company) !== 0) ? getCompanyByDescription(company) : track.companyForTripId,\r\n        pictureFile: image,\r\n        viewId: (getViewByDescription(view) !== 0) ? getViewByDescription(view) : track.viewId,\r\n        dayPartId: (getDayPartByDescription(dayPart) !== 0) ? getDayPartByDescription(dayPart) : track.dayPartId,\r\n        levelId: (getLevelByDescription(level) !== 0) ? getLevelByDescription(level) : track.levelId,\r\n        created: track.created,\r\n        title: track.title,\r\n        description: track.description,\r\n        startX: track.startX,\r\n        startY: track.startY,\r\n        stops: [],\r\n        comments: track.comments,\r\n        endX: track.endX,\r\n        endY: track.endY,\r\n        length: track.length,\r\n        favourites: track.favourites,\r\n        userId: track.userId\r\n      } as Track;\r\n      if (isValidTrackToUpdate(dataToSend)) {\r\n        const formData = new FormData(event.currentTarget);\r\n        formData.append('pictureForm', image!);\r\n        formData.append('companyForTripId', dataToSend.companyForTripId.toString());\r\n        formData.append('viewId', dataToSend.viewId.toString());\r\n        formData.append('dayPartId', dataToSend.dayPartId.toString());\r\n        formData.append('levelId', dataToSend.levelId.toString());\r\n        formData.append('length', dataToSend.length.toString());\r\n        formData.append('startX', dataToSend.startX.toString());\r\n        formData.append('startY', dataToSend.startY.toString());\r\n        formData.append('endX', dataToSend.endX.toString());\r\n        formData.append('endY', dataToSend.endY.toString());\r\n        formData.append('favourites', dataToSend.favourites.toString());\r\n        formData.append('id', dataToSend.id.toString());\r\n        formData.append('created', dataToSend.created.toString());\r\n        formData.append('length', dataToSend.length.toString());\r\n        try {\r\n          let mytoken = localStorage.getItem('user')\r\n          const response = await (await getUserByToken(mytoken!)).json()\r\n          formData.append('userId', response.id);\r\n          try {\r\n            setOpen(true)\r\n            setText(\"מעדכן מסלול\")\r\n            let response = await updateTrackApi(track.id, formData, mytoken!)\r\n            setText(\"מסלול עודכן\")\r\n            stops.forEach(async (value: Omit<Stop, 'id'>, index) => {\r\n              try {\r\n                if (isValidStopToAdd(value)) {\r\n                  setText(\"saving stop: \" + index.toString())\r\n                  value.trackId = dataToSend.id;\r\n                  let newStop = await addStop(value, mytoken!);\r\n                  dataToSend.stops = [...dataToSend.stops, newStop.data]\r\n                  setText(\"העצירה נשמרה\")\r\n                } else {\r\n                  alert(\"העצירה לא התווספה\")\r\n                  console.error(value)\r\n                }\r\n\r\n              } catch (error) {\r\n                console.log(error)\r\n              }\r\n            });\r\n            originalStops.forEach(async (value) => {\r\n              await deleteStop(value.id, token!)\r\n            });\r\n\r\n            setText(\"הכל נשמר בהצלחה\")\r\n\r\n            dispatch(updateTrackSlice(dataToSend))\r\n            setOpen(false)\r\n          } catch (error) {\r\n            console.error(error)\r\n            setOpen(false)\r\n          }\r\n        } catch (error) {\r\n          setOpen(false)\r\n          console.error('Error sending data:', error);\r\n        }\r\n      } else {\r\n        alert(\"חלק מנתונים לא תקינים,\\nאנא בדוק שוב את הפרטים\")\r\n      }\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <Box component={'form'} noValidate onSubmit={handleSubmit}>\r\n      <BasicModal open={open} text={text} />\r\n      <Grid container gap={2} alignItems={\"center\"} justifyContent={\"center\"}>\r\n        <Grid xs={12} alignItems={\"center\"} alignContent={\"center\"} marginTop={'100px'} gap={3} justifyContent={\"space-around\"}>\r\n          <Avatar sx={{ bgcolor: grey[500], marginLeft: '35%', marginRight: '50%', marginBottom: '50px', width: '400px', height: '400px' }} src={imageToShow} variant=\"rounded\" />\r\n          <input\r\n            accept=\"image/*\"\r\n            id=\"contained-button-file\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <label htmlFor=\"contained-button-file\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n              Upload Image\r\n            </Button>\r\n          </label>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{ display: \"block\", marginTop: '0px' }}>\r\n          <TextField\r\n            autoComplete=\"title\"\r\n            name=\"title\"\r\n            required\r\n            defaultValue={data?.title}\r\n            id=\"title\"\r\n            label=\"title\"\r\n            autoFocus\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} display={\"block\"}>\r\n          <TextField\r\n            autoComplete=\"description\"\r\n            name=\"description\"\r\n            required\r\n            multiline\r\n            defaultValue={data?.description}\r\n            rows={4}\r\n            id=\"description\"\r\n            label=\"description\"\r\n            autoFocus\r\n          />\r\n        </Grid>\r\n        <Grid xs={3} >\r\n          <TextField\r\n            sx={{ paddingBottom: '15px' }}\r\n            required\r\n            fullWidth\r\n            key={`start`}\r\n            name=\"addressStart\"\r\n            label=\"Address Start\"\r\n            type=\"address\"\r\n            id=\"addressStart\"\r\n            autoComplete=\"new-address\"\r\n            value={addressStart}\r\n          />\r\n\r\n          {addressStop.length > 0 && addressStop.map((stop, index) => {\r\n            return <><div style={{ display: \"inline\" }}><TextField\r\n              required\r\n              fullWidth\r\n\r\n              name=\"addressStop\"\r\n              label=\"Address Stop\"\r\n              type=\"address\"\r\n              id={index.toString()}\r\n              key={`stop${index}`}\r\n              autoComplete=\"new-address\"\r\n              value={stop}\r\n              sx={{ display: \"inline\", marginBottom: '5px' }}\r\n            /></div>\r\n              <div style={{ display: \"inline\" }}><Button onClick={() => { handleMinusStop(index) }} sx={{ display: \"inline\" }}>-</Button></div>\r\n            </>\r\n          })}\r\n          <TextField\r\n            sx={{ marginBottom: '5px' }}\r\n            required\r\n            fullWidth\r\n            name=\"addressEnd\"\r\n            label=\"Address End\"\r\n            type=\"address\"\r\n            id=\"addressEnd\"\r\n            key={`end`}\r\n            autoComplete=\"new-address\"\r\n            value={addressEnd}\r\n          />\r\n        </Grid>\r\n        <Grid xs={3}>\r\n          <FormControl>\r\n            <FormLabel id=\"demo-radio-buttons-group-label\">Choose track points</FormLabel>\r\n            <RadioGroup\r\n              aria-labelledby=\"demo-radio-buttons-group-label\"\r\n              defaultValue=\"start\"\r\n              name=\"radio-buttons-group\"\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel value=\"start\" control={<Radio />} label=\"Start\" />\r\n              <FormControlLabel value=\"stop\" control={<Radio />} label=\"Stop\" />\r\n              <FormControlLabel value=\"end\" control={<Radio />} label=\"End\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid xs={3}>\r\n          <Map setAddress={setAddress} setX={setX} setY={setY} />\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"level\"\r\n            key={'level'}\r\n            // inputValue={experiences}\r\n            defaultValue={getLevelById(track?.levelId)}\r\n            inputValue={level}\r\n            onInputChange={(event, newInputValue) => {\r\n              console.log(\"level changed\")\r\n              setLevel(newInputValue);\r\n              // setTrack({...track,['levelId']:getLevelByDescription(newInputValue)})\r\n              console.log(newInputValue)\r\n            }}\r\n            // onClick={onClick}\r\n            options={levels}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Level\" />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"dayPart\"\r\n            key={'dayPart'}\r\n            inputValue={dayPart}\r\n            defaultValue={getDayPartyById(track?.dayPartId)}\r\n\r\n            onInputChange={(event, newInputValue) => {\r\n              setDayPart(newInputValue);\r\n              // setTrack({...track,['dayPartId']:getDayPartByDescription(newInputValue)})\r\n              console.log(newInputValue)\r\n            }}\r\n            // onClick={onClick}\r\n            options={dayParts}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Day Part\" />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"company\"\r\n            key={'company'}\r\n            inputValue={company}\r\n            defaultValue={getCompanyById(track?.companyForTripId)}\r\n            onInputChange={(event, newInputValue) => {\r\n              setCompany(newInputValue);\r\n              // setTrack({...track,['companyForTripId']:getCompanyByDescription(newInputValue)})\r\n              console.log(newInputValue)\r\n            }}\r\n            // onClick={onClick}\r\n            options={companies}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Company\" />}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"view\"\r\n            inputValue={view}\r\n            key={'view'}\r\n            defaultValue={getViewById(track?.viewId)}\r\n            onInputChange={(event, newInputValue) => {\r\n              setView(newInputValue);\r\n              // setTrack({...track,['viewId']:getViewByDescription(newInputValue)})\r\n              console.log(newInputValue)\r\n            }}\r\n            // onClick={onClick}\r\n            options={views}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"View\" />}\r\n          />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <Slider\r\n            aria-label=\"length\"\r\n            defaultValue={track.length}\r\n            key={'length'}\r\n            valueLabelDisplay=\"auto\"\r\n            // getAriaValueText={handleLengthChange}\r\n            shiftStep={1}\r\n            step={1}\r\n            marks={marks}\r\n            min={1}\r\n            max={100}\r\n            value={track?.length}\r\n            onChange={(event: any, newInputValue: any) => {\r\n              let tempTrack = { ...track } as Track\r\n              tempTrack.length = parseInt(newInputValue.toString());\r\n              setTrack({ ...tempTrack })\r\n              console.log(tempTrack)\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n      </Grid>\r\n      <Button\r\n        type=\"submit\"\r\n        // fullWidth\r\n        variant=\"contained\"\r\n\r\n        sx={{ mt: 3, mb: 2, width: '300px' }}\r\n      >\r\n        Update Track\r\n      </Button>\r\n    </Box>\r\n  </>\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}