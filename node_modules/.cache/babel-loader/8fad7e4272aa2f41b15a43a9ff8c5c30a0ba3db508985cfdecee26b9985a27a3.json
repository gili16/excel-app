{"ast":null,"code":"import { getSession, isValidToken, removeSession } from \"../auth/auth.utils\";\nexport const authRequestMiddleware = async request => {\n  const user = await getSession();\n  if (!user || !isValidToken(user.token)) {\n    removeSession();\n    Promise.reject('Unauthorized');\n  }\n  return request;\n};\nexport const authResponseMiddleware = response => {\n  if (response.status === 401) {\n    alert(\"response\");\n    removeSession();\n    Promise.reject('Unauthorized');\n  }\n  return response;\n};","map":{"version":3,"names":["getSession","isValidToken","removeSession","authRequestMiddleware","request","user","token","Promise","reject","authResponseMiddleware","response","status","alert"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/utils/authMiddleware.ts"],"sourcesContent":["import { InternalAxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { getSession, isValidToken, removeSession } from \"../auth/auth.utils\"\r\n\r\nexport const authRequestMiddleware = async (request: InternalAxiosRequestConfig) => {\r\n    const user = await getSession()\r\n    if (!user || !isValidToken(user.token)) {\r\n        removeSession();\r\n        Promise.reject('Unauthorized')\r\n    }\r\n    return request\r\n}\r\n\r\nexport const authResponseMiddleware = (response: AxiosResponse) => {\r\n    if (response.status === 401) {\r\n        alert(\"response\")\r\n        removeSession();\r\n        Promise.reject('Unauthorized')\r\n    }\r\n    return response\r\n}"],"mappings":"AACA,SAASA,UAAU,EAAEC,YAAY,EAAEC,aAAa,QAAQ,oBAAoB;AAE5E,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,OAAmC,IAAK;EAChF,MAAMC,IAAI,GAAG,MAAML,UAAU,CAAC,CAAC;EAC/B,IAAI,CAACK,IAAI,IAAI,CAACJ,YAAY,CAACI,IAAI,CAACC,KAAK,CAAC,EAAE;IACpCJ,aAAa,CAAC,CAAC;IACfK,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;EAClC;EACA,OAAOJ,OAAO;AAClB,CAAC;AAED,OAAO,MAAMK,sBAAsB,GAAIC,QAAuB,IAAK;EAC/D,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACzBC,KAAK,CAAC,UAAU,CAAC;IACjBV,aAAa,CAAC,CAAC;IACfK,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;EAClC;EACA,OAAOE,QAAQ;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}