{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  isAuthanticated: false,\n  isInitialized: false\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthanticated = true;\n      state.isInitialized = true;\n    },\n    setInitialize: state => {\n      state.isInitialized = true;\n    },\n    addUser: (state, action) => {\n      state.user = action.payload;\n    },\n    setFavorite: (state, action) => {\n      state.user.favourites = [];\n    },\n    setMyTracks: (state, action) => {\n      state.user.myTracks = [];\n    },\n    logoutUser: state => {\n      state.user = null;\n      state.isAuthanticated = false;\n      state.isInitialized = false;\n    },\n    addFavorite: (state, action) => {\n      if (state) {\n        if (state.user) {\n          var _state$user$favourite;\n          (_state$user$favourite = state.user.favourites) === null || _state$user$favourite === void 0 ? void 0 : _state$user$favourite.push(action.payload);\n        }\n      }\n    },\n    deleteFavorite: (state, action) => {\n      if (state) {\n        if (state.user) {\n          var _state$user$favourite2;\n          let index = (_state$user$favourite2 = state.user.favourites) === null || _state$user$favourite2 === void 0 ? void 0 : _state$user$favourite2.findIndex(value => {\n            return value.id === action.payload;\n          });\n          if (index !== undefined) {\n            var _state$user$favourite3;\n            (_state$user$favourite3 = state.user.favourites) === null || _state$user$favourite3 === void 0 ? void 0 : _state$user$favourite3.splice(index, 1);\n          }\n        }\n      }\n    },\n    addTrack: (state, action) => {\n      if (state) {\n        if (state.user) {\n          var _state$user$myTracks;\n          (_state$user$myTracks = state.user.myTracks) === null || _state$user$myTracks === void 0 ? void 0 : _state$user$myTracks.push(action.payload);\n        }\n      }\n    },\n    deleteTrack: (state, action) => {\n      if (state) {\n        if (state.user) {\n          var _state$user$myTracks2;\n          let index = (_state$user$myTracks2 = state.user.myTracks) === null || _state$user$myTracks2 === void 0 ? void 0 : _state$user$myTracks2.findIndex(value => {\n            return value.id === action.payload;\n          });\n          if (index !== undefined) {\n            var _state$user$myTracks3;\n            (_state$user$myTracks3 = state.user.myTracks) === null || _state$user$myTracks3 === void 0 ? void 0 : _state$user$myTracks3.splice(index, 1);\n          }\n        }\n      }\n    },\n    updateUser: (state, action) => {\n      if (state) {\n        state.user.addressX = action.payload.addressX;\n        state.user.addressY = action.payload.addressY;\n        state.user.statusId = action.payload.statusId;\n        state.user.experienceId = action.payload.experienceId;\n        state.user.birthDate = action.payload.birthDate;\n        state.user.name = action.payload.name;\n        state.user.pictureFile = action.payload.pictureFile;\n        state.user.profilePicture = action.payload.profilePicture;\n      }\n    }\n  }\n});\n// async function InitialAllUsers(){\n//     userSlice.actions.getAllUsers();\n// }\nexport const {\n  addUser,\n  logoutUser,\n  updateUser,\n  setInitialize,\n  setUser,\n  addFavorite,\n  addTrack,\n  deleteFavorite,\n  deleteTrack,\n  setFavorite,\n  setMyTracks\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","isAuthanticated","isInitialized","userSlice","name","reducers","setUser","state","action","payload","setInitialize","addUser","setFavorite","favourites","setMyTracks","myTracks","logoutUser","addFavorite","_state$user$favourite","push","deleteFavorite","_state$user$favourite2","index","findIndex","value","id","undefined","_state$user$favourite3","splice","addTrack","_state$user$myTracks","deleteTrack","_state$user$myTracks2","_state$user$myTracks3","updateUser","addressX","addressY","statusId","experienceId","birthDate","pictureFile","profilePicture","actions","reducer"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/redux/user/user.slice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit'\r\nimport { getUsers } from '../../services/user'\r\nimport { User } from '../../types/user.types'\r\nimport { Track } from '../../types/Track'\r\ntype AuthStateType = {\r\n    user: User | null,\r\n    isAuthanticated: boolean,\r\n    isInitialized: boolean\r\n}\r\n\r\nconst initialState = {\r\n    user: null as User|null,\r\n    isAuthanticated: false,\r\n    isInitialized: false\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        setUser: (state: AuthStateType, action: PayloadAction<User>) => {\r\n            state.user = action.payload;\r\n            state.isAuthanticated = true;\r\n            state.isInitialized = true;\r\n        },\r\n        setInitialize: (state: AuthStateType) => {\r\n            state.isInitialized = true\r\n        },\r\n        addUser: (state: AuthStateType, action) => {\r\n            state.user=action.payload\r\n        },\r\n        setFavorite: (state: AuthStateType, action:PayloadAction<void>) => {\r\n            state.user!.favourites=[];\r\n        },\r\n        setMyTracks: (state: AuthStateType, action:PayloadAction<void>) => {\r\n            state.user!.myTracks=[];\r\n        },\r\n        logoutUser: (state: AuthStateType) => {\r\n            state.user= null;\r\n            state.isAuthanticated= false;\r\n            state.isInitialized=false;\r\n        },\r\n        addFavorite: (state: AuthStateType, action: PayloadAction<Track>) => {\r\n            if (state) {\r\n                if (state.user) {\r\n                    state.user.favourites?.push(action.payload)\r\n                }\r\n            }\r\n        },\r\n        deleteFavorite: (state: AuthStateType, action: PayloadAction<number>) => {\r\n            if (state) {\r\n                if (state.user) {\r\n                    let index = state.user.favourites?.findIndex(value => {\r\n                        return value.id === action.payload;\r\n                    })\r\n                    if (index !== undefined) {\r\n                        state.user.favourites?.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        addTrack: (state: AuthStateType, action: PayloadAction<Track>) => {\r\n            if (state) {\r\n                if (state.user) {\r\n                    state.user.myTracks?.push(action.payload)\r\n                }\r\n            }\r\n        },\r\n        deleteTrack: (state: AuthStateType, action: PayloadAction<number>) => {\r\n            if (state) {\r\n                if (state.user) {\r\n                    let index = state.user.myTracks?.findIndex(value => {\r\n                        return value.id === action.payload;\r\n                    })\r\n                    if (index !== undefined) {\r\n                        state.user.myTracks?.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        updateUser: (state: AuthStateType, action) => {\r\n            if (state) {\r\n                state.user!.addressX = action.payload.addressX;\r\n                state.user!.addressY = action.payload.addressY\r\n                state.user!.statusId = action.payload.statusId\r\n                state.user!.experienceId = action.payload.experienceId\r\n                state.user!.birthDate = action.payload.birthDate\r\n                state.user!.name = action.payload.name\r\n                state.user!.pictureFile = action.payload.pictureFile\r\n                state.user!.profilePicture = action.payload.profilePicture\r\n            }\r\n        }\r\n    }\r\n})\r\n// async function InitialAllUsers(){\r\n//     userSlice.actions.getAllUsers();\r\n// }\r\nexport const { addUser, logoutUser, updateUser ,setInitialize,setUser,addFavorite,addTrack,deleteFavorite,deleteTrack,setFavorite,setMyTracks} = userSlice.actions\r\nexport default userSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}