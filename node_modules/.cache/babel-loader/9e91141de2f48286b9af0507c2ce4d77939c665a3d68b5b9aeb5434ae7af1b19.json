{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\ExcelStartup\\\\website\\\\web2\\\\src\\\\Component\\\\CardRound.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardRound(props) {\n  _s();\n  const navigate = useNavigate();\n  const onClickHandler = () => {\n    navigate(props.url);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      backgroundColor: 'transparent',\n      // Make the card background transparent\n      boxShadow: 'none',\n      // Remove the shadow\n      padding: 0,\n      // Remove any internal padding for the card\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      sx: {\n        width: 180,\n        // Increased image width\n        height: 180,\n        // Increased image height\n        borderRadius: '50%',\n        // Keep the image circular\n        objectFit: 'cover',\n        // Ensures the image fits well within the circle\n        marginBottom: 2,\n        // Space between the image and the content\n        border: '2px solid forestgreen'\n      },\n      image: props.image,\n      title: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        padding: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        component: \"div\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: onClickHandler,\n        children: \"Learn More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(CardRound, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CardRound;\nvar _c;\n$RefreshReg$(_c, \"CardRound\");","map":{"version":3,"names":["React","Card","CardActions","CardContent","CardMedia","Button","Typography","useNavigate","jsxDEV","_jsxDEV","CardRound","props","_s","navigate","onClickHandler","url","sx","backgroundColor","boxShadow","padding","display","flexDirection","alignItems","justifyContent","textAlign","children","width","height","borderRadius","objectFit","marginBottom","border","image","title","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","variant","component","color","text","marginTop","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/עבודה/ExcelStartup/website/web2/src/Component/CardRound.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CardRound(props: { image: any, title: string, text: string, url: string }) {\r\n  const navigate = useNavigate();\r\n  \r\n  const onClickHandler = () => {\r\n    navigate(props.url);\r\n  }\r\n\r\n  return (\r\n    <Card sx={{\r\n      backgroundColor: 'transparent',  // Make the card background transparent\r\n      boxShadow: 'none',               // Remove the shadow\r\n      padding: 0,                      // Remove any internal padding for the card\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n    }}>\r\n      <CardMedia\r\n        sx={{\r\n          width: 180, // Increased image width\r\n          height: 180, // Increased image height\r\n          borderRadius: '50%', // Keep the image circular\r\n          objectFit: 'cover',   // Ensures the image fits well within the circle\r\n          marginBottom: 2, // Space between the image and the content\r\n          border: '2px solid forestgreen',\r\n        }}\r\n        image={props.image}\r\n        title={props.title}\r\n      />\r\n      <CardContent sx={{ padding: 0 }}>\r\n        <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {props.text}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 2\r\n      }}>\r\n        <Button size=\"small\" onClick={onClickHandler}>Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,SAASA,CAACC,KAA+D,EAAE;EAAAC,EAAA;EACjG,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3BD,QAAQ,CAACF,KAAK,CAACI,GAAG,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA,CAACR,IAAI;IAACe,EAAE,EAAE;MACRC,eAAe,EAAE,aAAa;MAAG;MACjCC,SAAS,EAAE,MAAM;MAAgB;MACjCC,OAAO,EAAE,CAAC;MAAuB;MACjCC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,gBACAhB,OAAA,CAACL,SAAS;MACRY,EAAE,EAAE;QACFU,KAAK,EAAE,GAAG;QAAE;QACZC,MAAM,EAAE,GAAG;QAAE;QACbC,YAAY,EAAE,KAAK;QAAE;QACrBC,SAAS,EAAE,OAAO;QAAI;QACtBC,YAAY,EAAE,CAAC;QAAE;QACjBC,MAAM,EAAE;MACV,CAAE;MACFC,KAAK,EAAErB,KAAK,CAACqB,KAAM;MACnBC,KAAK,EAAEtB,KAAK,CAACsB;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACF5B,OAAA,CAACN,WAAW;MAACa,EAAE,EAAE;QAAEG,OAAO,EAAE;MAAE,CAAE;MAAAM,QAAA,gBAC9BhB,OAAA,CAACH,UAAU;QAACgC,YAAY;QAACC,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,KAAK;QAAAf,QAAA,EAClDd,KAAK,CAACsB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACb5B,OAAA,CAACH,UAAU;QAACiC,OAAO,EAAC,OAAO;QAACE,KAAK,EAAC,gBAAgB;QAAAhB,QAAA,EAC/Cd,KAAK,CAAC+B;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACd5B,OAAA,CAACP,WAAW;MAACc,EAAE,EAAE;QACfI,OAAO,EAAE,MAAM;QACfG,cAAc,EAAE,QAAQ;QACxBoB,SAAS,EAAE;MACb,CAAE;MAAAlB,QAAA,eACAhB,OAAA,CAACJ,MAAM;QAACuC,IAAI,EAAC,OAAO;QAACC,OAAO,EAAE/B,cAAe;QAAAW,QAAA,EAAC;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX;AAACzB,EAAA,CA/CuBF,SAAS;EAAA,QACdH,WAAW;AAAA;AAAAuC,EAAA,GADNpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}