{"ast":null,"code":"import { addUser as addUserApi, getUser } from '../../services/user';\nimport { addUser as addUserAction } from './user.slice';\nimport { getUserByToken as getUserApi } from \"../../services/user\";\nexport const addUser = user => async (dispatch, getState) => {\n  // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\n  try {\n    console.log(\"hello\");\n    const newUser = await addUserApi(user);\n    dispatch(addUserAction(newUser));\n    console.log(newUser);\n    const token = await Login(newUser.mail);\n    // console.log(token)\n    localStorage.setItem('user', token.data);\n    return newUser;\n  } catch {\n    alert(\"please try another email address\");\n  }\n};\nexport const Login = token => async (dispatch, getState) => {\n  // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\n  console.log(\"hello\");\n  // let token=await Login(email);\n  // localStorage.setItem('user',token);\n  const userByToken = await getUserApi(token);\n  const res = await userByToken.json();\n  const user = await getUser(res.id);\n  dispatch(addUserAction(user));\n  localStorage.setItem('user', token);\n  return user;\n};","map":{"version":3,"names":["addUser","addUserApi","getUser","addUserAction","getUserByToken","getUserApi","user","dispatch","getState","console","log","newUser","token","Login","mail","localStorage","setItem","data","alert","userByToken","res","json","id"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/redux/user/user.thunk.ts"],"sourcesContent":["import { User } from \"../../types/user.types\";\r\nimport { addUser as addUserApi, getUser } from '../../services/user'\r\nimport { AppThunk } from \"../store\";\r\nimport { addUser as addUserAction } from './user.slice'\r\nimport { getUserByToken as getUserApi } from \"../../services/user\";\r\nexport const addUser = (user: FormData): AppThunk<User> => async (dispatch, getState) => {\r\n    \r\n    // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\r\n    try{\r\n    console.log(\"hello\")\r\n    const newUser = await addUserApi(user)\r\n    dispatch(addUserAction(newUser))\r\n    console.log(newUser)\r\n    const token = await Login(newUser!.mail)\r\n      // console.log(token)\r\n    localStorage.setItem('user', token.data)\r\n    \r\n    return newUser\r\n    }catch{\r\n        alert(\"please try another email address\")\r\n    }\r\n}\r\n\r\nexport const Login = (token: string): AppThunk<User> => async (dispatch, getState) => {\r\n    // const state = getState()// אם רוצים לקבל מידע מהרידקס כדי לשלוח לקריאת שרת\r\n    console.log(\"hello\")\r\n    // let token=await Login(email);\r\n    // localStorage.setItem('user',token);\r\n    const userByToken=await getUserApi(token)\r\n    const res=await userByToken.json()\r\n    const user=await getUser(res.id)\r\n    dispatch(addUserAction(user))\r\n    localStorage.setItem('user', token)\r\n    return user\r\n    \r\n}"],"mappings":"AACA,SAASA,OAAO,IAAIC,UAAU,EAAEC,OAAO,QAAQ,qBAAqB;AAEpE,SAASF,OAAO,IAAIG,aAAa,QAAQ,cAAc;AACvD,SAASC,cAAc,IAAIC,UAAU,QAAQ,qBAAqB;AAClE,OAAO,MAAML,OAAO,GAAIM,IAAc,IAAqB,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAErF;EACA,IAAG;IACHC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,MAAMC,OAAO,GAAG,MAAMV,UAAU,CAACK,IAAI,CAAC;IACtCC,QAAQ,CAACJ,aAAa,CAACQ,OAAO,CAAC,CAAC;IAChCF,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;IACpB,MAAMC,KAAK,GAAG,MAAMC,KAAK,CAACF,OAAO,CAAEG,IAAI,CAAC;IACtC;IACFC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEJ,KAAK,CAACK,IAAI,CAAC;IAExC,OAAON,OAAO;EACd,CAAC,OAAK;IACFO,KAAK,CAAC,kCAAkC,CAAC;EAC7C;AACJ,CAAC;AAED,OAAO,MAAML,KAAK,GAAID,KAAa,IAAqB,OAAOL,QAAQ,EAAEC,QAAQ,KAAK;EAClF;EACAC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpB;EACA;EACA,MAAMS,WAAW,GAAC,MAAMd,UAAU,CAACO,KAAK,CAAC;EACzC,MAAMQ,GAAG,GAAC,MAAMD,WAAW,CAACE,IAAI,CAAC,CAAC;EAClC,MAAMf,IAAI,GAAC,MAAMJ,OAAO,CAACkB,GAAG,CAACE,EAAE,CAAC;EAChCf,QAAQ,CAACJ,aAAa,CAACG,IAAI,CAAC,CAAC;EAC7BS,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEJ,KAAK,CAAC;EACnC,OAAON,IAAI;AAEf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}