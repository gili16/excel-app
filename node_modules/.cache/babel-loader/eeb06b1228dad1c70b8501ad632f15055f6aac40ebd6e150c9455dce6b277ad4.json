{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\components\\\\TrackImage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { stringToBlob } from '../utils/stringToBlob.utils';\n// import { makeStyles } from '@mui/styles';\n\n// const useStyles = makeStyles((theme:any) => ({\n//   avatar: {\n//     width: theme.spacing(7), // Adjust the size of the avatar as needed\n//     height: theme.spacing(7),\n//     overflow: 'hidden', // Ensure the image doesn't overflow the Avatar boundary\n//     borderRadius: '50%', // Ensure the Avatar is circular\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n//   image: {\n//     width: '100%',\n//     height: '100%',\n//     objectFit: 'cover', // Make the image cover the entire area of the Avatar\n//   },\n// }));\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Picture = props => {\n  _s();\n  const [pictureUrl, setPictureUrl] = useState(null);\n  useEffect(() => {\n    const fetchPicture = async () => {\n      console.log(props.track);\n      if (props.track !== null && props.track !== undefined) {\n        try {\n          //   // console.log(\"hello3\")\n          //   // let token=localStorage.getItem('user');\n          //   // console.log(token)\n          //   const response = await fetch(`https://localhost:7090/api/Track/${props.id}/picture`);\n          //   if (response) {\n          //     console.log(response)\n          //     const blob = await response.blob();\n          //     const url = URL.createObjectURL(blob);\n          //     setPictureUrl(url);\n          //   } else {\n          //     console.error('Failed to fetch picture');\n          //   }\n          // } catch (error) {\n          //   console.error('Error fetching picture:', error);\n          // console.log(props.track.pictureData)\n          const blob = stringToBlob(props.track.pictureData, null, null);\n          const url = URL.createObjectURL(blob);\n          setPictureUrl(url);\n        } catch (error) {}\n      }\n    };\n    fetchPicture();\n\n    // Clean up URL object when component unmounts\n    // return () => {\n    //   if (pictureUrl) {\n    //     URL.revokeObjectURL(pictureUrl);\n    //   }\n    // };\n  }, [props.track.pictureData]);\n  if (!pictureUrl) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Avatar, {\n      alt: \"Remy Sharp\",\n      src: pictureUrl,\n      sx: {\n        width: '100%',\n        height: '50%'\n      },\n      variant: \"square\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pictureUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n_s(Picture, \"3fws9zWANCMEJhnO8/vpzDz1Mjc=\");\n_c = Picture;\nexport default Picture;\nvar _c;\n$RefreshReg$(_c, \"Picture\");","map":{"version":3,"names":["React","useState","useEffect","Avatar","stringToBlob","jsxDEV","_jsxDEV","Fragment","_Fragment","Picture","props","_s","pictureUrl","setPictureUrl","fetchPicture","console","log","track","undefined","blob","pictureData","url","URL","createObjectURL","error","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","sx","width","height","variant","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/components/TrackImage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {getUsers} from '../services/user';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport axios from '../utils/axios.util';\r\nimport { Track } from '../types/Track';\r\nimport { stringToBlob } from '../utils/stringToBlob.utils';\r\n// import { makeStyles } from '@mui/styles';\r\n\r\n// const useStyles = makeStyles((theme:any) => ({\r\n//   avatar: {\r\n//     width: theme.spacing(7), // Adjust the size of the avatar as needed\r\n//     height: theme.spacing(7),\r\n//     overflow: 'hidden', // Ensure the image doesn't overflow the Avatar boundary\r\n//     borderRadius: '50%', // Ensure the Avatar is circular\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n//   image: {\r\n//     width: '100%',\r\n//     height: '100%',\r\n//     objectFit: 'cover', // Make the image cover the entire area of the Avatar\r\n//   },\r\n// }));\r\ninterface PictureProps {\r\n  track:Track;\r\n}\r\n\r\nconst Picture: React.FC<PictureProps> = (props:{ track:Track }) => {\r\n  const [pictureUrl, setPictureUrl] = useState<string | null>(null);\r\n \r\n  useEffect(() => {\r\n    const fetchPicture = async () => {\r\n      console.log(props.track)\r\n        if(props.track!==null&&props.track!==undefined){\r\n          try {\r\n          //   // console.log(\"hello3\")\r\n          //   // let token=localStorage.getItem('user');\r\n          //   // console.log(token)\r\n          //   const response = await fetch(`https://localhost:7090/api/Track/${props.id}/picture`);\r\n          //   if (response) {\r\n          //     console.log(response)\r\n          //     const blob = await response.blob();\r\n          //     const url = URL.createObjectURL(blob);\r\n          //     setPictureUrl(url);\r\n          //   } else {\r\n          //     console.error('Failed to fetch picture');\r\n          //   }\r\n          // } catch (error) {\r\n          //   console.error('Error fetching picture:', error);\r\n          // console.log(props.track.pictureData)\r\n              const blob = stringToBlob(props.track!.pictureData!,null,null);\r\n              const url = URL.createObjectURL(blob);\r\n              setPictureUrl(url);\r\n          }catch(error){}\r\n        }\r\n    };\r\n\r\n    fetchPicture();\r\n\r\n    // Clean up URL object when component unmounts\r\n    // return () => {\r\n    //   if (pictureUrl) {\r\n    //     URL.revokeObjectURL(pictureUrl);\r\n    //   }\r\n    // };\r\n  },[props.track.pictureData]);\r\n\r\n  if (!pictureUrl) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return <>\r\n  {/* <img src={pictureUrl} alt=\"mdo\" width=\"32\" height=\"32\" className=\"rounded-circle\"/> */}\r\n  <Avatar alt=\"Remy Sharp\" src={pictureUrl} sx={{width:'100%',height:'50%'}} variant=\"square\" >\r\n    <img  src={pictureUrl}/></Avatar></>;\r\n};\r\n\r\nexport default Picture;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,sBAAsB;AAGzC,SAASC,YAAY,QAAQ,6BAA6B;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKA,MAAMC,OAA+B,GAAIC,KAAqB,IAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BC,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,KAAK,CAAC;MACtB,IAAGP,KAAK,CAACO,KAAK,KAAG,IAAI,IAAEP,KAAK,CAACO,KAAK,KAAGC,SAAS,EAAC;QAC7C,IAAI;UACJ;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACI,MAAMC,IAAI,GAAGf,YAAY,CAACM,KAAK,CAACO,KAAK,CAAEG,WAAW,EAAE,IAAI,EAAC,IAAI,CAAC;UAC9D,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;UACrCN,aAAa,CAACQ,GAAG,CAAC;QACtB,CAAC,QAAMG,KAAK,EAAC,CAAC;MAChB;IACJ,CAAC;IAEDV,YAAY,CAAC,CAAC;;IAEd;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,EAAC,CAACJ,KAAK,CAACO,KAAK,CAACG,WAAW,CAAC,CAAC;EAE5B,IAAI,CAACR,UAAU,EAAE;IACf,oBAAON,OAAA;MAAAmB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBAAOvB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eAEPnB,OAAA,CAACH,MAAM;MAAC2B,GAAG,EAAC,YAAY;MAACC,GAAG,EAAEnB,UAAW;MAACoB,EAAE,EAAE;QAACC,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC;MAAK,CAAE;MAACC,OAAO,EAAC,QAAQ;MAAAV,QAAA,eACzFnB,OAAA;QAAMyB,GAAG,EAAEnB;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBAAE,CAAC;AACxC,CAAC;AAAClB,EAAA,CAhDIF,OAA+B;AAAA2B,EAAA,GAA/B3B,OAA+B;AAkDrC,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}