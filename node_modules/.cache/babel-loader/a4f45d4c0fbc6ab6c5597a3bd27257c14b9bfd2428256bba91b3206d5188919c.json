{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n// import { Experience } from '../../types/Experience'\n\nconst experienceSlice = createSlice({\n  name: 'experience',\n  initialState: [\"junior\", \"not bad\", \"pretty good\", \"very good\", \"an expert\"],\n  reducers: {\n    // addUser: (state: Track[], action) => {\n    //     state.push(action.payload)\n    // },\n    // deleteUser: (state: Track[], action) => {\n    //     state.splice(action.payload.index, 1)\n    // },\n    // getAllTracks: (state: Track[],action)=>{\n    //     state=action.payload\n    // }\n  }\n});\n// async function InitialAllUsers(){\n//     userSlice.actions.getAllUsers();\n// }\nexport default experienceSlice.reducer;","map":{"version":3,"names":["createSlice","experienceSlice","name","initialState","reducers","reducer"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/redux/experience/experience.slice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport {getUsers} from '../../services/user'\r\n// import { Experience } from '../../types/Experience'\r\n\r\nconst experienceSlice = createSlice({\r\n    name: 'experience',\r\n    initialState: [\"junior\",\"not bad\",\"pretty good\",\"very good\",\"an expert\"],\r\n    reducers: {\r\n        // addUser: (state: Track[], action) => {\r\n        //     state.push(action.payload)\r\n        // },\r\n        // deleteUser: (state: Track[], action) => {\r\n        //     state.splice(action.payload.index, 1)\r\n        // },\r\n        // getAllTracks: (state: Track[],action)=>{\r\n        //     state=action.payload\r\n        // }\r\n    }\r\n})\r\n// async function InitialAllUsers(){\r\n//     userSlice.actions.getAllUsers();\r\n// }\r\nexport default experienceSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C;;AAEA,MAAMC,eAAe,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE,CAAC,QAAQ,EAAC,SAAS,EAAC,aAAa,EAAC,WAAW,EAAC,WAAW,CAAC;EACxEC,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAER,CAAC,CAAC;AACF;AACA;AACA;AACA,eAAeH,eAAe,CAACI,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}