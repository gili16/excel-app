{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\routes\\\\router.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, createBrowserRouter, useNavigate } from \"react-router-dom\";\n// import Layout from \"./Layout/Layout\";\n// import Home from \"./component/General/home\";\n// import Login from \"./component/General/Login\";\n// import SignIn from './component/General/SignIn';\n// import MyProfile from \"./component/User/myProfile\";\n\nimport Layout from \"../layouts/Layout\";\n// import React from 'react';\nimport HomePage from \"../pages/HomePage\";\nimport SignUpPage from '../pages/SignUpPage';\nimport TrackPage from '../pages/TracksPage';\nimport AddTrackPage from '../pages/AddTrackPage';\nimport MyTracksPage from '../pages/MyTracksPage';\nimport UpdateTrack from '../sections/UpdateTrack';\nimport { getTrackByArea, getTrackById, getTracks } from '../services/track';\nimport UpdateUser from '../sections/UpdateUser';\nimport { getUser, getUserByToken } from '../services/user';\nimport MyFavoritesPage from '../pages/MyFavoritesPage';\n// import { getViewById } from '../utils/Mapper';\nimport { getCompanyById, getViewById } from '../services/Mapper';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../redux/user/user.selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }, this),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }, this)\n  }, {\n    path: 'user/',\n    // element: <h1>Products</h1>\n    children: [{\n      path: 'myTracks/',\n      children: [{\n        path: '',\n        element: /*#__PURE__*/_jsxDEV(MyTracksPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 41\n        }, this),\n        loader: _s(async () => {\n          _s();\n          let token = localStorage.getItem('user');\n          const user = useSelector(selectUser);\n          if (token !== undefined && token !== null && token !== \"\" && user !== null && user !== undefined) {\n            try {\n              console.log(\"loading my traccks\");\n              console.log(token);\n              const response = await fetch(`https://localhost:7090/api/User/UserByToken`, {\n                headers: {\n                  \"Authorization\": `Bearer ${token}`\n                }\n              });\n              if (response) {\n                let id = (await response.json()).id;\n                console.log(id);\n                try {\n                  // console.log(\"hello3\")\n                  // let token=localStorage.getItem('user');\n                  // console.log(token)\n                  const response2 = await fetch(`https://localhost:7090/api/Track/MyTracks/${id}`, {\n                    headers: {\n                      \"Authorization\": `Bearer ${token}`\n                    }\n                  });\n                  if (response2) {\n                    let res = await response2.json();\n                    console.log(res);\n                    //   dispatch(getAllTracks(res))\n                    return res;\n                  } else {\n                    console.error('Failed to fetch picture');\n                  }\n                } catch (error) {\n                  console.error('Error fetching picture:', error);\n                }\n              } else {\n                console.error('Failed to fetch picture');\n              }\n            } catch (error) {\n              console.error('Error fetching picture:', error);\n            }\n          } else {\n            localStorage.Clear();\n            const navigate = useNavigate();\n          }\n        }, \"U3or3JYmMmOP/2q9RbAKCTmxCGI=\", false, function () {\n          return [useSelector, useNavigate];\n        })\n      }, {\n        path: 'updateTrack/:id',\n        element: /*#__PURE__*/_jsxDEV(UpdateTrack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 41\n        }, this),\n        loader: async ({\n          params\n        }) => {\n          console.log(\"edit\");\n          const track = await getTrackById(Number(params.id));\n          console.log(track);\n          return track;\n        }\n      }, {\n        path: 'addTrack',\n        element: /*#__PURE__*/_jsxDEV(AddTrackPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 41\n        }, this)\n      }]\n    }, {\n      path: 'favorites',\n      element: /*#__PURE__*/_jsxDEV(MyFavoritesPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }, this),\n      loader: async () => {\n        const token = localStorage.getItem('user');\n        const user = await (await getUserByToken(token)).json();\n        const u = await getUser(user.id);\n        console.log(u);\n        return u.favourites;\n      }\n    }, {\n      path: 'myProfile',\n      element: /*#__PURE__*/_jsxDEV(UpdateUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }, this),\n      loader: async () => {\n        const token = localStorage.getItem('user');\n        const user = await (await getUserByToken(token)).json();\n        const u = await getUser(user.id);\n        return u;\n      }\n    }, {\n      path: 'updateProfile'\n    }]\n  }, {\n    path: '/SignIn',\n    element: /*#__PURE__*/_jsxDEV(SignUpPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 26\n    }, this)\n  }, {\n    path: '/Login'\n    // element: <Login/>\n  }, {\n    path: '/findTrack',\n    element: /*#__PURE__*/_jsxDEV(TrackPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }, this),\n    loader: async () => {\n      console.log(\"find track loader\");\n      let tracks = await getTrackByArea(\"north\");\n      return tracks;\n    }\n  }, {\n    path: '/findTrack/:option',\n    element: /*#__PURE__*/_jsxDEV(TrackPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }, this),\n    loader: async ({\n      params\n    }) => {\n      console.log(\"find track loader\");\n      let tracks = [];\n      if (params.option !== \"\" && params.option !== undefined && params.option !== null) {\n        tracks = await getTracks();\n        tracks = tracks.filter(value => {\n          if (params.option == \"forest\" && getViewById(value.viewId) === \"forest\") {\n            return true;\n          }\n          if (params.option == \"sea\" && getViewById(value.viewId) === \"sea\") {\n            return true;\n          }\n          if (params.option == \"dessert\" && getViewById(value.viewId) === \"dessert\") {\n            return true;\n          }\n          if (params.option === \"market\" && getViewById(value.viewId) === \"market\") {\n            return true;\n          }\n          if (params.option == \"city\" && getViewById(value.viewId) === \"city\") {\n            return true;\n          }\n          if (params.option == \"family\" && getCompanyById(value.companyForTripId) === \"with family\") {\n            return true;\n          }\n          return false;\n        });\n      } else {\n        tracks = await getTrackByArea(\"north\");\n      }\n      return tracks;\n    }\n  }, {\n    path: '/viewTrack'\n  }]\n}, {\n  path: '*',\n  element: /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 18\n  }, this)\n}]);","map":{"version":3,"names":["React","Navigate","createBrowserRouter","useNavigate","Layout","HomePage","SignUpPage","TrackPage","AddTrackPage","MyTracksPage","UpdateTrack","getTrackByArea","getTrackById","getTracks","UpdateUser","getUser","getUserByToken","MyFavoritesPage","getCompanyById","getViewById","useSelector","selectUser","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","loader","_s","token","localStorage","getItem","user","undefined","console","log","response","fetch","headers","id","json","response2","res","error","Clear","navigate","params","track","Number","u","favourites","tracks","option","filter","value","viewId","companyForTripId","to"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/routes/router.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate as BigNav, Navigate, createBrowserRouter, useNavigate } from \"react-router-dom\";\r\n// import Layout from \"./Layout/Layout\";\r\n// import Home from \"./component/General/home\";\r\n// import Login from \"./component/General/Login\";\r\n// import SignIn from './component/General/SignIn';\r\n// import MyProfile from \"./component/User/myProfile\";\r\n\r\nimport Layout from \"../layouts/Layout\";\r\n// import React from 'react';\r\nimport HomePage from \"../pages/HomePage\";\r\nimport SignUpForm from '../sections/SignUpForm';\r\nimport SignUpPage from '../pages/SignUpPage';\r\nimport TrackPage from '../pages/TracksPage';\r\nimport MyTracks from '../sections/MyTracks';\r\nimport AddTrackPage from '../pages/AddTrackPage';\r\nimport MyTracksPage from '../pages/MyTracksPage';\r\nimport UpdateTrack from '../sections/UpdateTrack';\r\nimport { getTrackByArea, getTrackById, getTracks } from '../services/track';\r\nimport UpdateUser from '../sections/UpdateUser';\r\nimport { getUser, getUserByToken } from '../services/user';\r\nimport MyFavoritesPage from '../pages/MyFavoritesPage';\r\nimport { Track } from '../types/Track';\r\n// import { getViewById } from '../utils/Mapper';\r\nimport { getCompanyById,getViewById } from '../services/Mapper';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../redux/user/user.selector';\r\nexport const router = createBrowserRouter([\r\n    {\r\n        path: '/',\r\n        element:<Layout/>,\r\n        children: [\r\n            {\r\n                path: '/',\r\n                element: <HomePage/>,\r\n            },\r\n            \r\n            {\r\n                path: 'user/',\r\n                // element: <h1>Products</h1>\r\n                children:[\r\n                    \r\n                    {\r\n                        path:'myTracks/',\r\n                        children:[\r\n                            {\r\n                                path:'',\r\n                                element:<MyTracksPage/>,\r\n                                loader: async()=>{\r\n                                    let token=localStorage.getItem('user')\r\n                                    const user=useSelector(selectUser)\r\n\r\n                                    if(token!==undefined&&token!==null&&token!==\"\"&&user!==null&&user!==undefined){\r\n                                        try {\r\n                                            console.log(\"loading my traccks\")\r\n                                            \r\n                                            console.log(token)\r\n                                            const response = await fetch(`https://localhost:7090/api/User/UserByToken`,{headers:{\"Authorization\": `Bearer ${token}`}});\r\n                                            if (response) {\r\n                                                let id=(await response.json()).id\r\n                                                console.log(id)\r\n                                                try {\r\n                                                    // console.log(\"hello3\")\r\n                                                    // let token=localStorage.getItem('user');\r\n                                                    // console.log(token)\r\n                                                    const response2 = await fetch(`https://localhost:7090/api/Track/MyTracks/${id}`,{headers:{\"Authorization\": `Bearer ${token}`}});\r\n                                                    if (response2) {\r\n                                                        let res=await response2.json()\r\n                                                        console.log(res)\r\n                                                        //   dispatch(getAllTracks(res))\r\n                                                        return res;\r\n                                                    \r\n                                                    } else {\r\n                                                        console.error('Failed to fetch picture');\r\n                                                    }\r\n                                                } catch (error) {\r\n                                                    console.error('Error fetching picture:', error);\r\n                                                }\r\n                                            } else {\r\n                                                console.error('Failed to fetch picture');\r\n                                            }\r\n                                        } catch (error) {\r\n                                            console.error('Error fetching picture:', error);\r\n                                        }\r\n\r\n                                    }else{\r\n                                        localStorage.Clear()\r\n                                        const navigate=useNavigate()\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                path:'updateTrack/:id',\r\n                                element:<UpdateTrack/>,\r\n                                loader: async ({ params }) => {\r\n                                    console.log(\"edit\")\r\n                                    const track = await getTrackById(Number(params.id!))\r\n                                    console.log(track)\r\n                                    return track\r\n                \r\n                                },\r\n                            },\r\n                            {\r\n                                path:'addTrack',\r\n                                element:<AddTrackPage/>\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        path:'favorites',\r\n                        element:<MyFavoritesPage/>,\r\n                        loader:async() => {\r\n                            const token=localStorage.getItem('user')\r\n                            const user=await (await getUserByToken(token!)).json()\r\n                            const u=await getUser(user.id)\r\n                            console.log(u)\r\n                            return u.favourites;\r\n        \r\n                        }\r\n                    },\r\n                    {\r\n                        path:'myProfile',\r\n                        element:<UpdateUser />,\r\n                        loader:async() => {\r\n                            const token=localStorage.getItem('user')\r\n                            const user=await (await getUserByToken(token!)).json()\r\n                            const u=await getUser(user.id)\r\n                            return u;\r\n        \r\n                        }\r\n                    },\r\n                    {\r\n                        path:'updateProfile'\r\n                    }\r\n                    \r\n                ]\r\n            },\r\n            {\r\n                path: '/SignIn',\r\n                element: <SignUpPage/>\r\n            },\r\n            {\r\n                path: '/Login',\r\n                // element: <Login/>\r\n            },\r\n            {\r\n                path: '/findTrack',\r\n                element:<TrackPage/>,\r\n                loader:async() => {\r\n                    console.log(\"find track loader\")\r\n                    let tracks=await getTrackByArea(\"north\");\r\n                    return tracks\r\n                }\r\n            },\r\n            {\r\n                path: '/findTrack/:option',\r\n                element:<TrackPage/>,\r\n                loader:async({params}) => {\r\n                    \r\n                    console.log(\"find track loader\")\r\n                    let tracks=[]as Track[];\r\n                     \r\n                    if(params.option!==\"\"&&params.option!==undefined&&params.option!==null)\r\n                    {\r\n                        tracks=await getTracks();\r\n                        tracks=tracks.filter((value)=>{\r\n                            if(params.option==\"forest\"&&getViewById( value.viewId)===\"forest\"){\r\n                                return true;\r\n                            }\r\n                            if(params.option==\"sea\"&&getViewById( value.viewId)===\"sea\"){\r\n                                return true;\r\n                            }\r\n                            if(params.option==\"dessert\"&&getViewById( value.viewId)===\"dessert\"){\r\n                                return true;\r\n                            }\r\n                            if(params.option===\"market\"&&getViewById( value.viewId)===\"market\"){\r\n                                return true;\r\n                            }\r\n                            if(params.option==\"city\"&&getViewById( value.viewId)===\"city\"){\r\n                                return true;\r\n                            }\r\n                            if(params.option==\"family\"&&getCompanyById( value.companyForTripId)===\"with family\"){\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        });\r\n                    }else{\r\n                        tracks=await getTrackByArea(\"north\");\r\n                    }\r\n                    return tracks;\r\n                }\r\n            },\r\n            {\r\n                path:'/viewTrack',\r\n                \r\n            }\r\n            \r\n\r\n        ]\r\n    },\r\n   \r\n    {\r\n        path: '*',\r\n        element: <Navigate to=\"/\"/>,\r\n    },\r\n\r\n]);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}