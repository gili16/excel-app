{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\components\\\\CommentsDrawer.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { IconButton } from '@mui/material';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentsDrawer(props) {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [uploaded, setUploaded] = useState(false);\n  const [comments, setComments] = useState(null);\n  const toggleDrawer = newOpen => () => {\n    setOpen(newOpen);\n  };\n  async function uploadComments() {\n    if (!uploaded) {\n      setComments;\n    }\n  }\n  const DrawerList = /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleDrawer(true),\n      \"aria-label\": \"edit\",\n      children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer\n    //   sx={{backgroundColor:'grey'}} \n    , {\n      anchor: 'right',\n      open: open,\n      onClose: toggleDrawer(false),\n      children: DrawerList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsDrawer, \"vSGt/F7VJ1Vp+IQOOECK7JPhbfs=\");\n_c = CommentsDrawer;\nvar _c;\n$RefreshReg$(_c, \"CommentsDrawer\");","map":{"version":3,"names":["React","Box","Drawer","List","Divider","ListItem","ListItemButton","ListItemIcon","ListItemText","InboxIcon","MailIcon","IconButton","CommentIcon","useState","jsxDEV","_jsxDEV","CommentsDrawer","props","_s","open","setOpen","uploaded","setUploaded","comments","setComments","toggleDrawer","newOpen","uploadComments","DrawerList","sx","width","role","onClick","children","map","text","index","disablePadding","fileName","_jsxFileName","lineNumber","columnNumber","primary","anchor","onClose","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/components/CommentsDrawer.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport { IconButton } from '@mui/material';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport { useState } from 'react';\r\n\r\nexport default function CommentsDrawer(props:{trackId:number}) {\r\n  const [open, setOpen] = React.useState(false);\r\n    const [uploaded,setUploaded]=useState(false)\r\n    const [comments, setComments]=useState<Comment[]|null>(null)\r\n  const toggleDrawer = (newOpen: boolean) => () => {\r\n    setOpen(newOpen);\r\n  };\r\n  async function uploadComments(){\r\n    if(!uploaded){\r\n        setComments\r\n    }\r\n  }\r\n  const DrawerList = (\r\n    <Box sx={{ width: 250 }} role=\"presentation\" onClick={toggleDrawer(false)}>\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem key={text} disablePadding>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem key={text} disablePadding>\r\n            <ListItemButton>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={toggleDrawer(true)} aria-label=\"edit\">\r\n        <CommentIcon/>\r\n        </IconButton>\r\n      <Drawer\r\n    //   sx={{backgroundColor:'grey'}} \r\n      anchor={'right'} open={open} onClose={toggleDrawer(false)}>\r\n        {DrawerList}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}