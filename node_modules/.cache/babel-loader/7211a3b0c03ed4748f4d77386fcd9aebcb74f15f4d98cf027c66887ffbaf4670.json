{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\landa\\\\Documents\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05D9\\u05D3\\\\react\\\\my-final-project\\\\src\\\\components\\\\MyAutoComplete.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { useSelector } from \"react-redux\";\nimport { selectStatus } from \"../redux/status/status.selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyAutocomplete = props => {\n  _s();\n  const status = useSelector(selectStatus);\n  const handleInputChange = (event, value) => {\n    if (option) {\n      // If an option is selected, pass its value to the onChange function\n      props.onChange(option.value);\n    } else {\n      // If no option is selected (i.e., when the user clears the input), pass null to the onChange function\n      props.onChange(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    disablePortal: true,\n    id: \"status\",\n    options: status,\n    sx: {\n      width: 300\n    },\n    onChange: handleInputChange,\n    onInputChange: handleInputChange\n    // Pass the handleInputChange function to onChange prop\n    ,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(MyAutocomplete, \"GVUeGpr3Za8amOOf1RQAN5UgC0Q=\", false, function () {\n  return [useSelector];\n});\n_c = MyAutocomplete;\nexport default MyAutocomplete;\nvar _c;\n$RefreshReg$(_c, \"MyAutocomplete\");","map":{"version":3,"names":["React","Autocomplete","TextField","useSelector","selectStatus","jsxDEV","_jsxDEV","MyAutocomplete","props","_s","status","handleInputChange","event","value","option","onChange","disablePortal","id","options","sx","width","onInputChange","renderInput","params","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/components/MyAutoComplete.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStatus } from \"../redux/status/status.selector\";\r\n\r\nconst MyAutocomplete = (props:{ onChange:(value:any)=>void }) => {\r\n    const status = useSelector(selectStatus)\r\n    const handleInputChange = (event:any, value:any) => {\r\n        if (option) {\r\n          // If an option is selected, pass its value to the onChange function\r\n          props.onChange(option.value);\r\n        } else {\r\n          // If no option is selected (i.e., when the user clears the input), pass null to the onChange function\r\n          props.onChange(null);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <Autocomplete\r\n      disablePortal\r\n      id=\"status\"\r\n      options={status}\r\n      sx={{ width: 300 }}\r\n      onChange={handleInputChange} \r\n      onInputChange={handleInputChange}\r\n      // Pass the handleInputChange function to onChange prop\r\n      renderInput={(params) => <TextField {...params} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyAutocomplete;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,cAAc,GAAIC,KAAoC,IAAK;EAAAC,EAAA;EAC7D,MAAMC,MAAM,GAAGP,WAAW,CAACC,YAAY,CAAC;EACxC,MAAMO,iBAAiB,GAAGA,CAACC,KAAS,EAAEC,KAAS,KAAK;IAChD,IAAIC,MAAM,EAAE;MACV;MACAN,KAAK,CAACO,QAAQ,CAACD,MAAM,CAACD,KAAK,CAAC;IAC9B,CAAC,MAAM;MACL;MACAL,KAAK,CAACO,QAAQ,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAEL,oBACET,OAAA,CAACL,YAAY;IACXe,aAAa;IACbC,EAAE,EAAC,QAAQ;IACXC,OAAO,EAAER,MAAO;IAChBS,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IACnBL,QAAQ,EAAEJ,iBAAkB;IAC5BU,aAAa,EAAEV;IACf;IAAA;IACAW,WAAW,EAAGC,MAAM,iBAAKjB,OAAA,CAACJ,SAAS;MAAA,GAAKqB;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEN,CAAC;AAAClB,EAAA,CAxBIF,cAAc;EAAA,QACDJ,WAAW;AAAA;AAAAyB,EAAA,GADxBrB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}