{"ast":null,"code":"import axios from '../utils/axios.util';\nimport originalAxios from 'axios';\nexport const getUsers = async () => {\n  const response = await fetch('https://localhost:7090/api/User');\n  console.log(response);\n  // לקריאת get & delete אין body\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\n  const users = await response.json();\n  return users;\n};\nexport const getUserByToken = async token => {\n  console.log(\"hihi\");\n  const response = await fetch(`https://localhost:7090/api/User/UserByToken`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  console.log(response.status);\n  // console.log(await response.text());\n  // const user=await response.json()\n  // לקריאת get & delete אין body\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\n  // const users = await response.json()\n\n  return response;\n};\nexport const getUser = async id => {\n  const response = await fetch(`https://localhost:7090/api/User/${id}`);\n  // לקריאת get & delete אין body\n  // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\n  const user = await response.json();\n  return user;\n};\nexport const addUser = async user => {\n  // console.log(user)\n  const response = await axios.post('/User', user, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  const newUser = response.data;\n  return newUser;\n};\nexport const updateUser = async (id, user, token) => {\n  console.log(\"hihi2\");\n  const response = await originalAxios.put(`https://localhost:7090/api/User/${id}`, user, {\n    headers: {\n      \"Content-Type\": 'multipart/form-data',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const updatedUser = response.data;\n  return updatedUser;\n};\nexport const addFavorite = async (id, favorite, token) => {\n  console.log(\"hihi2\");\n  const response = await originalAxios.put(`https://localhost:7090/api/User/AddFavorite/${id}`, track, {\n    headers: {\n      \"Content-Type\": 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const updatedUser = response.data;\n  return updatedUser;\n};\nexport const deleteFavorite = async (id, favorite, token) => {\n  console.log(\"hihi2\");\n  const response = await originalAxios.put(`https://localhost:7090/api/User/${id}`, track, {\n    headers: {\n      \"Content-Type\": 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const updatedUser = response.data;\n  return updatedUser;\n};\nexport const deleteUser = async id => {\n  const response = await axios.delete(`/User/${id}`);\n  return response;\n};\nexport const Login = async mail => {\n  const response = await originalAxios.post(`https://localhost:7090/Login/${mail}`);\n  return response;\n};\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","originalAxios","getUsers","response","fetch","console","log","users","json","getUserByToken","token","headers","status","getUser","id","user","addUser","post","newUser","data","updateUser","put","Authorization","updatedUser","addFavorite","favorite","track","deleteFavorite","deleteUser","delete","Login","mail","_c","$RefreshReg$"],"sources":["C:/Users/landa/Documents/לימודים/תכנות יד/react/my-final-project/src/services/user.tsx"],"sourcesContent":["import axios from '../utils/axios.util'\r\nimport { User} from \"../types/user.types\"\r\nimport originalAxios from 'axios'\r\nimport { Track } from '../types/Track'\r\n\r\nexport const getUsers = async () => {\r\n    const response = await fetch('https://localhost:7090/api/User')\r\n    console.log(response)\r\n    // לקריאת get & delete אין body\r\n    // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\r\n    const users = await response.json()\r\n    \r\n    return users\r\n}\r\nexport const getUserByToken = async (token:string) => {\r\n    console.log(\"hihi\")\r\n    const response = await fetch(`https://localhost:7090/api/User/UserByToken`,{headers:{\"Authorization\": `Bearer ${token}`}});\r\n    console.log(response.status);\r\n// console.log(await response.text());\r\n    // const user=await response.json()\r\n    // לקריאת get & delete אין body\r\n    // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\r\n    // const users = await response.json()\r\n    \r\n    return response\r\n}\r\n\r\nexport const getUser = async (id:number) => {\r\n    \r\n    const response = await fetch(`https://localhost:7090/api/User/${id}`)\r\n    // לקריאת get & delete אין body\r\n    // const response = await fetch('https://jsonplaceholder.typicode.com/todos', { method: 'POST', body: JSON.stringify({}) })\r\n    const user = await response.json()\r\n    \r\n    return user\r\n}\r\n\r\nexport const addUser= async (user:FormData) => {\r\n    // console.log(user)\r\n    const response = await axios.post('/User', user, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n    const newUser = response.data\r\n    return newUser\r\n}\r\n\r\nexport const updateUser = async (id:number,user:FormData,token:string) => {\r\n    console.log(\"hihi2\")\r\n    const response = await originalAxios.put(`https://localhost:7090/api/User/${id}`, user,{\r\n        headers:{\r\n            \"Content-Type\": 'multipart/form-data',\r\n            Authorization:`Bearer ${token}`,\r\n        }\r\n    });\r\n    const updatedUser = response.data\r\n    return updatedUser\r\n}\r\nexport const addFavorite = async (id:number,favorite:Track,token:string) => {\r\n    console.log(\"hihi2\")\r\n    const response = await originalAxios.put(`https://localhost:7090/api/User/AddFavorite/${id}`, track,{\r\n        headers:{\r\n            \"Content-Type\": 'application/json',\r\n            Authorization:`Bearer ${token}`,\r\n        }\r\n    });\r\n    const updatedUser = response.data\r\n    return updatedUser\r\n}\r\nexport const deleteFavorite = async (id:number,favorite:Track,token:string) => {\r\n    console.log(\"hihi2\")\r\n    const response = await originalAxios.put(`https://localhost:7090/api/User/${id}`, track,{\r\n        headers:{\r\n            \"Content-Type\": 'application/json',\r\n            Authorization:`Bearer ${token}`,\r\n        }\r\n    });\r\n    const updatedUser = response.data\r\n    return updatedUser\r\n}\r\nexport const deleteUser = async (id: number) => {\r\n    const response = await axios.delete(`/User/${id}`)\r\n    return response\r\n}\r\n\r\nexport const Login = async (mail:string) => {\r\n    const response = await originalAxios.post(`https://localhost:7090/Login/${mail}`)\r\n    return response\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}